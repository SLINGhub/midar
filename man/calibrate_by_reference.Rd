% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc-ref-normalization.R
\name{calibrate_by_reference}
\alias{calibrate_by_reference}
\title{Calibrate Features Values Using a Reference Sample}
\usage{
calibrate_by_reference(
  data,
  variable,
  reference_sample_id,
  absolute_calibration,
  summarize_fun = "mean",
  undefined_conc_action = NULL
)
}
\arguments{
\item{data}{A \code{MidarExperiment} object containing the metabolomics data to be normalized}

\item{variable}{Character string indicating which data type to calibrate Must be
one of: "intensity", "norm_intensity", or "conc"}

\item{reference_sample_id}{Character vector specifying the sample ID(s) to use as
reference(s) or standards}

\item{absolute_calibration}{Logical indicating whether to perform absolute calibration using
known concentrations of the reference sample (TRUE) or relative calibration (FALSE).}

\item{summarize_fun}{Either "mean" or "median". If \code{absolute_calibration = TRUE},
this function is used to summarize the reference sample concentrations across analyses of specified \code{reference_sample_id}. Default is "mean".}

\item{undefined_conc_action}{Character string specifying how to handle features
without defined concentrations in reference samples when \code{absolute_calibration = TRUE}.
Must be one of: "original" (keep original values), "na" (set to NA), or "error". Default is "keep".}
}
\value{
A \code{MidarExperiment} object with calibrated data
}
\description{
Calibrates features abundances using a reference sample, either by re-calibrating
absolute concentrations using known concentrations in the reference samples or
by calculating relative ratios to reference samples.

Two calibration approaches are supported:
\enumerate{
\item Absolute calibration (\code{absolute_calibration = TRUE}):
Recalibrates features to concentrations using known reference sample values.

Requirements:
\itemize{
\item \code{analyte_id} and \code{sample_id} must be defined in analysis metadata
\item Known analyte concentrations must be defined for the reference sample in QC concentration metadata
}

The function:
\itemize{
\item Overwrites original values (\code{intensity}, \code{norm_intensity}, or \code{conc}) with recalibrated values
\item Stores original values in \verb{feature_[VARIABLE]_beforecal}, where \verb{[VARIABLE]} is \code{conc}, \code{norm_intensity}, or \code{intensity}
\item Can process \code{conc}, \code{norm_intensity}, or \code{intensity} data
\item Always outputs concentration (\code{conc}) in concentration unit defined for the analytes in the reference sample in the QC concentration metadata.
}

When multiple analyses of the same reference sample are present, their concentrations are summarized using
\code{summarize_fun} ("mean" or "median", default: "mean").

Options for undefined analyte concentrations for the reference sample (\code{undefined_conc_handling}):
\itemize{
\item "original": Keep original values (meaning the non-calibrated values will be returned)
\item "na": Set undefined features to NA
\item "error": Raise error for undefined features
An error will be raised  if no concentrations are defined for any features.
}
}

To export:
\itemize{
\item Use \code{save_dataset_csv()} with \verb{variable = "[VARIABLE]}
\item For MiDAR XLSX report, use \code{save_report_xlsx()} also with  \verb{variable = "[VARIABLE]} to
include the re-calibrated values of the filtered dataset in the report.
\item Set \verb{[VARIABLE]} = \code{conc}, \code{norm_intensity}, or \code{intensity} to export re-calibrated values, or
\code{conc_beforecal}, \code{norm_intensity_beforecal}, or \code{intensity_beforecal} to export the original values.
}
\enumerate{
\item Relative calibration (\code{absolute_calibration = FALSE}):
Expresses sample features values as ratios relative to corresponding features in the reference sample.
\itemize{
\item Applies uniformly to all features
\item Works with \code{conc}, \code{norm_intensity}, or \code{intensity} data
\item Stores results in \verb{feature_[VARIABLE]_normalized}, where \verb{[VARIABLE]} is \code{conc}, \code{norm_intensity}, or \code{intensity}
}

To export:
\itemize{
\item Use \code{save_dataset_csv()} with \code{variable = "feature_[VARIABLE]_normalized"}
\item For MiDAR XLSX report, use \code{save_report_xlsx()} with same variable setting as for \code{save_dataset_csv()} to
include the normalized values of the filtered dataset in the report.
Unfiltered normalized feature values will be included by default in the report if present
}
}
}
\examples{
## ---- pkgdown = FALSE ------------------------------------------------
\dontrun{
  # Relative calibration
  mexp <- calibrate_by_reference(
    data = mexp,
    variable = "conc",
    reference_sample_id = "NIST-SRM1950",
    absolute_calibration = TRUE,
    summarize_fun = "mean",
    undefined_conc_action = "original"
  )

  # Export relative calibration results
  save_dataset_csv(mexp, "mexp_calibrated.csv", variable = "conc")

  # Export non-calibrated results
  save_dataset_csv(mexp, "mexp_calibrated.csv", variable = "conc_beforecal")

  # Export relative calibration results in the MiDAR XLSX report
  save_report_xlsx(mexp, "report.xlsx", variable = "conc")

  # Absolute calibration example
  mexp <- calibrate_by_reference(
    data = mexp,
    variable = "conc",
    reference_sample_id = "NIST-SRM1950",
    absolute_calibration = FALSE
  )

  # Export relative calibration results
  save_dataset_csv(mexp, "mexp_calibrated.csv", variable = "conc_normalized")

  # Export relative calibration results in the MiDAR XLSX report
  save_report_xlsx(mexp, "report.xlsx", variable = "conc_normalized")
}

}
\seealso{
\code{\link[=normalize_by_istd]{normalize_by_istd()}}, \code{\link[=quantify_by_istd]{quantify_by_istd()}}, \code{\link[=quantify_by_calibration]{quantify_by_calibration()}}
}
\keyword{internal}
