% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions-math.R
\name{get_outlier_bounds}
\alias{get_outlier_bounds}
\title{Get outlier bounds via different methods}
\usage{
get_outlier_bounds(
  x,
  method = c("iqr", "mad", "sd", "quantile", "z_normal", "z_robust", "fold_change"),
  k = NULL,
  outlier_log = FALSE,
  na.rm = FALSE
)
}
\arguments{
\item{x}{A numeric vector.}

\item{method}{Character string: one of \code{"iqr"}, \code{"mad"}, \code{"sd"},
\code{"quantile"}, \code{"z_normal"}, \code{"z_robust"}, or \code{"fold_change"}.}

\item{k}{Numeric multiplier or threshold. Defaults depend on method:
\itemize{
\item \code{"iqr"}: 1.5 (multiplier of IQR)
\item \code{"mad"}: 3 (multiplier of MAD)
\item \code{"sd"}: 3 (multiplier of SD)
\item \code{"z_normal"}: 3 (threshold in SD units)
\item \code{"z_robust"}: 3.5 (threshold in robust Z units)
\item \code{"fold_change"}: 2 (fold-change multiplier, assumes log-transformed data)
\item \code{"quantile"}: 0.01 (lower/upper quantiles, e.g., 1\% and 99\%)
}}

\item{outlier_log}{Logical. If \code{TRUE}, applies log10 transformation to \code{x}}

\item{na.rm}{Logical. Should missing values be removed? Default is \code{FALSE}.}
}
\value{
A numeric vector of length 2: \code{c(lower_bound, upper_bound)} representing
the smallest and largest observed values within the computed fences.
}
\description{
Computes lower and upper bounds for a numeric vector using one of several methods:
\itemize{
\item \code{"iqr"}: Tukey's Interquartile Range fences
\item \code{"mad"}: Median Absolute Deviation
\item \code{"sd"}: Standard deviation from mean
\item \code{"quantile"}: Fixed percentile cutoffs
\item \code{"z_normal"}: Standard Z-score using mean & SD
\item \code{"z_robust"}: Modified Z-score using median & MAD
\item \code{"fold_change"}: Median ± log10(k), assumes log-transformed data
}
}
\examples{
get_outlier_bounds(c(1, 2, 3, 4, 100), "iqr")
get_outlier_bounds(c(1, 2, 3, 4, 100), "mad")
get_outlier_bounds(c(1, 2, 3, 4, 100), "sd")
get_outlier_bounds(c(1, 2, 3, 4, 100), "quantile", k = 0.05)
get_outlier_bounds(c(1, 2, 3, 4, 100), "z_normal")
get_outlier_bounds(c(1, 2, 3, 4, 100), "z_robust")
get_outlier_bounds(log10(c(1, 2, 4, 8)), "fold_change")       # default 2×
get_outlier_bounds(log10(c(1, 2, 4, 8)), "fold_change", k = 3) # 3× fold-change

}
