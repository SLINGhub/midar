[{"path":[]},{"path":"https://slinghub.github.io/midar/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://slinghub.github.io/midar/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://slinghub.github.io/midar/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://slinghub.github.io/midar/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://slinghub.github.io/midar/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement Singapore Lipidomics Incubator. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://slinghub.github.io/midar/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://slinghub.github.io/midar/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://slinghub.github.io/midar/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://slinghub.github.io/midar/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://slinghub.github.io/midar/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://slinghub.github.io/midar/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://slinghub.github.io/midar/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Singapore Lipidomics Incubator Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://slinghub.github.io/midar/articles/1_datastructure.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Data Structure of MiDAR","text":" MidarExperiment object organizes data two main categories: data metadata. data category includes tables raw data, processed data, feature metrics, metadata category encompasses analysis annotations, feature annotations, internal standard annotations, batch annotations, response curve annotations, calibration curves. Key identifiers, analysis_id analyses feature_id features, used link data metadata integral functions package.","code":""},{"path":"https://slinghub.github.io/midar/articles/1_datastructure.html","id":"midarexperiment","dir":"Articles","previous_headings":"","what":"MidarExperiment","title":"Data Structure of MiDAR","text":"MidarExperiment object serves primary data container MiDAR workflow. encompasses experimental processed data, metadata, details applied processing steps, current data status. MiDAR functions data processing, management, visualization utilize MidarExperiment objects input output.","code":""},{"path":"https://slinghub.github.io/midar/articles/1_datastructure.html","id":"data-and-metadata","dir":"Articles","previous_headings":"","what":"Data and Metadata","title":"Data Structure of MiDAR","text":"Data within  MidarExperiment systematically organized data metadata categories, divided tables (data.frames).","code":""},{"path":[]},{"path":[]},{"path":"https://slinghub.github.io/midar/articles/1_datastructure.html","id":"key-data-identifiers","dir":"Articles","previous_headings":"","what":"Key Data Identifiers","title":"Data Structure of MiDAR","text":"following key data fields essential organizing data within MiDAR. Many MiDAR functions depend fields, exported data utilizes identifier names. Field Naming Considerations Certain field names differ conventional terminology (e.g., analysis_id instead  sample_id) enhance clarity prevent confusion identifiers. sample may measured multiple times across different methods processing replicates, necessitating distinct identifiers. Similarly, analytes can quantified multiple transitions adducts,  feature_id designated primary identifier.","code":""},{"path":"https://slinghub.github.io/midar/articles/BatchDriftCorrect.html","id":"batch-centering","dir":"Articles","previous_headings":"","what":"Batch-Centering","title":"Drift and Batch Correction","text":"Now let’s plot data batch correction.   Next, correct batch effects , time scaling variance.  Finally, can export corrected data using save_dataset_csv() function.","code":"# Correct batch effects - Set `correct_scale = TRUE` to scale also variance myexp <- correct_batch_centering(   data = myexp,    variable = \"conc\",   reference_qc_types = \"SPL\",    correct_scale = FALSE) #> Adding batch correction to `conc` data... #> ✔ Batch median-centering of 7 batches was applied to raw concentrations of all 2 features. #> ℹ The median CV of features in the study samples across batches increased by 1.1% (1.1 to 1.1%) to 44.0%. plot_runscatter(myexp, variable = \"conc_raw\", rows_page = 1, cols_page = 1) plot_runscatter(myexp, variable = \"conc\", rows_page = 1, cols_page = 1) # Correct batch effects - WITH scaling of variance myexp <- midar::correct_batch_centering(   myexp,    reference_qc_types = \"SPL\",    variable = \"conc\",   correct_scale = TRUE) #> Replacing previous `conc` batch correction... #> ✔ Batch median-centering of 7 batches was applied to raw concentrations of all 2 features. #> ℹ The median CV of features in the study samples across batches increased by 1.1% (1.1 to 1.1%) to 44.0%.  plot_runscatter(myexp, variable = \"conc\", rows_page = 1, cols_page = 1)"},{"path":"https://slinghub.github.io/midar/articles/BatchDriftCorrect.html","id":"drift-correction-and-batch-centering","dir":"Articles","previous_headings":"","what":"Drift Correction and Batch-Centering","title":"Drift and Batch Correction","text":"","code":"# Created a data object myexp <- midar::MidarExperiment(title = \"batch-effects\")  # Import a wide CSV file with some metadata  myexp <- import_data_csv(data = myexp,                            path = \"drift_batch_effect-simdata-u1000-sd100_7batches.csv\",                            variable_name = \"conc\",                            import_metadata = TRUE) #> ✔ Imported 1400 analyses with 1 features #> ℹ `feature_conc` selected as default feature intensity. Modify with `set_intensity_var()`. #> ✔ Analysis metadata associated with 1400 analyses. #> ✔ Feature metadata associated with 1 features. #> ℹ Analysis order was based on sequence of analysis results, as no timestamps were found. #> Use `set_analysis_order` to define alternative analysis orders.  # Within-batch drift correction (smoothing) based on study samples myexp <- midar::correct_drift_gaussiankernel(myexp,                                         variable = \"conc\",                                         reference_qc_types = \"SPL\",                                          within_batch = TRUE,                                          kernel_size = 10,                                          recalc_trend_after = TRUE,show_progress = T) #> Applying `conc` drift correction... #> ✔ Drift correction (batch-wise) was applied to raw concentrations of 1 of 1 features. #> ℹ The median CV of all features in study samples (batch medians) decreased by -5% (-5.0 to -5.0%) to 9.0%.  # Plot before and after batch correction  midar::plot_runscatter(myexp, variable = \"conc_raw\", rows_page = 1, cols_page = 1,                            show_trend = TRUE, show_progress = F) midar::plot_runscatter(myexp, variable = \"conc\", rows_page = 1, cols_page = 1,                            show_trend = TRUE, show_progress = F) # Correct between-batch effects (median centering) myexp <- midar::correct_batch_centering(myexp,                                          variable = \"conc\",                                         reference_qc_types = \"SPL\",                                          correct_scale = TRUE) #> Adding batch correction on top of `conc` drift-correction... #> ✔ Batch median-centering of 7 batches was applied to drift-corrected concentrations of all 1 features. #> ℹ The median CV of features in the study samples across batches increased by 0.6% (0.6 to 0.6%) to 39.4%. #Plot again the fully corrected data midar::plot_runscatter(myexp, variable = \"conc\", rows_page = 1, cols_page = 1,                            show_trend = TRUE, show_progress = F) # Save corrected data midar::save_dataset_csv(myexp,                          path = \"corrected-data.csv\",                          variable = \"conc\",                          filter_data = FALSE) #> ✔ Concentration values of 1400 analyses and 1 features have been exported."},{"path":"https://slinghub.github.io/midar/articles/annotating.html","id":"creating-a-midarexperiment-object","dir":"Articles","previous_headings":"","what":"Creating a MidarExperiment object","title":"MidarExperiment dataset object","text":"First {midar} package loaded create new MidarExperiment object. time can obtain summary status myexp object using print() function.","code":"library(midar) myexp <- MidarExperiment() print(myexp) #> Warning: Unknown or uninitialised column: `feature_id`."},{"path":"https://slinghub.github.io/midar/articles/annotating.html","id":"using-midarexperiment-objects","dir":"Articles","previous_headings":"","what":"Using MidarExperiment objects","title":"MidarExperiment dataset object","text":"MiDAR functions take MidarExperiment object input. Functions process update data return modified MidarExperiment object output, allowing used subsequent functions. can also use MidarExperiment objects R pipe chain. allows chain multiple functions together, making code streamlined easier read clearly indicating flow processing workflow. Multiple MidarExperiment objects can created processed independently within script.","code":"myexp <- MidarExperiment() myexp <- data_load_example(myexp, 1) myexp <- normalize_by_istd(myexp) myexp <- save_dataset_csv(myexp,                            \"mydata.csv\",                            variable = \"norm_intensity\",                            filter_data = FALSE) myexp <- myexp |>    MidarExperiment() |>   data_load_example(1) |>   normalize_by_istd() |>   save_dataset_csv(myexp,                     \"mydata.csv\",                     variable = \"norm_intensity\",                     filter_data = FALSE) myexp_panel_1 <- data_load_example(myexp, 1) myexp_panel_2 <- data_load_example(myexp, 1)"},{"path":"https://slinghub.github.io/midar/articles/annotating.html","id":"accessing-data-and-metadata","dir":"Articles","previous_headings":"","what":"Accessing data and metadata","title":"MidarExperiment dataset object","text":"Use specific functions access data metadata stored MidarExperiment object, rather directly accessing object slots. TODO","code":"myexp <- MidarExperiment() myexp <- data_load_example(myexp, 1) print(midar::get_analyticaldata(myexp))"},{"path":"https://slinghub.github.io/midar/articles/annotating.html","id":"saving-and-reading-midarexperiment-objects","dir":"Articles","previous_headings":"","what":"Saving and Reading MidarExperiment objects","title":"MidarExperiment dataset object","text":"","code":"myexp <- MidarExperiment() myexp <- data_load_example(myexp, 1) saveRDS(myexp, file = \"myexp-midar.rds\", compress = TRUE) my_saved_exp <- readRDS(file = \"myexp-midar.rds\") print(my_saved_exp)"},{"path":"https://slinghub.github.io/midar/articles/dataimport.html","id":"data-sources","dir":"Articles","previous_headings":"","what":"Data Sources","title":"Importing analytical data","text":"Following formats currently supported:","code":""},{"path":"https://slinghub.github.io/midar/articles/dataimport.html","id":"metadata-within-analytical-results","dir":"Articles","previous_headings":"","what":"Metadata within analytical results","title":"Importing analytical data","text":"analytical results contain metadata, sample feature annotations, can imported metadata MidarExperiment object well. imported metadata checked integrity consistency (see TODO) added annotation tables within MidarExperiment. include available metadata, set argument import_metadata = TRUE.","code":""},{"path":"https://slinghub.github.io/midar/articles/dataimport.html","id":"mrmkit-results","dir":"Articles","previous_headings":"","what":"MRMkit Results","title":"Importing analytical data","text":"Output files MRMkit, open-source peak integration software MRM data () can imported directly. Specific metadata present data file can imported well (`import_metadata = TRUE`)","code":"library(midar) filepath <- system.file(\"extdata/MRMkit_demo.tsv\", package = \"midar\") myexp <- MidarExperiment()  myexp <- import_data_mrmkit(myexp, filepath, import_metadata = TRUE)"},{"path":"https://slinghub.github.io/midar/articles/dataimport.html","id":"agilent-masshunter-quantitative","dir":"Articles","previous_headings":"","what":"Agilent MassHunter Quantitative","title":"Importing analytical data","text":"Peak integration results exported Agilent Masshunter Quant CSV format can imported. Samples must present rows, features columns. Import qualifier results supported. Sample, method result metadata present files can also imported (`import_metadata = TRUE`)","code":"filepath <- system.file(\"extdata/MHQuant_demo.csv\", package = \"midar\") myexp <- MidarExperiment()  myexp <- import_data_masshunter(myexp, filepath, import_metadata = TRUE)"},{"path":"https://slinghub.github.io/midar/articles/dataimport.html","id":"plain-csv-files","dir":"Articles","previous_headings":"","what":"Plain CSV files","title":"Importing analytical data","text":"Analysis results, whether raw intensities (e.g., peak areas) preprocessed data (e.g., concentrations), can provided plain CSV tables. tables, analyses (samples) arranged rows, features columns. specific data type table (e.g., area concentration) defined using  variable_name argument.","code":"filepath <- system.file(\"extdata/plain_wide_dataset.csv\", package = \"midar\") myexp <- MidarExperiment()  myexp <- midar::import_data_csv(   myexp, path = filepath,   variable_name = \"area\",    import_metadata = TRUE)"},{"path":"https://slinghub.github.io/midar/articles/dataimport.html","id":"importing-and-merging-multiple-files","dir":"Articles","previous_headings":"","what":"Importing and merging multiple files","title":"Importing analytical data","text":"Multiple data files can imported merged simultaneously. Users can either provide list file paths specify folder path import data files within directory. support multiple files useful raw data processing divided batches, leading separate result files. imported merged data checked consistency, ensuring analysis ID feature ID pair unique. means feature reported multiple times within analysis, can happend example feature sample integrated different raw data processing batches.","code":""},{"path":"https://slinghub.github.io/midar/articles/datastructure.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Data Structure of MiDAR","text":" MidarExperiment object organizes data two main categories: data metadata. data category includes tables raw data, processed data, feature metrics, metadata category encompasses analysis annotations, feature annotations, internal standard annotations, batch annotations, response curve annotations, calibration curves. Key identifiers, analysis_id analyses feature_id features, used link data metadata integral functions package.","code":""},{"path":"https://slinghub.github.io/midar/articles/datastructure.html","id":"midarexperiment","dir":"Articles","previous_headings":"","what":"MidarExperiment","title":"Data Structure of MiDAR","text":"MidarExperiment object serves primary data container MiDAR workflow. encompasses experimental processed data, metadata, details applied processing steps, current data status. MiDAR functions data processing, management, visualization utilize MidarExperiment objects input output.","code":""},{"path":"https://slinghub.github.io/midar/articles/datastructure.html","id":"data-and-metadata","dir":"Articles","previous_headings":"","what":"Data and Metadata","title":"Data Structure of MiDAR","text":"Data within MidarExperiment organized data metadata categories, divided tables (data.frames).","code":""},{"path":[]},{"path":[]},{"path":"https://slinghub.github.io/midar/articles/datastructure.html","id":"key-data-identifiers","dir":"Articles","previous_headings":"","what":"Key Data Identifiers","title":"Data Structure of MiDAR","text":"following key data fields essential organizing data within MiDAR. Many MiDAR functions depend fields, exported data utilizes identifier names. Field Naming Considerations Certain field names differ conventional terminology (e.g., analysis_id instead  sample_id) enhance clarity prevent confusion identifiers. sample may measured multiple times across different methods processing replicates, necessitating distinct identifiers. Similarly, analytes can quantified multiple transitions adducts,  feature_id designated primary identifier.","code":""},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"importing-mrmkit-results-with-integrated-peak-areas","dir":"Articles","previous_headings":"","what":"1. Importing MRMkit results with integrated peak areas","title":"MiDAR workflow","text":"begin importing MRMkit result file, contains areas integrated peaks (features) processed raw data files. addition, MRMkit result file also contains peak retention times widths, well metadata extracted mzML files, acquisition time stamp m/z values. import metadata setting import_metadata = TRUE. Type print(myexp) console get summary status. can explore myexp object RStudio clicking Environment panel top right.","code":"myexp <- midar::MidarExperiment(title = \"sPerfect\")  data_path <- \"datasets/sPerfect_MRMkit.tsv\" myexp <- import_data_mrmkit(data = myexp, path = data_path, import_metadata = TRUE) #> ✔ Imported 499 analyses with 503 features #> ℹ `feature_area` selected as default feature intensity. Modify with `set_intensity_var()`. #> ✔ Analysis metadata associated with 499 analyses. #> ✔ Feature metadata associated with 503 features."},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"a-glimpse-on-the-imported-mrmkit-results","dir":"Articles","previous_headings":"","what":"2. A glimpse on the imported MRMkit results","title":"MiDAR workflow","text":"Let us examine imported data executing code entering command View(myexp@dataset_orig) console. can observed, data long format, thereby enabling user view multiple parameters analysis-feature pair. Explore imported table using RStudio table viewer filter functionality.","code":"print(myexp@dataset_orig) # Better use `get_rawdata(mexp, \"original\")` #> # A tibble: 250,997 × 20 #>    analysis_id   raw_data_filename acquisition_time_stamp feature_id run_seq_num #>    <chr>         <chr>             <dttm>                 <chr>            <int> #>  1 Longit_BLANK… Longit_BLANK-01 … 2017-10-20 14:15:36    CE 14:0              1 #>  2 Longit_B-IST… Longit_B-ISTD 01… 2017-10-20 14:27:06    CE 14:0              2 #>  3 Longit_Un-IS… Longit_Un-ISTD 0… 2017-10-20 14:38:26    CE 14:0              3 #>  4 Longit_LTR 01 Longit_LTR 01.mz… 2017-10-20 14:49:48    CE 14:0              4 #>  5 Longit_TQC-1… Longit_TQC-10%.m… 2017-10-20 15:12:31    CE 14:0              5 #>  6 Longit_TQC-2… Longit_TQC-20%.m… 2017-10-20 15:23:51    CE 14:0              6 #>  7 Longit_TQC-4… Longit_TQC-40%.m… 2017-10-20 15:35:11    CE 14:0              7 #>  8 Longit_TQC-6… Longit_TQC-60%.m… 2017-10-20 15:46:31    CE 14:0              8 #>  9 Longit_TQC-8… Longit_TQC-80%.m… 2017-10-20 15:57:51    CE 14:0              9 #> 10 Longit_TQC-1… Longit_TQC-100%.… 2017-10-20 16:09:11    CE 14:0             10 #> # ℹ 250,987 more rows #> # ℹ 15 more variables: data_source <chr>, sample_type <chr>, batch_id <chr>, #> #   istd_feature_id <chr>, integration_qualifier <lgl>, feature_rt <dbl>, #> #   feature_area <dbl>, feature_height <dbl>, feature_fwhm <dbl>, #> #   feature_int_start <dbl>, feature_int_end <dbl>, method_polarity <chr>, #> #   method_precursor_mz <dbl>, method_product_mz <dbl>, #> #   method_collision_energy <dbl>"},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"analytical-design-and-timeline","dir":"Articles","previous_headings":"","what":"3. Analytical design and timeline","title":"MiDAR workflow","text":"overview analysis design timelines can provide useful information subsequent processing steps. plot illustrates batch structure, quality control (QC) samples included respective positions, additional information regarding date, duration, run time analysis. Show analysis timestamps show_timestamp = TRUE. long interruptions within batches?","code":"plot_runsequence(   myexp,    qc_types = NA,    show_batches = TRUE,    batches_as_shades = TRUE,    batch_shading_color = \"#fffbdb\",    segment_width = 0.5,   show_timestamp = FALSE)"},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"signal-trends-of-internal-standards","dir":"Articles","previous_headings":"","what":"4. Signal trends of Internal Standards","title":"MiDAR workflow","text":"can look internal standards (ISTDs) samples across six batches see analyses went. ISTD amount spiked sample (except SBLK) expect intensities samples sample types. observe? can set output_pdf = TRUE save plots PDF (see subfolder output).","code":"plot_runscatter(   data = myexp,   variable = \"intensity\",   qc_types = c(\"BQC\", \"TQC\", \"SPL\", \"PBLK\", \"SBLK\"),   plot_range_indices = NA, #get_batch_boundaries(myexp, c(1,6)),    include_feature_filter = \"ISTD\",    exclude_feature_filter = \"Hex|282\",   cap_outliers = TRUE,   log_scale = FALSE,    show_batches = TRUE,base_font_size = 5,   output_pdf = FALSE,   path = \"./output/runscatter_istd.pdf\",   cols_page = 4, rows_page = 3 ) #> Generating plots (3 pages)... #>  - done!"},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"adding-detailed-metadata","dir":"Articles","previous_headings":"","what":"5. Adding detailed metadata","title":"MiDAR workflow","text":"proceed processing, require additional metadata describing samples features. MiDAR Excel template provides solution collection, organisation pre-validation analysis metadata. Import metadata template using function . errors metadata (e.g. duplicate missing ID), import fail error message summary errors. metadata error-free, summary warnings notes metadata shown table, present. Check metadata working warnings, proceed using ignore_warnings = TRUE. Open XLSM file data folder explore metadata structure (click ‘Disable Macros’).","code":"file_path <- \"datasets/sPerfect_Metadata.xlsm\" myexp <- import_metadata_midarxlm(myexp, path = file_path, ignore_warnings = TRUE) #> ! Metadata has following warnings and notifications: #> -------------------------------------------------------------------------------------------- #>   Type Table    Column                Issue                           Count #> 1 W*   Analyses analysis_id           Analyses not in analysis data      15 #> 2 W*   Features feature_id            Feature(s) not in analysis data     4 #> 3 W*   Features feature_id            Feature(s) without metadata         1 #> 4 W*   ISTDs    quant_istd_feature_id Internal standard(s) not used       1 #> -------------------------------------------------------------------------------------------- #> E = Error, W = Warning, W* = Supressed Warning, N = Note #> -------------------------------------------------------------------------------------------- #> ✔ Analysis metadata associated with 499 analyses. #> ✔ Feature metadata associated with 502 features. #> ✔ Internal Standard metadata associated with 17 ISTDs. #> ✔ Response curve metadata associated with 12 analyses. myexp <- set_analysis_order(myexp, order_by = \"timestamp\") #> ✔ Analysis order set to \"timestamp\" myexp <- set_intensity_var(myexp, variable_name = \"area\") #> ✔ Default feature intensity variable set to \"area\""},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"overall-trends-and-possible-technical-outlier","dir":"Articles","previous_headings":"","what":"6. Overall trends and possible technical outlier","title":"MiDAR workflow","text":"examine overall technical trends issues affecting majority analytes (features), RLA (Relative Log Abundance) plot useful tool (De Livera et al., Analytical Chemistry, 2015). plot, features normalised (across within-batch medians) plotted boxplot per sample. plot can help identify potential pipetting errors, sample spillage, injection volume changes instrument sensitivity changes. First, run code . observations can made? , examine batch 6, uncommenting line #plot_range_indices =. see batch? Identify potential outlier sample setting x_axis_variable = \"analysis_id\". Next, set y-axis limits manually y_lim = c(-2,2) display analyses/batches inspect data trends fluctuations.","code":"midar::plot_rla_boxplot(   data = myexp,   rla_type_batch = c(\"within\"),   variable = \"intensity\",   qc_types = c(\"BQC\", \"SPL\", \"RQC\", \"TQC\", \"PBLK\"),    filter_data = FALSE,    #plot_range_indices = get_batch_boundaries(myexp, batch_ids = c(6,6)),    #y_lim = c(-3,3),   x_axis_variable = \"run_seq_num\",   ignore_outliers = FALSE, x_gridlines = FALSE,   batches_as_shades = FALSE,   linewidth = 0.1 )"},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"pca-plot-of-all-qc-types","dir":"Articles","previous_headings":"","what":"7. PCA plot of all QC types","title":"MiDAR workflow","text":"principal component analysis (PCA) plot provides alternative method obtaining overview study quality control (QC) samples, well identifying potential issues, batch effects, technical outliers, differences sample types. Add blanks sample dilutions plot, including \"PBLK\", \"RQC\" qc_types = . think resulting PCA plot suggests now?","code":"plot_pca(   data = myexp,    variable = \"feature_intensity\",    filter_data = FALSE,   pca_dim = c(1,2),   label_mad_threshold = 3,    qc_types = c(\"SPL\", \"BQC\", \"NIST\", \"TQC\"),   log_transform = TRUE,     point_size = 2, point_alpha = 0.7, font_base_size = 8, ellipse_alpha = 0.3,    exclude_istds = TRUE)"},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"exclude-technical-outliers","dir":"Articles","previous_headings":"","what":"8. Exclude technical outliers","title":"MiDAR workflow","text":"Based RLA PCA plots, flagged technical outlier decided remove downstream processing via function analyses_to_exclude(). now see new PCA plot? Explore also different PCA dimensions (modifying pca_dim).","code":"# Exclude the sample from the processing myexp <- exclude_analyses(myexp, analyses_to_exclude = c(\"Longit_batch6_51\"), replace_existing  = TRUE) #> ℹ 1 analyses were excluded for downstream processing. Please reprocess data.  # Replot the PCA plot_pca(   data = myexp,   variable = \"intensity\",   filter_data = FALSE,   pca_dim = c(1,2),   label_mad_threshold = 3,   qc_types = c(\"SPL\", \"BQC\", \"NIST\", \"TQC\"),   log_transform = TRUE,   point_size = 2, point_alpha = 0.7, font_base_size = 8, ellipse_alpha = 0.3,   exclude_istds = TRUE,   hide_text_from_labels = NA)"},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"response-curves","dir":"Articles","previous_headings":"","what":"9. Response curves","title":"MiDAR workflow","text":"linear response quantification prerequisite compared differences analyte concentrations samples. Given considerable dynamic range plasma lipid species abundances fact class-specific ISTD spiked single concentration, verifying linear response can valuable aspect analytical quality assessment. optimising injected sample amount primarily matter quality assurance (QA), differences instrument performance can affect dynamic range. Therefore, measured injection volume series start end analysis QC. Look response curves . see results? Change plotted lipid species modifying include_feature_filter (can use regular expressions). Save PDF lipids setting output_pdf = TRUE commenting (add # front ) include_feature_filter","code":"# Exclude very low abundant features myexp <- midar::filter_features_qc(myexp, min.intensity.median.spl = 200) #> Calculating feature QC metrics - please wait... #> ✔ New QC filter criteria were defined: 415 of 423 quantifier features meet QC criteria (excluding the 25 quantifier ISTD features).  #Plot the curves plot_responsecurves(   data = myexp,   variable = \"intensity\",   filter_data = TRUE,   include_feature_filter = \"^PC 3[0-5]\", # here we use regular expressions   output_pdf = FALSE, path = \"response-curves.pdf\",   cols_page = 5, rows_page = 4, ) #> Registered S3 methods overwritten by 'ggpp': #>   method                  from    #>   heightDetails.titleGrob ggplot2 #>   widthDetails.titleGrob  ggplot2 #> Generating plots (1 page):  |                                                          |                                                  |   0% #>   |                                                          |==================================================| 100% - done!"},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"isotope-interference-correction","dir":"Articles","previous_headings":"","what":"10. Isotope interference correction","title":"MiDAR workflow","text":"demonstrated course presentation, several instances peaks interest co-integrated interfering isotope peaks lipid species. intereferences can subtracted raw intensities (areas) using function, utilises information metadata. relative abundances interfering fragments obtained using LICAR (https://github.com/SLINGhub/LICAR). Check sheet “Features (Analytes)” metadata file (folder data). species affected? information need? correct M+3 isotope interference?","code":"myexp <- midar::correct_interferences(myexp) #> ✔ Interference-correction has been applied to 11 of the 502 features."},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"normalization-and-quantification-based-on-istds","dir":"Articles","previous_headings":"","what":"11. Normalization and quantification based on ISTDs","title":"MiDAR workflow","text":"first step normalize lipid species corresponding internal standard (ISTD). Subsequently, concentrations calculated based volume spiked-ISTD solution, concentration ISTDs solution, sample volume. Visit metadata template view corresponding details. can also try re-run e.g. RLA PCA plots variable = \"norm_intensity\" variable = \"conc\" plot normalized data.","code":"myexp <- midar::normalize_by_istd(myexp) #> ✔ 460 features normalized with 17 ISTDs in 498 analyses. myexp <- midar::quantify_by_istd(myexp) #> ✔ 460 feature concentrations calculated based on 42 ISTDs and sample amounts of 498 analyses. #> ℹ Concentrations are given in μmol/L."},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"examine-the-effects-of-class-wide-istd-normalization","dir":"Articles","previous_headings":"","what":"12. Examine the effects of class-wide ISTD normalization","title":"MiDAR workflow","text":"use class-specific ISTDs common practice lipidomics. However, non-authentic internal standards may elute different times, can result subject different matrix effects thus different responses compared analytes. may also differ fragmentation properties, can also affect response. Consequently, use non-authentic ISTDs normalization can lead introduction artefacts, can manifest increases sample variability, rather expected reduction. therefore important assess ISTDs QA particular, also QC, consider using alternative ISTDs observing artefacts. One approach detecting potential ISTD-related artefacts compare variability QC samples normalization. expect comarisons CV? notice potential issues ISTDs ? possible explanations effect? situation?","code":"myexp <- filter_features_qc(myexp, min.intensity.median.spl = 1000) #> Calculating feature QC metrics - please wait... #> ✔ New QC filter criteria were defined: 393 of 423 quantifier features meet QC criteria (excluding the 25 quantifier ISTD features). plot_cv_normalization(   data = myexp,    filter_data = FALSE,    qc_type = \"SPL\",    var_before = \"intensity\",    var_after = \"norm_intensity\")"},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"drift-correction","dir":"Articles","previous_headings":"","what":"13. Drift correction","title":"MiDAR workflow","text":"’re going use Gaussian kernel smoothing based study sample correct drifts concentration data within batch. summary return function isn’t meant actual diagnostics fit, rather understand fit caused major artefacts. also option scale along fit setting scale_smooth = TRUE. order demonstrate correction, plot example (PC 40:8) drift batch correction. using plot several occasions, create simple function wraps plot many parameters preset. Let’s use defined function plot trends one selected example within-batch smoothing. may caused drift raw concentrations? QC samples follow trend sample? Look also lipid species. Try changing within_batch = FALSE code chunk correct_drift_gaussiankernel() run run smoothing across batches. valid alternative? NOTE: don’t forget change back within_batch = TRUE test.","code":"myexp <- midar::correct_drift_gaussiankernel(   data = myexp,   variable = \"conc\",   reference_qc_types = c(\"SPL\"),   within_batch = TRUE,   replace_previous = FALSE,   kernel_size = 10,   outlier_filter = TRUE,   outlier_ksd = 5,   location_smooth = TRUE,   scale_smooth = TRUE,    show_progress = TRUE  # set to FALSE when rendering ) #> Applying `conc` drift correction... #>   |                                                    |                                            |   0%  |                                                    |=                                           |   2%  |                                                    |==                                          |   4%  |                                                    |===                                         |   6%  |                                                    |====                                        |   8%  |                                                    |====                                        |  10%  |                                                    |=====                                       |  12%  |                                                    |======                                      |  14%  |                                                    |=======                                     |  16%  |                                                    |========                                    |  18%  |                                                    |=========                                   |  20%  |                                                    |==========                                  |  22%  |                                                    |===========                                 |  24%  |                                                    |============                                |  26%  |                                                    |============                                |  28%  |                                                    |=============                               |  30%  |                                                    |==============                              |  32%  |                                                    |===============                             |  34%  |                                                    |================                            |  37%  |                                                    |=================                           |  39%  |                                                    |==================                          |  41%  |                                                    |===================                         |  43%  |                                                    |====================                        |  45%  |                                                    |=====================                       |  47%  |                                                    |=====================                       |  49%  |                                                    |======================                      |  51%  |                                                    |=======================                     |  53%  |                                                    |========================                    |  55%  |                                                    |=========================                   |  57%  |                                                    |==========================                  |  59%  |                                                    |===========================                 |  61%  |                                                    |============================                |  63%  |                                                    |=============================               |  65%  |                                                    |=============================               |  67%  |                                                    |==============================              |  69%  |                                                    |===============================             |  71%  |                                                    |================================            |  73%  |                                                    |=================================           |  75%  |                                                    |==================================          |  77%  |                                                    |===================================         |  79%  |                                                    |====================================        |  81%  |                                                    |=====================================       |  83%  |                                                    |=====================================       |  85%  |                                                    |======================================      |  87%  |                                                    |=======================================     |  89%  |                                                    |========================================    |  91%  |                                                    |=========================================   |  93%  |                                                    |==========================================  |  95%  |                                                    |=========================================== |  97%  |                                                    |============================================|  99%  |                                                    |============================================| 100% - trend smoothing done! #>   |                                                    |                                            |   0%  |                                                    |=                                           |   2%  |                                                    |==                                          |   4%  |                                                    |===                                         |   6%  |                                                    |====                                        |   8%  |                                                    |====                                        |  10%  |                                                    |=====                                       |  12%  |                                                    |======                                      |  14%  |                                                    |=======                                     |  16%  |                                                    |========                                    |  18%  |                                                    |=========                                   |  20%  |                                                    |==========                                  |  22%  |                                                    |===========                                 |  24%  |                                                    |============                                |  26%  |                                                    |============                                |  28%  |                                                    |=============                               |  30%  |                                                    |==============                              |  32%  |                                                    |===============                             |  34%  |                                                    |================                            |  37%  |                                                    |=================                           |  39%  |                                                    |==================                          |  41%  |                                                    |===================                         |  43%  |                                                    |====================                        |  45%  |                                                    |=====================                       |  47%  |                                                    |=====================                       |  49%  |                                                    |======================                      |  51%  |                                                    |=======================                     |  53%  |                                                    |========================                    |  55%  |                                                    |=========================                   |  57%  |                                                    |==========================                  |  59%  |                                                    |===========================                 |  61%  |                                                    |============================                |  63%  |                                                    |=============================               |  65%  |                                                    |=============================               |  67%  |                                                    |==============================              |  69%  |                                                    |===============================             |  71%  |                                                    |================================            |  73%  |                                                    |=================================           |  75%  |                                                    |==================================          |  77%  |                                                    |===================================         |  79%  |                                                    |====================================        |  81%  |                                                    |=====================================       |  83%  |                                                    |=====================================       |  85%  |                                                    |======================================      |  87%  |                                                    |=======================================     |  89%  |                                                    |========================================    |  91%  |                                                    |=========================================   |  93%  |                                                    |==========================================  |  95%  |                                                    |=========================================== |  97%  |                                                    |============================================|  99%  |                                                    |============================================| 100% - trend recalc done! #> ✔ Drift correction (batch-wise) was applied to raw concentrations of 460 of 460 features. #> ℹ The median CV of all features in study samples (batch medians) decreased by -1.7% (-3.7 to 0.3%) to 42.2%. # Define a wrapper function  my_trend_plot <- function(variable, feature){   plot_runscatter(     data = myexp,     variable = variable,     qc_types = c(\"BQC\", \"TQC\", \"SPL\"),     include_feature_filter = feature,     exclude_feature_filter = \"ISTD\",     cap_outliers = TRUE,     log_scale = FALSE,     show_trend = TRUE,     output_pdf = FALSE,     path = \"./output/runscatter_PC408_beforecorr.pdf\",     cols_page = 1, rows_page = 1,    ) } my_trend_plot(\"conc_raw\", \"PC 40:8\") #> Generating plots (1 page)... #>  - done! my_trend_plot(\"conc\", \"PC 40:8\") #> Generating plots (1 page)... #>  - done!"},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"batch-effect-correction","dir":"Articles","previous_headings":"","what":"14. Batch-effect correction","title":"MiDAR workflow","text":"observed, trend lines different batches aligned. use correct_batcheffects() correct median center (location) scale differences batches. define correction based study samples medians. optional scale correction can performed setting correct_scale = FALSE. correction directly plot example lipid species . Change sample type qc_type = \"BQC\" use BQC center batches. observe?","code":"myexp <- midar::correct_batch_centering(   myexp,    variable = \"conc\",   reference_qc_types = \"SPL\",   replace_previous = TRUE,   correct_location = TRUE,    correct_scale = TRUE,    log_transform_internal = TRUE) #> Adding batch correction on top of `conc` drift-correction... #> ✔ Batch median-centering of 6 batches was applied to drift-corrected concentrations of all 460 features. #> ℹ The median CV of features in the study samples across batches increased by 29.8% (7.2 to 52.3%) to 45.9%.  my_trend_plot(\"conc\", \"PC 40:8\") #> Generating plots (1 page)... #>  - done!"},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"saving-runscatter-plots-of-all-features-as-pdf","dir":"Articles","previous_headings":"","what":"15. Saving runscatter plots of all features as PDF","title":"MiDAR workflow","text":"additional inspection documentation, can save plots selected subset species. often preferable exclude blanks, can exhibit random concentrations signals features internal standards close proximity limit detection. corresponding PDF can accessed within output subfolder. Use filt_ arguments include exclude specific analytes. filter can use regular expressions (regex). (Hint: try using ChatGPT generate complex regex-based filters). Explore effect setting cap_outliers TRUEor FALSE. Run ?runscatter console press F2 function name see available options plot_runscatter().","code":"plot_runscatter(   data = myexp,   variable = \"conc\",   qc_types = c(\"BQC\", \"TQC\", \"SPL\"),   include_feature_filter =  NA,   exclude_feature_filter = \"ISTD\",   cap_outliers = TRUE,   log_scale = FALSE,   show_trend = TRUE,   output_pdf = TRUE,   path = \"./output/runscatter_after-drift-batch-correction.pdf\",   cols_page = 2,    rows_page = 2,   show_progress = TRUE )"},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"qc-based-feature-filtering","dir":"Articles","previous_headings":"","what":"16. QC-based feature filtering","title":"MiDAR workflow","text":"Finally, apply set filters exclude features don’t meet specific QC criteria. available criteria can seen pressing TAB first open bracket filter_features_qc() function, viewing help page. running ?filter_features_qc console. filter function can applied multiple times, either overwriting amending (replace_existing = FALSE) previously set filters. Explore effects different filtering criteria filtering thresholds. plot section 17 can run order examine effects visually.","code":"myexp <- filter_features_qc(   data = myexp,    replace_existing = TRUE,   batch_medians = TRUE,   qualifier.include = FALSE,   istd.include = FALSE,   response.curves.select = c(1,2),   response.curves.summary = \"mean\",   min.rsquare.response = 0.8,   min.slope.response = 0.75,   max.yintercept.response = 0.5,   min.signalblank.median.spl.pblk = 10,   min.intensity.median.spl = 100,   max.cv.conc.bqc = 25,   features.to.keep = c(\"CE 20:4\", \"CE 22:5\", \"CE 22:6\", \"CE 16:0\", \"CE 18:0\") ) #> Calculating feature QC metrics - please wait... #> ✔ New QC filter criteria were defined: 325 of 423 quantifier features meet QC criteria (excluding the 25 quantifier ISTD features)."},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"summary-of-the-qc-filtering","dir":"Articles","previous_headings":"","what":"17. Summary of the QC filtering","title":"MiDAR workflow","text":"plot provides overview data quality feature filtering. segments green indicate number species passed previously defined quality control (QC) filtering criteria. rest number species failed different filtering criteria. noted criteria hierarchically organised; feature classified failing criterion (e.g., CV) passed hierarchically lower filters (e.g., S/B LOD). differences lipid classes terms analytical performance? identified QC issues possible explanations ? implications want run next analysis?  following plot provides summary feature filtering process, indicating total number features successfully filtered. previously stated, classification based hierarchical application filters. Venn diagram right illustrates number features excluded particular filtering criterion. Take look Venn diagram. feature shows bad non-linear response (e.g. r2 < 0.8), reasons ?","code":"midar::plot_qc_summary_byclass(myexp, include_qualifier = FALSE) midar::plot_qc_summary_overall(myexp, include_qualifier = FALSE)"},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"saving-a-report-with-data-metadata-and-processing-details","dir":"Articles","previous_headings":"","what":"18. Saving a report with data, metadata and processing details","title":"MiDAR workflow","text":"detailed summary data post-processing can generated form formatted Excel workbook comprising multiple sheets, containing raw processed datasets, associated metadata, feature quality control metrics, information applied processing steps. Explore report saved output folder. can also save specific data subsets clean flat, wide CSV file. shared data statistical analysis presented next part workshop! Specify data export using function arguments check generated CSV files.","code":"midar::save_report_xlsx(myexp, path = \"./output/myexp-midar_report.xlsx\") #> Saving report to disk - please wait... #> ✔ The data processing report of analysis 'sPerfect' has been saved. midar::save_dataset_csv(   data = myexp,    path = \"./output/sperfect_filt_uM.csv\",   variable = \"conc\",    qc_types = \"SPL\",    include_qualifier = FALSE,   filter_data = TRUE) #> ✔ Concentration values of 377 analyses and 325 features have been exported."},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"sharing-the-midarexperiment-dataset","dir":"Articles","previous_headings":"","what":"19. Sharing the MidarExperiment dataset","title":"MiDAR workflow","text":"myexp object can saved RDS file shared. RDS files serialized R variables/objects can opened R anyone, even absence midar package. imported MidarExperiment object can also utilized re-processing, plotting, inspection using midar package. Save dataset disk re-open different name. Check status comparing dataset generated workflow (mexp)","code":"saveRDS(myexp, file = \"./output/myexp-midar.rds\", compress = TRUE) my_saved_exp <- readRDS(file = \"./output/myexp-midar.rds\") print(myexp) #>  #> ── MidarExperiment ───────────────────────────────────────────────────────────── #> Title: sPerfect #>  #> Processing status: Batch- and drift-corrected concentrations #>  #> ── Annotated Raw Data ── #>  #> • Analyses: 498 #> • Features: 502 #> • Raw signal used for processing: `feature_area` #>  #> ── Metadata ── #>  #> • Analyses/samples: ✔ #> • Features/analytes: ✔ #> • Internal standards: ✔ #> • Response curves: ✔ #> • Calibrants/QC concentrations: ✖ #> • Study samples: ✖ #>  #> ── Processing Status ── #>  #> • Isotope corrected: ✔ #> • ISTD normalized: ✔ #> • ISTD quantitated: ✔ #> • Drift corrected variables: `feature_conc` #> • Batch corrected variables: `feature_conc` #> • Feature filtering applied: ✔ #>  #> ── Exclusion of Analyses and Features ── #>  #> • Analyses manually excluded (`analysis_id`): Longit_batch6_51"},{"path":"https://slinghub.github.io/midar/articles/importing.html","id":"data-sources","dir":"Articles","previous_headings":"","what":"Data Sources","title":"Importing analytical data","text":"Following formats currently supported:","code":""},{"path":"https://slinghub.github.io/midar/articles/importing.html","id":"metadata-within-analytical-results","dir":"Articles","previous_headings":"","what":"Metadata within analytical results","title":"Importing analytical data","text":"analytical results contain metadata, sample feature annotations, can imported metadata MidarExperiment object well. imported metadata checked integrity consistency (see TODO) added annotation tables within MidarExperiment. include available metadata, set argument import_metadata = TRUE.","code":""},{"path":"https://slinghub.github.io/midar/articles/importing.html","id":"importing-and-merging-multiple-files","dir":"Articles","previous_headings":"","what":"Importing and merging multiple files","title":"Importing analytical data","text":"Multiple data files can imported merged simultaneously. Users can either provide list file paths specify folder path import data files within directory. support multiple files useful raw data processing divided batches, leading separate result files. imported merged data checked consistency, ensuring analysis ID feature ID pair unique. means feature reported multiple times within analysis, can happend example feature sample integrated different raw data processing batches.","code":""},{"path":"https://slinghub.github.io/midar/articles/importing.html","id":"mrmkit-results","dir":"Articles","previous_headings":"","what":"MRMkit Results","title":"Importing analytical data","text":"","code":"library(midar) filepath <- system.file(\"extdata/sPerfect_MRMkit.tsv\", package = \"midar\") myexp <- MidarExperiment() myexp <- import_data_mrmkit(myexp, filepath, import_metadata = TRUE)"},{"path":"https://slinghub.github.io/midar/articles/importing.html","id":"agilent-masshunter-quantitative","dir":"Articles","previous_headings":"","what":"Agilent MassHunter Quantitative","title":"Importing analytical data","text":"","code":"filepath <- system.file(\"extdata/Example_MHQuant_1.csv\", package = \"midar\") myexp <- MidarExperiment()  myexp <- import_data_masshunter(myexp, filepath, import_metadata = TRUE)"},{"path":"https://slinghub.github.io/midar/articles/importing.html","id":"plain-csv-files","dir":"Articles","previous_headings":"","what":"Plain CSV files","title":"Importing analytical data","text":"","code":"library(midar) myexp <- MidarExperiment()"},{"path":"https://slinghub.github.io/midar/articles/midar.html","id":"example-workflow","dir":"Articles","previous_headings":"","what":"Example Workflow","title":"Getting Started","text":"example simple data processing workflow, starting peak integration results MRMkit (https://github.com/MRMkit)","code":"# Get paths of example files included with this package file_path <- system.file(\"extdata\", \"MRMkit_demo.tsv\", package = \"midar\")  # Create a MidarExperiment object (S4) mexp <- MidarExperiment()  # Load data and metadata mexp <- midar::import_data_mrmkit(data = mexp,                                    path = file_path,                                    import_metadata = FALSE) #> ✔ Imported 499 analyses with 28 features #> ℹ `feature_area` selected as default feature intensity. Modify with `set_intensity_var()`.  # # Normalize and quantitate each feature by internal standards # mexp <- normalize_by_istd(mexp) #  # # Get QC metrics for each feature # mexp <- qc_calc_metrics(mexp) #  # # Filter features according to QC criteria # mexp <- filter_features_qc( #   data = mexp,  #   missing.normintensity.spl.prop.max = 0.2, #   max.cv.conc.bqc = 30, #   min.min.min.min.signalblank.median.spl.pblk = 3, #   qualifier.include = TRUE,  #   istd.include = FALSE #)"},{"path":"https://slinghub.github.io/midar/articles/midar.html","id":"contributor-code-of-conduct","dir":"Articles","previous_headings":"","what":"Contributor Code of Conduct","title":"Getting Started","text":"Please note midar project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://slinghub.github.io/midar/articles/midarexperiment.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"MidarExperiment object","text":"MidarExperiment` object main data container used MiDAR workflow. holds experimental processed data metadata, well details applied processing steps current status data. MiDAR functions take MidarExperiment object input. Functions process update data return modified MidarExperiment object output, allowing used subsequent functions. can create process multiple MidarExperiment objects independently within script.","code":""},{"path":"https://slinghub.github.io/midar/articles/midarexperiment.html","id":"creating-a-midarexperiment-object","dir":"Articles","previous_headings":"Overview","what":"Creating a MidarExperiment object","title":"MidarExperiment object","text":"First {midar} package loaded create new MidarExperiment object.","code":"library(midar) myexp <- MidarExperiment()"},{"path":"https://slinghub.github.io/midar/articles/midarexperiment.html","id":"using-midarexperiment-objects","dir":"Articles","previous_headings":"Overview","what":"Using MidarExperiment objects","title":"MidarExperiment object","text":"MiDAR functions take MidarExperiment object input. Functions process update data return modified MidarExperiment object output, allowing used subsequent functions. can also use MidarExperiment objects R pipe chain. allows chain multiple functions together, making code streamlined easier read clearly indicating flow processing workflow.","code":"myexp <- MidarExperiment() myexp <- data_load_example(myexp, 1) myexp <- normalize_by_istd(myexp) #> ✔ 24 features normalized with 9 ISTDs in 499 analyses.  save_dataset_csv(myexp, \"mydata.csv\", \"norm_intensity\", FALSE) #> ✔ Norm_intensity values of 499 analyses and 24 features have been exported. myexp <- myexp |>    MidarExperiment() |>   data_load_example(1) |>   normalize_by_istd() |>   save_dataset_csv(\"mydata.csv\", \"norm_intensity\", FALSE) #> ✔ 24 features normalized with 9 ISTDs in 499 analyses. #> ✔ Norm_intensity values of 499 analyses and 24 features have been exported."},{"path":"https://slinghub.github.io/midar/articles/midarexperiment.html","id":"status-of-an-midarexperiment","dir":"Articles","previous_headings":"Overview","what":"Status of an MidarExperiment","title":"MidarExperiment object","text":"detailed summary dataset processing status can printed time","code":"print(myexp) #> [1] \"cli-85346-7\""},{"path":"https://slinghub.github.io/midar/articles/midarexperiment.html","id":"multiple-midarexperiment-objects","dir":"Articles","previous_headings":"Overview","what":"Multiple MidarExperiment objects","title":"MidarExperiment object","text":"Multiple MidarExperiment objects can created processed independently within script.","code":"myexp_1 <- MidarExperiment(title = \"Polar metabolites\") myexp_2 <- MidarExperiment(title = \"Non-polar metabolites\")  #myexp <- midar::combine_experiments(myexp_1, myexp_2)"},{"path":"https://slinghub.github.io/midar/articles/midarexperiment.html","id":"accessing-data-and-metadata","dir":"Articles","previous_headings":"Overview","what":"Accessing data and metadata","title":"MidarExperiment object","text":"Functions starting data_get_ allow retrieve data metadat MidarExperiment object. Alternatively, $ syntax can used access data metadata tables MidarExperiment objects.","code":"myexp <- data_load_example(myexp, 1) dataset <- get_analyticaldata(myexp)  print(dataset) #> # A tibble: 16,467 × 18 #>    run_seq_num analysis_id     acquisition_time_stamp qc_type batch_id sample_id #>          <int> <chr>           <dttm>                 <chr>   <chr>    <chr>     #>  1           1 Longit_BLANK-0… 2017-10-20 14:15:36    SBLK    1        NA        #>  2           1 Longit_BLANK-0… 2017-10-20 14:15:36    SBLK    1        NA        #>  3           1 Longit_BLANK-0… 2017-10-20 14:15:36    SBLK    1        NA        #>  4           1 Longit_BLANK-0… 2017-10-20 14:15:36    SBLK    1        NA        #>  5           1 Longit_BLANK-0… 2017-10-20 14:15:36    SBLK    1        NA        #>  6           1 Longit_BLANK-0… 2017-10-20 14:15:36    SBLK    1        NA        #>  7           1 Longit_BLANK-0… 2017-10-20 14:15:36    SBLK    1        NA        #>  8           1 Longit_BLANK-0… 2017-10-20 14:15:36    SBLK    1        NA        #>  9           1 Longit_BLANK-0… 2017-10-20 14:15:36    SBLK    1        NA        #> 10           1 Longit_BLANK-0… 2017-10-20 14:15:36    SBLK    1        NA        #> # ℹ 16,457 more rows #> # ℹ 12 more variables: replicate_no <int>, specimen <chr>, feature_id <chr>, #> #   feature_class <chr>, feature_label <chr>, is_istd <lgl>, #> #   is_quantifier <lgl>, feature_rt <dbl>, feature_area <dbl>, #> #   feature_height <dbl>, feature_fwhm <dbl>, feature_intensity <dbl> analyses <- myexp$annot_analyses features <- myexp$annot_features dataset <- myexp$dataset  print(features) #> # A tibble: 33 × 15 #>    feature_id        feature_class is_istd istd_feature_id quant_istd_feature_id #>    <chr>             <chr>         <lgl>   <chr>           <chr>                 #>  1 CE 18:1           NA            FALSE   CE 18:1 d7 (IS… CE 18:1 d7 (ISTD)     #>  2 CE 18:1 d7 (ISTD) NA            TRUE    CE 18:1 d7 (IS… CE 18:1 d7 (ISTD)     #>  3 Cer d18:1/12:0 (… NA            FALSE   Cer d18:1/25:0… Cer d18:1/25:0 (ISTD) #>  4 Cer d18:1/16:0    NA            FALSE   Cer d18:1/25:0… Cer d18:1/25:0 (ISTD) #>  5 Cer d18:1/24:0    NA            FALSE   Cer d18:1/25:0… Cer d18:1/25:0 (ISTD) #>  6 Cer d18:1/25:0 (… NA            TRUE    Cer d18:1/25:0… Cer d18:1/25:0 (ISTD) #>  7 LPC 18:1 (a)      NA            FALSE   LPC 18:1 (ab )… LPC 18:1 (ab ) d7 (I… #>  8 LPC 18:1 (b)      NA            FALSE   LPC 18:1 (ab )… LPC 18:1 (ab ) d7 (I… #>  9 LPC 18:1 (ab ) d… NA            TRUE    LPC 18:1 (ab )… LPC 18:1 (ab ) d7 (I… #> 10 LPC 18:1 (a ) d7… NA            FALSE   LPC 18:1 (ab )… LPC 18:1 (ab ) d7 (I… #> # ℹ 23 more rows #> # ℹ 10 more variables: is_quantifier <lgl>, valid_feature <lgl>, #> #   response_factor <dbl>, interference_feature_id <chr>, #> #   interference_proportion <dbl>, curve_fit_method <chr>, fit_weighting <chr>, #> #   remarks <chr>, feature_label <chr>, curve_fit_weighting <chr>"},{"path":"https://slinghub.github.io/midar/articles/midarexperiment.html","id":"saving-and-reading-midarexperiment-objects","dir":"Articles","previous_headings":"Overview","what":"Saving and Reading MidarExperiment objects","title":"MidarExperiment object","text":"","code":"myexp <- MidarExperiment() myexp <- data_load_example(myexp, 1) saveRDS(myexp, file = \"myexp-midar.rds\", compress = TRUE) my_saved_exp <- readRDS(file = \"myexp-midar.rds\") print(my_saved_exp)"},{"path":"https://slinghub.github.io/midar/articles/vocabulary.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Structure of Data and Metadata","text":" MidarExperiment object organizes data two main categories: dataa nd metadata. data category includes tables raw data, processed data, feature metrics, metadata category encompasses analysis annotations, feature annotations, internal standard annotations, batch annotations, response curve annotations, calibration curves. Key identifiers, analysis_id analyses feature_id features, used link data metadata integral functions package.","code":""},{"path":"https://slinghub.github.io/midar/articles/vocabulary.html","id":"midarexperiment","dir":"Articles","previous_headings":"","what":"MidarExperiment","title":"Structure of Data and Metadata","text":"MidarExperiment object serves primary data container MiDAR workflow. encompasses experimental processed data, metadata, details applied processing steps, current data status. MiDAR functions data processing, management, visualization utilize MidarExperiment objects input output.","code":""},{"path":"https://slinghub.github.io/midar/articles/vocabulary.html","id":"data-and-metadata","dir":"Articles","previous_headings":"","what":"Data and Metadata","title":"Structure of Data and Metadata","text":"Data within  MidarExperiment systematically organized data metadata categories, divided tables (data.frames).","code":""},{"path":[]},{"path":[]},{"path":"https://slinghub.github.io/midar/articles/vocabulary.html","id":"key-data-identifiers","dir":"Articles","previous_headings":"","what":"Key Data Identifiers","title":"Structure of Data and Metadata","text":"following key data fields essential organizing data within MiDAR. Many MiDAR functions depend fields, exported data utilizes identifier names. Field Naming Considerations Certain field names differ conventional terminology (e.g., analysis_id instead  sample_id) enhance clarity prevent confusion identifiers. sample may measured multiple times across different methods processing replicates, necessitating distinct identifiers. Similarly, analytes can quantified multiple transitions adducts,  feature_id designated primary identifier.","code":""},{"path":"https://slinghub.github.io/midar/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bo Burla. Author, maintainer.","code":""},{"path":"https://slinghub.github.io/midar/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Burla B (2025). midar: Small Molecule Mass Spectrometry Data Post-Processing, Quality Control, Exploration Reporting. R package version 0.1.3, https://slinghub.github.io/midar/, https://github.com/SLINGhub/midar.","code":"@Manual{,   title = {midar: Small Molecule Mass Spectrometry Data Post-Processing, Quality Control, Exploration and Reporting},   author = {Bo Burla},   year = {2025},   note = {R package version 0.1.3, https://slinghub.github.io/midar/},   url = {https://github.com/SLINGhub/midar}, }"},{"path":"https://slinghub.github.io/midar/index.html","id":"midar-","dir":"","previous_headings":"","what":"Small Molecule Mass Spectrometry Data Post-Processing, Quality Control, Exploration and Reporting","title":"Small Molecule Mass Spectrometry Data Post-Processing, Quality Control, Exploration and Reporting","text":"MiDAR R package designed reproducible post-processing, assessment, quality control, reporting small-molecule mass spectrometry (MS) datasets, including lipidomics metabolomics. offers complete workflow, allowing users import data, apply normalization quantification methods, perform isotope correction, address drift batch effects. Additionally, MiDAR supports feature filtering, sharing curated datasets various formats, generating quality control plots metrics evaluate analytical data quality effects post-processing steps. MiDAR intended analytical bioinformatics scientists. ItIts core tools accessible users basic understanding R coding, also allowing advanced customizations access data. approach, package supports analysts annotating, inspecting, processing data independently, facilitates sharing detailed annotated datasets processing information collaboration colleagues, including bioinformaticians, analyses. MiDAR emphasizes fully documented, reproducible data processing workflows serves tool creating automated data processing pipelines.","code":""},{"path":"https://slinghub.github.io/midar/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Small Molecule Mass Spectrometry Data Post-Processing, Quality Control, Exploration and Reporting","text":"console run:","code":"if (!require(\"pak\")) install.packages(\"pak\") pak::pkg_install(\"SLINGhub/midar\")"},{"path":"https://slinghub.github.io/midar/index.html","id":"example-workflow","dir":"","previous_headings":"","what":"Example workflow","title":"Small Molecule Mass Spectrometry Data Post-Processing, Quality Control, Exploration and Reporting","text":"","code":"library(midar)  # Create a MidarExperiment object myexp <- MidarExperiment()  # Load data and available metadata myexp <- import_data_mrmkit(myexp, path = \"data.tsv\") myexp <- import_metadata_midarxlm(myexp, path = \"metadata.csv\")   # Normalize and quantitate each feature by internal standards myexp <- normalize_by_istd(myexp) myexp <- quantify_by_istd(myexp)  # Filter features according to QC criteria mexp <- filter_features_qc(   data = mexp,    max.cv.conc.bqc = 30,   min.min.min.min.signalblank.median.spl.pblk = 3, )  # Export concentration data myexp <- save_dataset_csv(   myexp,    path = \"mydata.csv\",    variable = \"norm_intensity\",    filter_data = FALSE)"},{"path":"https://slinghub.github.io/midar/reference/MidarExperiment-class.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 Class Representing the MIDAR Dataset — MidarExperiment-class","title":"S4 Class Representing the MIDAR Dataset — MidarExperiment-class","text":"MidarExperiment object core data structure utilized within MiDAR workflow, encapsulating relevant experimental data metadata. also includes processing results, details applied processing steps, current status data.","code":""},{"path":"https://slinghub.github.io/midar/reference/MidarExperiment-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"S4 Class Representing the MIDAR Dataset — MidarExperiment-class","text":"title Title experiment analysis_type Analysis type, one \"lipidomics\", \"metabolomics\", \"externalcalib\", \"others\" feature_intensity_var Feature variable used default calculations dataset_orig Original imported analysis data. Required fields: dataset Processed analysis data. Required fields: dataset_filtered Processed analysis data. Required fields: annot_analyses Annotation analyses/runs annot_features Annotation measured features. annot_istds Annotation Internal Standard concs. annot_responsecurves Annotation response curves (RQC). Required fields annot_qcconcentrations Annotation calibration curves. Required fields annot_studysamples Annotation study samples. Required fields: annot_batches Annotation batches. Required fields: metrics_qc QC information measured feature metrics_calibration Calibration metrics calculated external calibration curves measured feature parameters_processing Values parameters used different processing steps status_processing Status within data processing workflow is_istd_normalized Flag data ISTD normalized is_quantitated Flag data quantitated using ISTD sample amount is_filtered Flag data filtered based QC parameters is_isotope_corr Flag one features isotope corrected has_outliers_tech Flag data technical analysis/sample outliers analyses_excluded Flag outliers excluded QC-filtered dataset var_drift_corrected List indicating variables drift corrected var_batch_corrected List indicating variables batch corrected","code":""},{"path":"https://slinghub.github.io/midar/reference/MidarExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for the MidarExperiment object. — MidarExperiment","title":"Constructor for the MidarExperiment object. — MidarExperiment","text":"Constructor MidarExperiment object.","code":""},{"path":"https://slinghub.github.io/midar/reference/MidarExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for the MidarExperiment object. — MidarExperiment","text":"","code":"MidarExperiment(title = \"\", analysis_type = \"\")"},{"path":"https://slinghub.github.io/midar/reference/MidarExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for the MidarExperiment object. — MidarExperiment","text":"title Title experiment analysis_type Analysis type, one \"lipidomics\", \"metabolomics\", \"externalcalib\", \"others\"","code":""},{"path":"https://slinghub.github.io/midar/reference/MidarExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for the MidarExperiment object. — MidarExperiment","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/add_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Add metadata an MidarExperiment object — add_metadata","title":"Add metadata an MidarExperiment object — add_metadata","text":"Metadata provided list tibbles validates consistency loaded analysis data provided MidarExperiment object transfered.","code":""},{"path":"https://slinghub.github.io/midar/reference/add_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add metadata an MidarExperiment object — add_metadata","text":"","code":"add_metadata(data = NULL, metadata, excl_unmatched_analyses = FALSE)"},{"path":"https://slinghub.github.io/midar/reference/add_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add metadata an MidarExperiment object — add_metadata","text":"data MidarExperiment object metadata List tibbles data.frames containing analysis, feature, istd, response curve tables excl_unmatched_analyses Exclude analyses (samples) matching metadata","code":""},{"path":"https://slinghub.github.io/midar/reference/add_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add metadata an MidarExperiment object — add_metadata","text":"metadata list","code":""},{"path":"https://slinghub.github.io/midar/reference/analysis_type-MidarExperiment-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get analysis_type — analysis_type,MidarExperiment-method","title":"Get analysis_type — analysis_type,MidarExperiment-method","text":"Get analysis_type","code":""},{"path":"https://slinghub.github.io/midar/reference/analysis_type-MidarExperiment-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get analysis_type — analysis_type,MidarExperiment-method","text":"","code":"# S4 method for class 'MidarExperiment' analysis_type(x)"},{"path":"https://slinghub.github.io/midar/reference/analysis_type-MidarExperiment-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get analysis_type — analysis_type,MidarExperiment-method","text":"x MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/analysis_type-MidarExperiment-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get analysis_type — analysis_type,MidarExperiment-method","text":"character string","code":""},{"path":"https://slinghub.github.io/midar/reference/analysis_type-set-MidarExperiment-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Set analysis_type — analysis_type<-,MidarExperiment-method","title":"Set analysis_type — analysis_type<-,MidarExperiment-method","text":"Set analysis_type","code":""},{"path":"https://slinghub.github.io/midar/reference/analysis_type-set-MidarExperiment-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set analysis_type — analysis_type<-,MidarExperiment-method","text":"","code":"# S4 method for class 'MidarExperiment' analysis_type(x) <- value"},{"path":"https://slinghub.github.io/midar/reference/analysis_type-set-MidarExperiment-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set analysis_type — analysis_type<-,MidarExperiment-method","text":"x MidarExperiment object value Analysis type, one \"lipidomics\", \"metabolomics, \"quantitative\"","code":""},{"path":"https://slinghub.github.io/midar/reference/analysis_type-set.html","id":null,"dir":"Reference","previous_headings":"","what":"Get analysis type — analysis_type<-","title":"Get analysis type — analysis_type<-","text":"Get analysis type defined MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/analysis_type-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get analysis type — analysis_type<-","text":"","code":"analysis_type(x) <- value"},{"path":"https://slinghub.github.io/midar/reference/analysis_type-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get analysis type — analysis_type<-","text":"x MidarExperiment object value Analysis type, one \"lipidomics\", \"metabolomics, \"quantitative\"","code":""},{"path":"https://slinghub.github.io/midar/reference/analysis_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Set analysis type — analysis_type","title":"Set analysis type — analysis_type","text":"Set analysis type, .e. \"lipidomics\", \"metabolomics, \"quantitative\"","code":""},{"path":"https://slinghub.github.io/midar/reference/analysis_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set analysis type — analysis_type","text":"","code":"analysis_type(x)"},{"path":"https://slinghub.github.io/midar/reference/analysis_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set analysis type — analysis_type","text":"x MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/analysis_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set analysis type — analysis_type","text":"character string","code":""},{"path":"https://slinghub.github.io/midar/reference/assert_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Add metadata an MidarExperiment object — assert_metadata","title":"Add metadata an MidarExperiment object — assert_metadata","text":"Metadata provided list tibbles validates consistency loaded analysis data provided MidarExperiment object transfered.","code":""},{"path":"https://slinghub.github.io/midar/reference/assert_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add metadata an MidarExperiment object — assert_metadata","text":"","code":"assert_metadata(   data = NULL,   metadata,   ignore_warnings,   excl_unmatched_analyses )"},{"path":"https://slinghub.github.io/midar/reference/assert_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add metadata an MidarExperiment object — assert_metadata","text":"data MidarExperiment object metadata List tibbles data.frames containing analysis, feature, istd, response curve tables ignore_warnings Ignore data validation warnings proceed adding metadata excl_unmatched_analyses Exclude analyses (samples) matching metadata","code":""},{"path":"https://slinghub.github.io/midar/reference/assert_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add metadata an MidarExperiment object — assert_metadata","text":"metadata list","code":""},{"path":"https://slinghub.github.io/midar/reference/calc_calibration_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate external calibration curve results — calc_calibration_results","title":"Calculate external calibration curve results — calc_calibration_results","text":"Calibration curves calculated feature using ISTD-normalized intensities corresponding concentrations calibration samples, defined qc_concentrations metadata. regression fit model (linear quadratic) weighting method (either \"none\", \"1/x\", \"1/x^2\") can defined globally via arguments fit_method fit_weighting features, overwrite_metadata TRUE. Alternatively, model weighting can defined individually feature feature metadata (columns curve_fit_method fit_weighting). details missing metadata, default values provided via fit_method fit_weighting used.","code":""},{"path":"https://slinghub.github.io/midar/reference/calc_calibration_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate external calibration curve results — calc_calibration_results","text":"","code":"calc_calibration_results(   data = NULL,   overwrite_metadata = FALSE,   fit_method = c(\"linear\", \"quadratic\"),   fit_weighting = c(\"none\", \"1/x\", \"1/x^2\"),   error_missing_annotation = TRUE,   include_fit_object = FALSE )"},{"path":"https://slinghub.github.io/midar/reference/calc_calibration_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate external calibration curve results — calc_calibration_results","text":"data MidarExperiment object containing data used calibration. overwrite_metadata logical value (TRUE FALSE). TRUE, function ignore fit method weighting settings defined metadata use provided fit_method fit_weighting values analytes. fit_method character string specifying default regression fit method use calibration curve. Must one \"linear\" \"quadratic\". method applied specific fit method defined feature metadata. fit_weighting character string specifying default weighting method regression points calibration curve. Must one \"none\", \"1/x\", \"1/x^2\". method applied specific weighting method defined feature metadata. error_missing_annotation TRUE, error raised following information missing: calibration curve data, ISTD mix volume, sample amounts feature. include_fit_object TRUE, function return full regression fit objects feature metrics_calibration table.","code":""},{"path":"https://slinghub.github.io/midar/reference/calc_calibration_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate external calibration curve results — calc_calibration_results","text":"modified MidarExperiment object updated metrics_calibration table containing calibration curve results, including concentrations, LoD, LoQ values feature.","code":""},{"path":"https://slinghub.github.io/midar/reference/calc_calibration_results.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate external calibration curve results — calc_calibration_results","text":"Additionally, limit detection (LoD) limit quantification (LoQ) calculated feature based calibration curve. LoD calculated 3 times sample standard error regression residuals divided regression slope, LoQ 10 times ratio. case quadratic fit, LoD LoQ calculated using slope 2x concentration lowest calibration point. results regression calculated LoD LoQ values stored metrics_calibration table returned MidarExperiment object.","code":""},{"path":[]},{"path":"https://slinghub.github.io/midar/reference/cash-MidarExperiment-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for specific slots of an MidarExperiments object — $,MidarExperiment-method","title":"Getter for specific slots of an MidarExperiments object — $,MidarExperiment-method","text":"$ syntax can used shortcut getting specific variables results MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/cash-MidarExperiment-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for specific slots of an MidarExperiments object — $,MidarExperiment-method","text":"","code":"# S4 method for class 'MidarExperiment' x$name"},{"path":"https://slinghub.github.io/midar/reference/cash-MidarExperiment-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for specific slots of an MidarExperiments object — $,MidarExperiment-method","text":"x MidarExperiment object name MidarExperiment slot","code":""},{"path":"https://slinghub.github.io/midar/reference/cash-MidarExperiment-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getter for specific slots of an MidarExperiments object — $,MidarExperiment-method","text":"Value variable tibble","code":""},{"path":"https://slinghub.github.io/midar/reference/cash-MidarExperiment-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getter for specific slots of an MidarExperiments object — $,MidarExperiment-method","text":"","code":"mexp <- MidarExperiment() mexp$analysis_type #> [1] \"\" mexp$annot_analyses #> # A tibble: 0 × 13 #> # ℹ 13 variables: run_seq_num <int>, analysis_id <chr>, sample_id <chr>, #> #   qc_type <fct>, batch_id <chr>, replicate_no <int>, specimen <chr>, #> #   sample_amount <dbl>, sample_amount_unit <chr>, istd_volume <dbl>, #> #   valid_analysis <lgl>, annot_order_num <int>, remarks <chr>"},{"path":"https://slinghub.github.io/midar/reference/combine_experiments.html","id":null,"dir":"Reference","previous_headings":"","what":"Combines a list of MidarExperiments into one — combine_experiments","title":"Combines a list of MidarExperiments into one — combine_experiments","text":"Combines list MidarExperiments one","code":""},{"path":"https://slinghub.github.io/midar/reference/combine_experiments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combines a list of MidarExperiments into one — combine_experiments","text":"","code":"combine_experiments(..., ordered_by_runsequence)"},{"path":"https://slinghub.github.io/midar/reference/combine_experiments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combines a list of MidarExperiments into one — combine_experiments","text":"... MidarExperiment objects ordered_by_runsequence Boolean list provided MidarExperiment objects run order","code":""},{"path":"https://slinghub.github.io/midar/reference/corr_drift_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"Drift Correction by Custom Function — corr_drift_fun","title":"Drift Correction by Custom Function — corr_drift_fun","text":"Function correct run-order drifts within across batches via provided custom function #' @details drift correction function needs provided user. See smooth_fun details.","code":""},{"path":"https://slinghub.github.io/midar/reference/corr_drift_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drift Correction by Custom Function — corr_drift_fun","text":"","code":"corr_drift_fun(   data = NULL,   smooth_fun,   variable,   reference_qc_types,   within_batch,   replace_previous = TRUE,   log_transform_internal = TRUE,   conditional_correction = FALSE,   cv_ratio_threshold = 1,   use_original_if_fail = TRUE,   ignore_istd = TRUE,   feature_list = NULL,   recalc_trend_after = FALSE,   show_progress = TRUE,   ... )"},{"path":"https://slinghub.github.io/midar/reference/corr_drift_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drift Correction by Custom Function — corr_drift_fun","text":"data MidarExperiment object smooth_fun Function performs drift correction. Function need following parameter data (MidarExperiment), reference_qc_types (one strings), span_width (numerical). Function needs return numerical vector length number rows data. case functions fails vector NA_real_ needs returned variable variable corrected drift effects. Must one \"intensity\", \"norm_intensity\", \"conc\" reference_qc_types QC types used drift correction within_batch Apply batch separately TRUE (default) replace_previous Logical. Replace previous correction (TRUE), adds top previous correction (FALSE). Default TRUE. log_transform_internal Apply log transformation internally smoothing TRUE (default). enhances robustness outliers affect final data, remains untransformed. conditional_correction Determines whether drift correction applied species unconditionally (TRUE) sample CV smoothing ratio threshold specified cv_ratio_threshold. cv_ratio_threshold parameter defines maximum allowable change (ratio) coefficient variation (CV) ratio samples smoothing correction applied. value 1 (default) requires CV improve, value 1 allows CV improve, degrade maximum indicated fold-difference times post-smoothing. use_original_if_fail Determines action smoothing fails feature. TRUE (default), original data used; FALSE, result analysis NA. ignore_istd apply corrections ISTDs feature_list Subset features correction whose names matches specified text using regular expression. Default NULL means features selected. recalc_trend_after Recalculate trend post-drift correction plot_qc_runscatter(). double calculation time. show_progress Show progress bar. Default = `TRUE. ... Parameters specific smoothing function","code":""},{"path":"https://slinghub.github.io/midar/reference/corr_drift_fun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drift Correction by Custom Function — corr_drift_fun","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_batch_centering.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Centering Correction — correct_batch_centering","title":"Batch Centering Correction — correct_batch_centering","text":"function performs batch centering correction feature. Optionally, scale batches can equalized across batches.selected QC types (reference_qc_types) used calculate medians align qc types based . correction can applied one three variables: \"intensity\", \"norm_intensity\", \"conc\". correction can applied top previous corrections  replace previous batch corrections.","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_batch_centering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Centering Correction — correct_batch_centering","text":"","code":"correct_batch_centering(   data = NULL,   variable,   reference_qc_types,   correct_location = TRUE,   correct_scale = FALSE,   replace_previous = TRUE,   log_transform_internal = TRUE,   ... )"},{"path":"https://slinghub.github.io/midar/reference/correct_batch_centering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Centering Correction — correct_batch_centering","text":"data MidarExperiment object containing data corrected. object must include information QC types measurements. variable variable corrected. Must one \"intensity\", \"norm_intensity\", \"conc\". reference_qc_types character vector specifying QC types used reference batch centering. correct_location logical value indicating whether align median locations (centers) batches. Defaults TRUE. correct_scale logical value indicating whether scale batches level (equalize scale). Defaults FALSE. replace_previous logical value indicating whether replace previous batch correction apply new correction top. Defaults TRUE (replace). log_transform_internal logical value indicating whether log-transform data internally correction. Defaults TRUE. ... Additional parameters can passed batch correction function.","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_batch_centering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch Centering Correction — correct_batch_centering","text":"MidarExperiment object containing corrected data.","code":""},{"path":[]},{"path":"https://slinghub.github.io/midar/reference/correct_drift_gaussiankernel.html","id":null,"dir":"Reference","previous_headings":"","what":"Drift Correction by Gaussian Kernel Smoothing — correct_drift_gaussiankernel","title":"Drift Correction by Gaussian Kernel Smoothing — correct_drift_gaussiankernel","text":"Function correct run-order drifts within across batches using gaussian kernel smoothing (see Tan et al. (2020)). typically used smooth based study samples. avoid local biases artefacts, function applied analyses wit sufficient number samples well randomized.","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_drift_gaussiankernel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drift Correction by Gaussian Kernel Smoothing — correct_drift_gaussiankernel","text":"","code":"correct_drift_gaussiankernel(   data = NULL,   variable,   reference_qc_types,   within_batch = TRUE,   replace_previous = TRUE,   kernel_size,   outlier_filter = FALSE,   outlier_ksd = 5,   location_smooth = TRUE,   scale_smooth = FALSE,   log_transform_internal = TRUE,   recalc_trend_after = TRUE,   conditional_correction = FALSE,   feature_list = NULL,   ignore_istd = TRUE,   cv_ratio_threshold = 1,   use_original_if_fail = FALSE,   show_progress = TRUE )"},{"path":"https://slinghub.github.io/midar/reference/correct_drift_gaussiankernel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drift Correction by Gaussian Kernel Smoothing — correct_drift_gaussiankernel","text":"data MidarExperiment object variable variable corrected drift effects. Must one \"intensity\", \"norm_intensity\", \"conc\" reference_qc_types QC types used drift correction. Typically includes study samples (SPL). within_batch Apply batch separately TRUE (default), across batches FALSE. replace_previous Logical. Replace previous correction (TRUE), adds top previous correction (FALSE). Default TRUE. kernel_size Kernel bandwidth outlier_filter Kernel Outlier filter outlier_ksd Kernel K times standard deviation data distribution location_smooth Location parameter smoothing scale_smooth Scale parameter smoothing log_transform_internal Apply log transformation internally smoothing TRUE (default). enhances robustness outliers affect final data, remains untransformed. recalc_trend_after Recalculate trends smoothing, used plotting (e.g., plot_runscatter()) conditional_correction Apply drift correction species TRUE, sample CV smoothing changes threshold defined via cv_ratio_threshold feature_list Subset features correction whose names matches specified text using regular expression. Default NULL means features selected. ignore_istd apply corrections ISTDs cv_ratio_threshold used conditional_correction = TRUE. Maximum allowed ratio sample CV change smoothing correction applied. value 1 (default) indicates CV needs improve remain unchanged smoothing conditional smoothing applied. value < 1 means CV needs improve, value e.g. 1.20 CV need improve get worse max 1.20-fold smoothing. use_original_if_fail Determines action smoothing fails feature. TRUE (default), original data used; FALSE, result analysis NA. show_progress Show progress bars. Set FALSE rendering notebook.","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_drift_gaussiankernel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drift Correction by Gaussian Kernel Smoothing — correct_drift_gaussiankernel","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_drift_gaussiankernel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Drift Correction by Gaussian Kernel Smoothing — correct_drift_gaussiankernel","text":"Teo G., Chew WS, Burla B, Herr D, Tai ES, Wenk MR, Torta F, & Choi H (2020). MRMkit: Automated Data Processing Large-Scale Targeted Metabolomics Analysis. Analytical Chemistry, 92(20), 13677–13682. https://doi.org/10.1021/acs.analchem.0c03060","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_drift_loess.html","id":null,"dir":"Reference","previous_headings":"","what":"Drift Correction by LOESS Smoothing — correct_drift_loess","title":"Drift Correction by LOESS Smoothing — correct_drift_loess","text":"Function correct run-order drifts within across batches using loess smoothing","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_drift_loess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drift Correction by LOESS Smoothing — correct_drift_loess","text":"","code":"correct_drift_loess(   data = NULL,   variable,   reference_qc_types,   within_batch = TRUE,   replace_previous = TRUE,   span = 0.75,   conditional_correction = FALSE,   log_transform_internal = TRUE,   feature_list = NULL,   ignore_istd = TRUE,   cv_ratio_threshold = 1,   use_original_if_fail = TRUE,   extrapolate = FALSE )"},{"path":"https://slinghub.github.io/midar/reference/correct_drift_loess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drift Correction by LOESS Smoothing — correct_drift_loess","text":"data MidarExperiment object variable variable corrected drift effects. Must one \"intensity\", \"norm_intensity\", \"conc\" reference_qc_types QC types used drift correction within_batch Apply batch separately TRUE (default), across batches FALSE. replace_previous Logical. Replace previous correction (TRUE), adds top previous correction (FALSE). Default TRUE. span Loess span width (default 0.75) conditional_correction Determines whether drift correction applied species unconditionally (TRUE) sample CV smoothing ratio threshold specified cv_ratio_threshold. log_transform_internal Log transform data correction TRUE (default). Note: log transformation solely applied internally smoothing, results log-transformed. Log transformation may result robust smoothing less sensitive outlier. feature_list Subset features correction whose names matches specified text using regular expression. Default NULL means features selected. ignore_istd apply corrections ISTDs cv_ratio_threshold parameter defines maximum allowable change (ratio) coefficient variation (CV) ratio samples smoothing correction applied. value 1 (default) requires CV improve, value 1 allows CV improve, degrade maximum indicated fold-difference times post-smoothing. use_original_if_fail Determines action smoothing fails feature. TRUE (default), original data used; FALSE, result analysis NA. extrapolate Extrapolate loess smoothing. WARNING: generally recommended extrapolate outside range spanned QCs used smoothing. See details .","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_drift_loess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drift Correction by LOESS Smoothing — correct_drift_loess","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_drift_loess.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Drift Correction by LOESS Smoothing — correct_drift_loess","text":"Note using extrapolation loess smoothing generally recommended. Use must include samples QCs outside range spanned QCs used smoothing. Cases may necessary specific drifts occur analysis sequence segments spanned QC, e.g. instrument broke suddenly changed sensitivity. use samples  adjacent first last QC consult runscatter plots.","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_interferences.html","id":null,"dir":"Reference","previous_headings":"","what":"Substract interferences contributed by another feature — correct_interferences","title":"Substract interferences contributed by another feature — correct_interferences","text":"interference (e.g. isotope overlap -source fragments) subtracted using following formula: $$Value_corrected = Value_Feature - relative_contribution * Value_InterferingFeature$$","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_interferences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Substract interferences contributed by another feature — correct_interferences","text":"","code":"correct_interferences(data = NULL, variable = \"feature_intensity\")"},{"path":"https://slinghub.github.io/midar/reference/correct_interferences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Substract interferences contributed by another feature — correct_interferences","text":"data MidarExperiment object variable Name Variable corrected. Default: feature_intensity.","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_interferences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Substract interferences contributed by another feature — correct_interferences","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/cv_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Coefficient of variation (CV) using log-transformed data — cv_log","title":"Coefficient of variation (CV) using log-transformed data — cv_log","text":"Computes coefficient variation (CV) log-transformation provided data","code":""},{"path":"https://slinghub.github.io/midar/reference/cv_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coefficient of variation (CV) using log-transformed data — cv_log","text":"","code":"cv_log(x, na.rm)"},{"path":"https://slinghub.github.io/midar/reference/cv_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coefficient of variation (CV) using log-transformed data — cv_log","text":"x numeric vector values log-transformed na.rm logical, TRUE NA values stripped x computation takes place","code":""},{"path":"https://slinghub.github.io/midar/reference/cv_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coefficient of variation (CV) using log-transformed data — cv_log","text":"numeric vector length one. x contains zero, NaN returned. x numeric integer, NA_real_ returned","code":""},{"path":"https://slinghub.github.io/midar/reference/cv_log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coefficient of variation (CV) using log-transformed data — cv_log","text":"","code":"library(midar) cv_log(c(5, 6, 3, 4, 5, NA), na.rm = TRUE) #> [1] 27.082"},{"path":"https://slinghub.github.io/midar/reference/data_load_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Load an example MidarExperiment dataset — data_load_example","title":"Load an example MidarExperiment dataset — data_load_example","text":"Load example MidarExperiment dataset. Dataset 1 small dataset (Burla et al, 2024, see ) Dataset 2 larger dataset (Tan et al, 2022).See Details .","code":""},{"path":"https://slinghub.github.io/midar/reference/data_load_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load an example MidarExperiment dataset — data_load_example","text":"","code":"data_load_example(data = NULL, dataset = 1)"},{"path":"https://slinghub.github.io/midar/reference/data_load_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load an example MidarExperiment dataset — data_load_example","text":"data MidarExperiment object, optional. Data overwritten provided. dataset Dataset type. Either 1 2. Default 1.","code":""},{"path":"https://slinghub.github.io/midar/reference/data_load_example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load an example MidarExperiment dataset — data_load_example","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/data_load_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load an example MidarExperiment dataset — data_load_example","text":"","code":"myexp <- MidarExperiment() myexp <- data_load_example(myexp) myexp #>  #> ── MidarExperiment ───────────────────────────────────────────────────────────── #> Title: #>  #> Processing status: Annotated raw AREA values #>  #> ── Annotated Raw Data ── #>  #> • Analyses: 499 #> • Features: 33 #> • Raw signal used for processing: `feature_area` #>  #> ── Metadata ── #>  #> • Analyses/samples: ✔ #> • Features/analytes: ✔ #> • Internal standards: ✖ #> • Response curves: ✖ #> • Calibrants/QC concentrations: ✖ #> • Study samples: ✖ #>  #> ── Processing Status ── #>  #> • Isotope corrected: ✖ #> • ISTD normalized: ✖ #> • ISTD quantitated: ✖ #> • Drift corrected variables: ✖ #> • Batch corrected variables: ✖ #> • Feature filtering applied: ✖ #>  #> ── Exclusion of Analyses and Features ── #>  #> • Analyses manually excluded (`analysis_id`): NA"},{"path":"https://slinghub.github.io/midar/reference/exclude_analyses.html","id":null,"dir":"Reference","previous_headings":"","what":"Exclude Analyses from the Dataset — exclude_analyses","title":"Exclude Analyses from the Dataset — exclude_analyses","text":"function excludes specified analyses MidarExperiment object, either marking invalid downstream processing overwriting current analysis flags. function also handles case analyses specified, allowing option reset exclusions.","code":""},{"path":"https://slinghub.github.io/midar/reference/exclude_analyses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exclude Analyses from the Dataset — exclude_analyses","text":"","code":"exclude_analyses(data = NULL, analyses_to_exclude, replace_existing)"},{"path":"https://slinghub.github.io/midar/reference/exclude_analyses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exclude Analyses from the Dataset — exclude_analyses","text":"data MidarExperiment object analyses_to_exclude character vector analysis IDs (case-sensitive) excluded dataset. NA empty vector, exclusion behavior handled per replace_existing flag. replace_existing logical value. TRUE, existing valid_analysis flags overwritten. FALSE, exclusions appended, preserving existing valid analyses.","code":""},{"path":"https://slinghub.github.io/midar/reference/exclude_analyses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exclude Analyses from the Dataset — exclude_analyses","text":"modified MidarExperiment object specified analyses defined excluded.","code":""},{"path":"https://slinghub.github.io/midar/reference/exclude_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Exclude features from the dataset — exclude_features","title":"Exclude features from the dataset — exclude_features","text":"Exclude features dataset","code":""},{"path":"https://slinghub.github.io/midar/reference/exclude_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exclude features from the dataset — exclude_features","text":"","code":"exclude_features(data = NULL, features_exlude, replace_existing)"},{"path":"https://slinghub.github.io/midar/reference/exclude_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exclude features from the dataset — exclude_features","text":"data MidarExperiment object features_exlude Vector feature IDs (case-sensitive) exclude dataset replace_existing TRUE existing valid_feature flags overwritten, otherwise appended","code":""},{"path":"https://slinghub.github.io/midar/reference/exclude_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exclude features from the dataset — exclude_features","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/filter_features_qc.html","id":null,"dir":"Reference","previous_headings":"","what":"Feature Filtering Based on Quality Control Criteria — filter_features_qc","title":"Feature Filtering Based on Quality Control Criteria — filter_features_qc","text":"Filters dataset based quality control (QC) criteria, including intensity, coefficient variation (CV), signal--blank ratios, D-ratio, response curve properties, proportion missing values. Criteria apply different QC types (BQC, TQC) measurement variables (concentration, intensity, normalized intensity).","code":""},{"path":"https://slinghub.github.io/midar/reference/filter_features_qc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Filtering Based on Quality Control Criteria — filter_features_qc","text":"","code":"filter_features_qc(   data = NULL,   replace_existing = TRUE,   batch_medians = FALSE,   qualifier.include = FALSE,   istd.include = FALSE,   features.to.keep = NULL,   max.prop.missing.intensity.spl = NA,   max.prop.missing.normintensity.spl = NA,   max.prop.missing.conc.spl = NA,   min.intensity.lowest.bqc = NA,   min.intensity.lowest.tqc = NA,   min.intensity.lowest.spl = NA,   min.intensity.median.bqc = NA,   min.intensity.median.tqc = NA,   min.intensity.median.spl = NA,   min.intensity.highest.spl = NA,   min.signalblank.median.spl.pblk = NA,   min.signalblank.median.spl.ublk = NA,   min.signalblank.median.spl.sblk = NA,   max.cv.intensity.bqc = NA,   max.cv.intensity.tqc = NA,   max.cv.normintensity.bqc = NA,   max.cv.normintensity.tqc = NA,   max.cv.conc.bqc = NA,   max.cv.conc.tqc = NA,   response.curves.select = NA,   response.curves.summary = NA,   min.rsquare.response = NA,   min.slope.response = NA,   max.slope.response = NA,   max.yintercept.response = NA,   max.dratio.sd.conc.bqc = NA,   max.dratio.sd.conc.tqc = NA,   max.dratio.mad.conc.bqc = NA,   max.dratio.mad.conc.tqc = NA,   max.dratio.sd.normint.bqc = NA,   max.dratio.sd.normint.tqc = NA,   max.dratio.mad.normint.bqc = NA,   max.dratio.mad.normint.tqc = NA )"},{"path":"https://slinghub.github.io/midar/reference/filter_features_qc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feature Filtering Based on Quality Control Criteria — filter_features_qc","text":"data MidarExperiment object. replace_existing Logical. TRUE, replaces existing filters; FALSE, adds new filters top existing ones. Default TRUE. batch_medians Logical. TRUE, uses batch-wise median QC values filtering. Default FALSE. qualifier.include Logical. TRUE, includes qualifier features filtering process. Default FALSE. istd.include Logical. TRUE, includes internal standards (ISTDs) filtering process. Default FALSE. features..keep vector feature identifiers retain, even meet filtering criteria. max.prop.missing.intensity.spl Maximum proportion missing intensity values among study samples (SPL). Default NA. max.prop.missing.normintensity.spl Maximum proportion missing normalized intensity values among study samples (SPL). Default NA. max.prop.missing.conc.spl Maximum proportion missing concentration values among study samples (SPL). Default NA. min.intensity.lowest.bqc Minimum intensity lowest BQC sample. Default NA. min.intensity.lowest.tqc Minimum intensity lowest TQC sample. Default NA. min.intensity.lowest.spl Minimum intensity lowest study sample (SPL). Default NA. min.intensity.median.bqc Minimum median intensity BQC samples. Default NA. min.intensity.median.tqc Minimum median intensity TQC samples. Default NA. min.intensity.median.spl Minimum median intensity study samples (SPL). Default NA. min.intensity.highest.spl Minimum intensity highest intensity study sample (SPL). Default NA. min.signalblank.median.spl.pblk Minimum signal--blank ratio SPL samples PBLK. Default NA. min.signalblank.median.spl.ublk Minimum signal--blank ratio SPL samples UBLK. Default NA. min.signalblank.median.spl.sblk Minimum signal--blank ratio SPL samples SBLK. Default NA. max.cv.intensity.bqc Maximum CV intensity BQC samples. Default NA. max.cv.intensity.tqc Maximum CV intensity TQC samples. Default NA. max.cv.normintensity.bqc Maximum CV normalized intensity BQC samples. Default NA. max.cv.normintensity.tqc Maximum CV normalized intensity TQC samples. Default NA. max.cv.conc.bqc Maximum CV concentration BQC samples. Default NA. max.cv.conc.tqc Maximum CV concentration TQC samples. Default NA. response.curves.select Select specific response curves ID. Default NA. response.curves.summary Define method summarize multiple response curves. Default NA. min.rsquare.response Minimum R-squared value response curves. Default NA. min.slope.response Minimum slope response curve. Default NA. max.slope.response Maximum slope response curve. Default NA. max.yintercept.response Maximum y-intercept response curve. Default NA. max.dratio.sd.conc.bqc Maximum allowed D-ratio (SD BQC / SD SPL) using standard deviation BQC samples. Default NA. max.dratio.sd.conc.tqc Maximum allowed D-ratio (SD TQC / SD SPL) using standard deviation TQC samples. Default NA. max.dratio.mad.conc.bqc Maximum allowed D-ratio (MAD BQC / MAD SPL) using mean absolute deviation BQC samples. Default NA. max.dratio.mad.conc.tqc Maximum allowed D-ratio (MAD TQC / MAD SPL) using mean absolute deviation TQC samples. Default NA. max.dratio.sd.normint.bqc Maximum allowed D-ratio (SD normalized intensity BQC / SD SPL) using standard deviation. Default NA. max.dratio.sd.normint.tqc Maximum allowed D-ratio (SD normalized intensity TQC / SD SPL) using standard deviation. Default NA. max.dratio.mad.normint.bqc Maximum allowed D-ratio (MAD normalized intensity BQC / MAD SPL) using mean absolute deviation. Default NA. max.dratio.mad.normint.tqc Maximum allowed D-ratio (MAD normalized intensity TQC / MAD SPL) using mean absolute deviation. Default NA.","code":""},{"path":"https://slinghub.github.io/midar/reference/filter_features_qc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Feature Filtering Based on Quality Control Criteria — filter_features_qc","text":"input MidarExperiment object feature filtering criteria applied.","code":""},{"path":"https://slinghub.github.io/midar/reference/filter_features_qc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Feature Filtering Based on Quality Control Criteria — filter_features_qc","text":"function implements filtering criteria based quality control (QC) samples additional analytical parameters, following recommendations outlined Broadhurst et al. (2018). implemented criteria evaluate data quality analysis QC samples, blanks, study samples.","code":""},{"path":"https://slinghub.github.io/midar/reference/filter_features_qc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Feature Filtering Based on Quality Control Criteria — filter_features_qc","text":"Broadhurst, D., Goodacre, R., Reinke, S. N., Kuligowski, J., Wilson, . D., Lewis, M. R., & Dunn, W. B. (2018). Guidelines considerations use system suitability quality control samples mass spectrometry assays applied clinical studies. Metabolomics, 14(6), 72. doi:10.1007/s11306-018-1367-3","code":""},{"path":"https://slinghub.github.io/midar/reference/fun_gauss.kernel.smooth.html","id":null,"dir":"Reference","previous_headings":"","what":"Gaussian Kernel smoothing helper function — fun_gauss.kernel.smooth","title":"Gaussian Kernel smoothing helper function — fun_gauss.kernel.smooth","text":"Function Gaussian kernel-based smoothing, use corr_drift_fun.","code":""},{"path":"https://slinghub.github.io/midar/reference/fun_gauss.kernel.smooth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gaussian Kernel smoothing helper function — fun_gauss.kernel.smooth","text":"","code":"fun_gauss.kernel.smooth(tbl, reference_qc_types, ...)"},{"path":"https://slinghub.github.io/midar/reference/fun_gauss.kernel.smooth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gaussian Kernel smoothing helper function — fun_gauss.kernel.smooth","text":"tbl Table (tibble data.frame) containing fields qc_type, x (run order number), y (variable) reference_qc_types QC types used smoothing (fit) loess ... Additional parameters","code":""},{"path":"https://slinghub.github.io/midar/reference/fun_gauss.kernel.smooth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gaussian Kernel smoothing helper function — fun_gauss.kernel.smooth","text":"List data.frame containing original x smoothed y values, boolean value indicting whether fit failed .","code":""},{"path":"https://slinghub.github.io/midar/reference/fun_gauss.kernel.smooth.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Gaussian Kernel smoothing helper function — fun_gauss.kernel.smooth","text":"Hyung Won Choi","code":""},{"path":"https://slinghub.github.io/midar/reference/fun_loess.html","id":null,"dir":"Reference","previous_headings":"","what":"Loess smoothing helper function — fun_loess","title":"Loess smoothing helper function — fun_loess","text":"Function loess-based smoothing, use corr_drift_fun","code":""},{"path":"https://slinghub.github.io/midar/reference/fun_loess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loess smoothing helper function — fun_loess","text":"","code":"fun_loess(tbl, reference_qc_types, ...)"},{"path":"https://slinghub.github.io/midar/reference/fun_loess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loess smoothing helper function — fun_loess","text":"tbl Table (tibble data.frame) containing fields qc_type, x (run order number), y (variable) reference_qc_types QC types used smoothing (fit) loess ... Additional parameters forwarded Loess","code":""},{"path":"https://slinghub.github.io/midar/reference/fun_loess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loess smoothing helper function — fun_loess","text":"List data.frame containing original x smoothed y values, boolean value indicting whether fit failed .","code":""},{"path":"https://slinghub.github.io/midar/reference/get_analyticaldata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the annotated or the originally imported analytical data — get_analyticaldata","title":"Get the annotated or the originally imported analytical data — get_analyticaldata","text":"Get annotated originally imported analytical data","code":""},{"path":"https://slinghub.github.io/midar/reference/get_analyticaldata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the annotated or the originally imported analytical data — get_analyticaldata","text":"","code":"get_analyticaldata(data = NULL, original = FALSE)"},{"path":"https://slinghub.github.io/midar/reference/get_analyticaldata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the annotated or the originally imported analytical data — get_analyticaldata","text":"data MidarExperiment object original Boolean indicating whether return original imported data (TRUE) annotated data (FALSE)","code":""},{"path":"https://slinghub.github.io/midar/reference/get_analyticaldata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the annotated or the originally imported analytical data — get_analyticaldata","text":"tibble analytical data long format","code":""},{"path":"https://slinghub.github.io/midar/reference/get_batch_boundaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the start and end analysis numbers of specified batches — get_batch_boundaries","title":"Get the start and end analysis numbers of specified batches — get_batch_boundaries","text":"Sets analysis order (sequence) based either () analysis timestamp, available, (ii) order analysis appeared imported raw data file, (iii) order analyses defined Analysis metadata.","code":""},{"path":"https://slinghub.github.io/midar/reference/get_batch_boundaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the start and end analysis numbers of specified batches — get_batch_boundaries","text":"","code":"get_batch_boundaries(data = NULL, batch_ids = NULL)"},{"path":"https://slinghub.github.io/midar/reference/get_batch_boundaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the start and end analysis numbers of specified batches — get_batch_boundaries","text":"data MidarExperiment object batch_ids vector one two elements: first /last batch ID. NULL invalid, function abort.","code":""},{"path":"https://slinghub.github.io/midar/reference/get_batch_boundaries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the start and end analysis numbers of specified batches — get_batch_boundaries","text":"vector two elements: lower upper analysis number specified batch(es).","code":""},{"path":"https://slinghub.github.io/midar/reference/get_calibration_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a calibration regression results — get_calibration_results","title":"Get a calibration regression results — get_calibration_results","text":"Get calibration regression results","code":""},{"path":"https://slinghub.github.io/midar/reference/get_calibration_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a calibration regression results — get_calibration_results","text":"","code":"get_calibration_results(   data,   qc_types,   with_lod = TRUE,   with_loq = TRUE,   with_bias = TRUE,   with_coefficients = TRUE,   with_sigma = TRUE )"},{"path":"https://slinghub.github.io/midar/reference/get_calibration_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a calibration regression results — get_calibration_results","text":"data MidarExperiment object qc_types QC types included results, aside CAL. Default QC types. with_lod Include limit detection (LoD) results with_loq Include limit quantification (LoQ) results with_bias Include bias results with_coefficients Include regression coefficients results with_sigma Include residual standard error results","code":""},{"path":"https://slinghub.github.io/midar/reference/get_response_curve_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear regression statistics of response curves — get_response_curve_stats","title":"Linear regression statistics of response curves — get_response_curve_stats","text":"Linear regression statistics response curves","code":""},{"path":"https://slinghub.github.io/midar/reference/get_response_curve_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear regression statistics of response curves — get_response_curve_stats","text":"","code":"get_response_curve_stats(   data = NULL,   with_staturation_stats = FALSE,   limit_to_rqc = FALSE )"},{"path":"https://slinghub.github.io/midar/reference/get_response_curve_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear regression statistics of response curves — get_response_curve_stats","text":"data MidarExperiment object with_staturation_stats Include statistics classification lancer package. limit_to_rqc TRUE (default) includes RQC qc type","code":""},{"path":"https://slinghub.github.io/midar/reference/get_response_curve_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear regression statistics of response curves — get_response_curve_stats","text":"Tibble linear regression stats curves wide format","code":""},{"path":"https://slinghub.github.io/midar/reference/get_response_curve_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linear regression statistics of response curves — get_response_curve_stats","text":"using with_staturation_stats lancer package needs installed","code":""},{"path":"https://slinghub.github.io/midar/reference/import_data_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Import plain analysis results — import_data_csv","title":"Import plain analysis results — import_data_csv","text":"Imports .csv file(s) reprensenting analysis results wide format samples rows features columns. first column must contain analysis identifier, subsequent columns can metadata columns, followed value different features. table format must long format columns raw data file name, feature ID, peak intensity parameters. Additional information, retention time, FWHM, precursor/product MZ, CE also imported available MidarExperiment object downstream analyses. path folder provided, .scv files folder imported merged one raw dataset. useful, e.g. importing datasets pre-processed blocks resulting different files. feature raw data file pair must occur within across .csv source data files, duplicated return error.","code":""},{"path":"https://slinghub.github.io/midar/reference/import_data_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import plain analysis results — import_data_csv","text":"","code":"import_data_csv(   data = NULL,   path,   variable_name,   analysis_id_col = NA,   import_metadata )"},{"path":"https://slinghub.github.io/midar/reference/import_data_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import plain analysis results — import_data_csv","text":"data MidarExperiment object path One file names path, folder path, case *.csv files folder read. variable_name Variable type representing values table. Must one \"intensity\", \"norm_intensity\", \"conc\", \"area\", \"height\", \"response\") analysis_id_col Column used analysis_id. NA (default) used 'analysis_id' present, first column contains unique values. import_metadata Import additional metadata columns (e.g. batch ID, sample type) add MidarExperiment object. following metadata column names supported: \"qc_type\", \"batch_id\", \"is_quantifier\", \"is_istd\", \"run_seq_num\", \"precursor_mz\", \"product_mz\", \"collision_energy\"","code":""},{"path":"https://slinghub.github.io/midar/reference/import_data_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import plain analysis results — import_data_csv","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/import_data_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import plain analysis results — import_data_csv","text":"","code":"file_path <- system.file(\"extdata\", \"plain_wide_dataset.csv\", package = \"midar\")  mexp <- MidarExperiment()  mexp <- import_data_csv(   data = mexp,   path = file_path,  variable_name = \"conc\",  import_metadata = TRUE) #> ✔ Imported 87 analyses with 5 features #> ℹ `feature_conc` selected as default feature intensity. Modify with `set_intensity_var()`. #> ✔ Analysis metadata associated with 87 analyses. #> ✔ Feature metadata associated with 5 features. #> ℹ Analysis order was based on sequence of analysis results, as no timestamps were found. #> Use `set_analysis_order` to define alternative analysis orders.  print(mexp) #>  #> ── MidarExperiment ───────────────────────────────────────────────────────────── #> Title: #>  #> Processing status: Annotated raw CONC values #>  #> ── Annotated Raw Data ── #>  #> • Analyses: 87 #> • Features: 5 #> • Raw signal used for processing: `feature_conc` #>  #> ── Metadata ── #>  #> • Analyses/samples: ✔ #> • Features/analytes: ✔ #> • Internal standards: ✖ #> • Response curves: ✖ #> • Calibrants/QC concentrations: ✖ #> • Study samples: ✖ #>  #> ── Processing Status ── #>  #> • Isotope corrected: ✖ #> • ISTD normalized: ✖ #> • ISTD quantitated: ✔ #> • Drift corrected variables: ✖ #> • Batch corrected variables: ✖ #> • Feature filtering applied: ✖ #>  #> ── Exclusion of Analyses and Features ── #>  #> • Analyses manually excluded (`analysis_id`): NA"},{"path":"https://slinghub.github.io/midar/reference/import_data_masshunter.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports Agilent MassHunter Quantitative Analysis CSV files — import_data_masshunter","title":"Imports Agilent MassHunter Quantitative Analysis CSV files — import_data_masshunter","text":"Imports .csv files exported Agilent MassHunter Quantitative Analysis software, containing peak integration results. input files must anlyses (samples) rows, features/compounds columns, either peak areas, peak heights, response values. Additional columns, retention time (RT), full-width half-maximum (FWHM), precursor m/z (PrecursorMZ), collision energy (CE), also imported made available MidarExperiment object downstream analyses. directory path provided, matching .csv files directory imported merged single dataset. useful importing datasets pre-processed blocks, resulting multiple files. unique combination feature raw data file must occur across source data files. Duplicate combinations result error.","code":""},{"path":"https://slinghub.github.io/midar/reference/import_data_masshunter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports Agilent MassHunter Quantitative Analysis CSV files — import_data_masshunter","text":"","code":"import_data_masshunter(   data = NULL,   path,   import_metadata,   expand_qualifier_names = TRUE,   silent = FALSE )"},{"path":"https://slinghub.github.io/midar/reference/import_data_masshunter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports Agilent MassHunter Quantitative Analysis CSV files — import_data_masshunter","text":"data MidarExperiment object path One file paths, directory path (case matching files imported) import_metadata Logical, whether extract add metadata analysis result file expand_qualifier_names Logical, whether add quantifier name front qualifier name (latter m/z transition values) silent Logical, whether suppress notifications","code":""},{"path":"https://slinghub.github.io/midar/reference/import_data_masshunter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports Agilent MassHunter Quantitative Analysis CSV files — import_data_masshunter","text":"MidarExperiment object imported data","code":""},{"path":"https://slinghub.github.io/midar/reference/import_data_masshunter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports Agilent MassHunter Quantitative Analysis CSV files — import_data_masshunter","text":"","code":"mexp <- MidarExperiment() file_path = system.file(\"extdata\", \"MHQuant_demo.csv\", package = \"midar\")  mexp <- import_data_masshunter(   data = mexp,   path = file_path,   import_metadata = TRUE,   expand_qualifier_names = TRUE) #> ✔ Imported 38 analyses with 31 features #> ℹ `feature_area` selected as default feature intensity. Modify with `set_intensity_var()`. #> ✔ Analysis metadata associated with 38 analyses. #> ✔ Feature metadata associated with 31 features.  print(mexp) #>  #> ── MidarExperiment ───────────────────────────────────────────────────────────── #> Title: #>  #> Processing status: Annotated raw AREA values #>  #> ── Annotated Raw Data ── #>  #> • Analyses: 38 #> • Features: 31 #> • Raw signal used for processing: `feature_area` #>  #> ── Metadata ── #>  #> • Analyses/samples: ✔ #> • Features/analytes: ✔ #> • Internal standards: ✖ #> • Response curves: ✖ #> • Calibrants/QC concentrations: ✖ #> • Study samples: ✖ #>  #> ── Processing Status ── #>  #> • Isotope corrected: ✖ #> • ISTD normalized: ✖ #> • ISTD quantitated: ✖ #> • Drift corrected variables: ✖ #> • Batch corrected variables: ✖ #> • Feature filtering applied: ✖ #>  #> ── Exclusion of Analyses and Features ── #>  #> • Analyses manually excluded (`analysis_id`): NA"},{"path":"https://slinghub.github.io/midar/reference/import_data_mrmkit.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports MRMkit peak integration results — import_data_mrmkit","title":"Imports MRMkit peak integration results — import_data_mrmkit","text":"Imports tabular data files (*.tsv) generated MRMkit containing peak integration results. input files must long format columns raw data file name, feature ID, peak intensity, parameters. Additional information, retention time, FWHM, precursor/product MZ, CE also imported made available MidarExperiment object downstream analyses. directory path provided, matching files directory imported merged single dataset. useful importing datasets pre-processed blocks, resulting multiple files. unique combination feature raw data file must occur across source data files. Duplicate combinations result error.","code":""},{"path":"https://slinghub.github.io/midar/reference/import_data_mrmkit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports MRMkit peak integration results — import_data_mrmkit","text":"","code":"import_data_mrmkit(data = NULL, path, import_metadata, silent = FALSE)"},{"path":"https://slinghub.github.io/midar/reference/import_data_mrmkit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports MRMkit peak integration results — import_data_mrmkit","text":"data MidarExperiment object path One file paths, directory path (case matching files imported) import_metadata Logical, whether import additional metadata columns (e.g., batch_id, qc_type) silent Logical, whether suppress notifications","code":""},{"path":"https://slinghub.github.io/midar/reference/import_data_mrmkit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports MRMkit peak integration results — import_data_mrmkit","text":"MidarExperiment object imported data","code":""},{"path":"https://slinghub.github.io/midar/reference/import_data_mrmkit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports MRMkit peak integration results — import_data_mrmkit","text":"","code":"mexp <- MidarExperiment()  file_path = system.file(\"extdata\", \"MRMkit_demo.tsv\", package = \"midar\")  mexp <- import_data_mrmkit(   data = mexp,   path = file_path,   import_metadata = TRUE) #> ✔ Imported 499 analyses with 28 features #> ℹ `feature_area` selected as default feature intensity. Modify with `set_intensity_var()`. #> ✔ Analysis metadata associated with 499 analyses. #> ✔ Feature metadata associated with 28 features. print(mexp) #>  #> ── MidarExperiment ───────────────────────────────────────────────────────────── #> Title: #>  #> Processing status: Annotated raw AREA values #>  #> ── Annotated Raw Data ── #>  #> • Analyses: 499 #> • Features: 28 #> • Raw signal used for processing: `feature_area` #>  #> ── Metadata ── #>  #> • Analyses/samples: ✔ #> • Features/analytes: ✔ #> • Internal standards: ✖ #> • Response curves: ✖ #> • Calibrants/QC concentrations: ✖ #> • Study samples: ✖ #>  #> ── Processing Status ── #>  #> • Isotope corrected: ✖ #> • ISTD normalized: ✖ #> • ISTD quantitated: ✖ #> • Drift corrected variables: ✖ #> • Batch corrected variables: ✖ #> • Feature filtering applied: ✖ #>  #> ── Exclusion of Analyses and Features ── #>  #> • Analyses manually excluded (`analysis_id`): NA"},{"path":"https://slinghub.github.io/midar/reference/import_metadata_analyses.html","id":null,"dir":"Reference","previous_headings":"","what":"Import analysis metadata — import_metadata_analyses","title":"Import analysis metadata — import_metadata_analyses","text":"Imports analysis metadata (annotation) preloaded data frame tibble via data argument, data file (CSV Excel) via path argument. analysis metadata must contain following columns: analysis_id qc_type. Additional analysis metadata columns described details .","code":""},{"path":"https://slinghub.github.io/midar/reference/import_metadata_analyses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import analysis metadata — import_metadata_analyses","text":"","code":"import_metadata_analyses(   data = NULL,   table = NULL,   path = NULL,   sheet = NULL,   ignore_warnings = FALSE,   excl_unmatched_analyses = FALSE )"},{"path":"https://slinghub.github.io/midar/reference/import_metadata_analyses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import analysis metadata — import_metadata_analyses","text":"data MidarExperiment object table data frame tibble analysis (sample) metadata. path also provided, error raised. path character string specifying path CSV (.csv) Excel (.xlsx) file. table also provided, error raised. sheet Defines sheet name case Excel file provided. ignore_warnings Ignore warnings data validation proceed importing metadata excl_unmatched_analyses Exclude analyses (samples) matching metadata","code":""},{"path":"https://slinghub.github.io/midar/reference/import_metadata_analyses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import analysis metadata — import_metadata_analyses","text":"updated MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/import_metadata_analyses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import analysis metadata — import_metadata_analyses","text":"","code":"mexp <- MidarExperiment() file_path = system.file(\"extdata\", \"MHQuant_demo.csv\", package = \"midar\") mexp <- import_data_masshunter(   data = mexp,   path = file_path,   import_metadata = FALSE) #> ✔ Imported 38 analyses with 31 features #> ℹ `feature_area` selected as default feature intensity. Modify with `set_intensity_var()`.  meta_path = system.file(\"extdata\", \"MHQuant_demo_metadata_analyses.csv\", package = \"midar\")  mexp <- import_metadata_analyses(   data = mexp,   path = meta_path,   excl_unmatched_analyses = TRUE) #> ✔ Analysis metadata associated with 38 analyses.  print(mexp) #>  #> ── MidarExperiment ───────────────────────────────────────────────────────────── #> Title: #>  #> Processing status: Annotated raw AREA values #>  #> ── Annotated Raw Data ── #>  #> • Analyses: 38 #> • Features: 31 #> • Raw signal used for processing: `feature_area` #>  #> ── Metadata ── #>  #> • Analyses/samples: ✔ #> • Features/analytes: ✖ #> • Internal standards: ✖ #> • Response curves: ✖ #> • Calibrants/QC concentrations: ✖ #> • Study samples: ✖ #>  #> ── Processing Status ── #>  #> • Isotope corrected: ✖ #> • ISTD normalized: ✖ #> • ISTD quantitated: ✖ #> • Drift corrected variables: ✖ #> • Batch corrected variables: ✖ #> • Feature filtering applied: ✖ #>  #> ── Exclusion of Analyses and Features ── #>  #> • Analyses manually excluded (`analysis_id`): NA"},{"path":"https://slinghub.github.io/midar/reference/import_metadata_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Import feature metadata — import_metadata_features","title":"Import feature metadata — import_metadata_features","text":"Imports analysis metadata (annotation) preloaded data frame tibble via data argument,  data file (CSV Excel) via path argument. analysis metadata must contain following columns: analysis_id qc_type. Additional analysis metadata columns described details .","code":""},{"path":"https://slinghub.github.io/midar/reference/import_metadata_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import feature metadata — import_metadata_features","text":"","code":"import_metadata_features(   data = NULL,   table = NULL,   path = NULL,   sheet = NULL,   ignore_warnings = FALSE )"},{"path":"https://slinghub.github.io/midar/reference/import_metadata_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import feature metadata — import_metadata_features","text":"data MidarExperiment object table data frame tibble analysis (sample) metadata. path also provided, error raised. path character string specifying path CSV (.csv) Excel (.xlsx) file. table also provided, error raised. sheet Defines sheet name case Excel file provided. ignore_warnings Ignore warnings data validation proceed importing metadata","code":""},{"path":"https://slinghub.github.io/midar/reference/import_metadata_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import feature metadata — import_metadata_features","text":"updated MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/import_metadata_from_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Metadata from Imported Analysis Data — import_metadata_from_data","title":"Retrieve Metadata from Imported Analysis Data — import_metadata_from_data","text":"Retrieves available metadata imported analysis data associates provided MidarExperiment object.","code":""},{"path":"https://slinghub.github.io/midar/reference/import_metadata_from_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Metadata from Imported Analysis Data — import_metadata_from_data","text":"","code":"import_metadata_from_data(data = NULL, qc_type_column_name = \"qc_type\")"},{"path":"https://slinghub.github.io/midar/reference/import_metadata_from_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Metadata from Imported Analysis Data — import_metadata_from_data","text":"data MidarExperiment object qc_type_column_name Column name imported raw data representing qc_type","code":""},{"path":"https://slinghub.github.io/midar/reference/import_metadata_from_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Metadata from Imported Analysis Data — import_metadata_from_data","text":"updated MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/import_metadata_istds.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Internal Standards (ISTD) metadata — import_metadata_istds","title":"Import Internal Standards (ISTD) metadata — import_metadata_istds","text":"Imports ISTD metadata (annotation) preloaded data frame tibble via data argument, data file (CSV Excel) via path argument. analysis metadata must contain following columns: istd_feature_id istd_conc_nmolar.","code":""},{"path":"https://slinghub.github.io/midar/reference/import_metadata_istds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Internal Standards (ISTD) metadata — import_metadata_istds","text":"","code":"import_metadata_istds(   data = NULL,   table = NULL,   path = NULL,   sheet = NULL,   ignore_warnings = FALSE )"},{"path":"https://slinghub.github.io/midar/reference/import_metadata_istds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Internal Standards (ISTD) metadata — import_metadata_istds","text":"data MidarExperiment object table data frame tibble analysis (sample) metadata. path also provided, error raised. path character string specifying path CSV (.csv) Excel (.xlsx) file. table also provided, error raised. sheet Defines sheet name case Excel file provided. ignore_warnings Ignore warnings data validation proceed importing metadata","code":""},{"path":"https://slinghub.github.io/midar/reference/import_metadata_istds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Internal Standards (ISTD) metadata — import_metadata_istds","text":"updated MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/import_metadata_midarxlm.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Metadata from MIDAR Template — import_metadata_midarxlm","title":"Import Metadata from MIDAR Template — import_metadata_midarxlm","text":"Imports metadata MIDAR template (.xlsm/.xlsx) file associates analysis data.","code":""},{"path":"https://slinghub.github.io/midar/reference/import_metadata_midarxlm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Metadata from MIDAR Template — import_metadata_midarxlm","text":"","code":"import_metadata_midarxlm(   data = NULL,   path,   ignore_warnings = FALSE,   excl_unmatched_analyses = FALSE )"},{"path":"https://slinghub.github.io/midar/reference/import_metadata_midarxlm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Metadata from MIDAR Template — import_metadata_midarxlm","text":"data MidarExperiment object path File name path MIDAR template (.xlsm/.xlsx) file ignore_warnings Ignore warnings data validation proceed importing metadata excl_unmatched_analyses Exclude analyses (samples) matching metadata","code":""},{"path":"https://slinghub.github.io/midar/reference/import_metadata_midarxlm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Metadata from MIDAR Template — import_metadata_midarxlm","text":"updated MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/import_metadata_midarxlm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import Metadata from MIDAR Template — import_metadata_midarxlm","text":"","code":"mexp <- MidarExperiment()  mexp <- import_data_masshunter(   data = mexp,   path = system.file(\"extdata\", \"Example_MHQuant_Small.csv\", package = \"midar\"),   import_metadata = TRUE) #> ✔ Imported 65 analyses with 16 features #> ℹ `feature_area` selected as default feature intensity. Modify with `set_intensity_var()`. #> ✔ Analysis metadata associated with 65 analyses. #> ✔ Feature metadata associated with 16 features.  mexp <- import_metadata_midarxlm(  data = mexp,  path = system.file(\"extdata\", \"Example_Metadata_Small.xlsm\", package = \"midar\"),  excl_unmatched_analyses = FALSE) #> ✔ Analysis metadata associated with 65 analyses. #> ✔ Feature metadata associated with 16 features. #> ✔ Internal Standard metadata associated with 2 ISTDs. #> ✔ Response curve metadata associated with 12 analyses.  print(mexp) #>  #> ── MidarExperiment ───────────────────────────────────────────────────────────── #> Title: #>  #> Processing status: Annotated raw AREA values #>  #> ── Annotated Raw Data ── #>  #> • Analyses: 65 #> • Features: 16 #> • Raw signal used for processing: `feature_area` #>  #> ── Metadata ── #>  #> • Analyses/samples: ✔ #> • Features/analytes: ✔ #> • Internal standards: ✔ #> • Response curves: ✔ #> • Calibrants/QC concentrations: ✖ #> • Study samples: ✖ #>  #> ── Processing Status ── #>  #> • Isotope corrected: ✖ #> • ISTD normalized: ✖ #> • ISTD quantitated: ✖ #> • Drift corrected variables: ✖ #> • Batch corrected variables: ✖ #> • Feature filtering applied: ✖ #>  #> ── Exclusion of Analyses and Features ── #>  #> • Analyses manually excluded (`analysis_id`): NA"},{"path":"https://slinghub.github.io/midar/reference/import_metadata_qcconcentrations.html","id":null,"dir":"Reference","previous_headings":"","what":"Import calibration curves metadata — import_metadata_qcconcentrations","title":"Import calibration curves metadata — import_metadata_qcconcentrations","text":"Imports calibration curve metadata (annotation) preloaded data frame tibble via data argument, data file (CSV Excel) via path argument. analysis metadata must contain following columns: analysis_id, curve_id, feature_id, concentration, concentration_unit.","code":""},{"path":"https://slinghub.github.io/midar/reference/import_metadata_qcconcentrations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import calibration curves metadata — import_metadata_qcconcentrations","text":"","code":"import_metadata_qcconcentrations(   data = NULL,   table = NULL,   path = NULL,   sheet = NULL,   ignore_warnings = FALSE )"},{"path":"https://slinghub.github.io/midar/reference/import_metadata_qcconcentrations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import calibration curves metadata — import_metadata_qcconcentrations","text":"data MidarExperiment object table data frame tibble calibration curve metadata. path also provided, error raised. path character string specifying path CSV (.csv) Excel (.xlsx) file. table also provided, error raised. sheet Defines sheet name case Excel file provided. ignore_warnings Ignore warnings data validation proceed importing metadata","code":""},{"path":"https://slinghub.github.io/midar/reference/import_metadata_qcconcentrations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import calibration curves metadata — import_metadata_qcconcentrations","text":"updated MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/import_metadata_responsecurves.html","id":null,"dir":"Reference","previous_headings":"","what":"Import response curves metadata — import_metadata_responsecurves","title":"Import response curves metadata — import_metadata_responsecurves","text":"Imports response curve metadata (annotation) preloaded data frame tibble via data argument, data file (CSV Excel) via path argument. analysis metadata must contain following columns: analysis_id, curve_id, analyzed_amount analyzed_amount_unit.","code":""},{"path":"https://slinghub.github.io/midar/reference/import_metadata_responsecurves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import response curves metadata — import_metadata_responsecurves","text":"","code":"import_metadata_responsecurves(   data = NULL,   table = NULL,   path = NULL,   sheet = NULL,   ignore_warnings = FALSE )"},{"path":"https://slinghub.github.io/midar/reference/import_metadata_responsecurves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import response curves metadata — import_metadata_responsecurves","text":"data MidarExperiment object table data frame tibble response curve metadata. path also provided, error raised. path character string specifying path CSV (.csv) Excel (.xlsx) file. table also provided, error raised. sheet Defines sheet name case Excel file provided. ignore_warnings Ignore warnings data validation proceed importing metadata","code":""},{"path":"https://slinghub.github.io/midar/reference/import_metadata_responsecurves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import response curves metadata — import_metadata_responsecurves","text":"updated MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/lipidomics_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Plasma Lipidomics Peak Areas Dataset — lipidomics_dataset","title":"Plasma Lipidomics Peak Areas Dataset — lipidomics_dataset","text":"demo dataset used examples reporocessed dataset containing raw peak areas analytical metadata 499 analyses 503 features plasma lipidomics analysis published Tan et al, ATVB, 2022. dataset used demonstrate","code":""},{"path":"https://slinghub.github.io/midar/reference/lipidomics_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plasma Lipidomics Peak Areas Dataset — lipidomics_dataset","text":"","code":"lipidomics_dataset"},{"path":"https://slinghub.github.io/midar/reference/lipidomics_dataset.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Plasma Lipidomics Peak Areas Dataset — lipidomics_dataset","text":"MidarExperiment object: dataset_orig tibble original peak data. dataset tibble annotated data. annot_analyses tibble analyses annotations. annot_features tibble features annotations. annot_batches tibble batch annotations.","code":""},{"path":"https://slinghub.github.io/midar/reference/lipidomics_get_lipid_class_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve lipid name, lipid class and transition from feature names — lipidomics_get_lipid_class_names","title":"Retrieve lipid name, lipid class and transition from feature names — lipidomics_get_lipid_class_names","text":"Retrieve lipid name, lipid class transition feature names","code":""},{"path":"https://slinghub.github.io/midar/reference/lipidomics_get_lipid_class_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve lipid name, lipid class and transition from feature names — lipidomics_get_lipid_class_names","text":"","code":"lipidomics_get_lipid_class_names(   data = NULL,   use_as_feature_class = \"lipid_class\",   add_transition_names = FALSE )"},{"path":"https://slinghub.github.io/midar/reference/lipidomics_get_lipid_class_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve lipid name, lipid class and transition from feature names — lipidomics_get_lipid_class_names","text":"data MidarExperiment object use_as_feature_class Set feature_class lipid_class add_transition_names add transition name transition group, based information square brackets feature_id","code":""},{"path":"https://slinghub.github.io/midar/reference/lipidomics_get_lipid_class_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve lipid name, lipid class and transition from feature names — lipidomics_get_lipid_class_names","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves-MidarExperiment-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get response curve metadata — metadata_responsecurves,MidarExperiment-method","title":"Get response curve metadata — metadata_responsecurves,MidarExperiment-method","text":"Get curve IDs sample amount information response curves","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves-MidarExperiment-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get response curve metadata — metadata_responsecurves,MidarExperiment-method","text":"","code":"# S4 method for class 'MidarExperiment' metadata_responsecurves(x)"},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves-MidarExperiment-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get response curve metadata — metadata_responsecurves,MidarExperiment-method","text":"x MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves-MidarExperiment-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get response curve metadata — metadata_responsecurves,MidarExperiment-method","text":"Tibble","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves-set-MidarExperiment-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Set response curve metadata — metadata_responsecurves<-,MidarExperiment-method","title":"Set response curve metadata — metadata_responsecurves<-,MidarExperiment-method","text":"Set curve IDs sample amount information response curves","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves-set-MidarExperiment-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set response curve metadata — metadata_responsecurves<-,MidarExperiment-method","text":"","code":"# S4 method for class 'MidarExperiment' metadata_responsecurves(x) <- value"},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves-set-MidarExperiment-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set response curve metadata — metadata_responsecurves<-,MidarExperiment-method","text":"x MidarExperiment object value data.frame tibble","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves-set-MidarExperiment-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set response curve metadata — metadata_responsecurves<-,MidarExperiment-method","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves-set.html","id":null,"dir":"Reference","previous_headings":"","what":"metadata_responsecurves method — metadata_responsecurves<-","title":"metadata_responsecurves method — metadata_responsecurves<-","text":"Get curve IDs sample amount information response curves","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"metadata_responsecurves method — metadata_responsecurves<-","text":"","code":"metadata_responsecurves(x) <- value"},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"metadata_responsecurves method — metadata_responsecurves<-","text":"x MidarExperiment object value Table response curve metadata","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves-set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"metadata_responsecurves method — metadata_responsecurves<-","text":"Tibble","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves.html","id":null,"dir":"Reference","previous_headings":"","what":"metadata_responsecurves method — metadata_responsecurves","title":"metadata_responsecurves method — metadata_responsecurves","text":"Get curve IDs sample amount information response curves","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"metadata_responsecurves method — metadata_responsecurves","text":"","code":"metadata_responsecurves(x)"},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"metadata_responsecurves method — metadata_responsecurves","text":"x MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"metadata_responsecurves method — metadata_responsecurves","text":"Tibble","code":""},{"path":"https://slinghub.github.io/midar/reference/midar-package.html","id":null,"dir":"Reference","previous_headings":"","what":"midar: Small Molecule Mass Spectrometry Data Post-Processing, Quality Control, Exploration and Reporting — midar-package","title":"midar: Small Molecule Mass Spectrometry Data Post-Processing, Quality Control, Exploration and Reporting — midar-package","text":"R functions facilitate managing, processing evaluating lipidomics data.","code":""},{"path":[]},{"path":"https://slinghub.github.io/midar/reference/midar-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"midar: Small Molecule Mass Spectrometry Data Post-Processing, Quality Control, Exploration and Reporting — midar-package","text":"Maintainer: Bo Burla bo.burla@nus.edu.sg (ORCID)","code":""},{"path":"https://slinghub.github.io/midar/reference/normalize_by_istd.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize Feature Intensities Using Internal Standards — normalize_by_istd","title":"Normalize Feature Intensities Using Internal Standards — normalize_by_istd","text":"Normalize feature intensities dividing intensities corresponding internal standards (ISTDs). feature must defined internal standard (ISTD) feature metadata.","code":""},{"path":"https://slinghub.github.io/midar/reference/normalize_by_istd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize Feature Intensities Using Internal Standards — normalize_by_istd","text":"","code":"normalize_by_istd(data = NULL, error_missing_annotation = TRUE)"},{"path":"https://slinghub.github.io/midar/reference/normalize_by_istd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize Feature Intensities Using Internal Standards — normalize_by_istd","text":"data MidarExperiment object. error_missing_annotation TRUE, function raise error ISTD defined one features (excluding ISTDs ). FALSE, features missing ISTD annotations NA values normalized intensities.","code":""},{"path":"https://slinghub.github.io/midar/reference/normalize_by_istd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize Feature Intensities Using Internal Standards — normalize_by_istd","text":"MidarExperiment object normalized feature intensities","code":""},{"path":"https://slinghub.github.io/midar/reference/parse_masshunter_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads and parses one Agilent MassHunter Quant CSV result file — parse_masshunter_csv","title":"Reads and parses one Agilent MassHunter Quant CSV result file — parse_masshunter_csv","text":"Reads parses one Agilent MassHunter Quant CSV result file","code":""},{"path":"https://slinghub.github.io/midar/reference/parse_masshunter_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads and parses one Agilent MassHunter Quant CSV result file — parse_masshunter_csv","text":"","code":"parse_masshunter_csv(path, expand_qualifier_names = TRUE, silent = FALSE)"},{"path":"https://slinghub.github.io/midar/reference/parse_masshunter_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads and parses one Agilent MassHunter Quant CSV result file — parse_masshunter_csv","text":"path File path MassHunter Quant CSV file expand_qualifier_names TRUE, original qualifier names renamed adding quantifier name front placing qualifier name square brackets(e.g. Qualifier (422.3 -> 113.0) transition names quantifier added qualifier names silent Suppress messages","code":""},{"path":"https://slinghub.github.io/midar/reference/parse_masshunter_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads and parses one Agilent MassHunter Quant CSV result file — parse_masshunter_csv","text":"tibble parse results long format","code":""},{"path":"https://slinghub.github.io/midar/reference/parse_masshunter_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads and parses one Agilent MassHunter Quant CSV result file — parse_masshunter_csv","text":"","code":"file_path = system.file(\"extdata\", \"MHQuant_demo.csv\", package = \"midar\")  tbl <- parse_masshunter_csv(   path = file_path,   expand_qualifier_names = TRUE)  head(tbl) #> # A tibble: 6 × 18 #>   analysis_id         file_run_seq_num raw_data_filename sample_name sample_type #>   <chr>                          <int> <chr>             <chr>       <chr>       #> 1 001_EQC_TQC prerun…                1 001_EQC_TQC prer… 001_EQC_TQ… Sample      #> 2 001_EQC_TQC prerun…                1 001_EQC_TQC prer… 001_EQC_TQ… Sample      #> 3 001_EQC_TQC prerun…                1 001_EQC_TQC prer… 001_EQC_TQ… Sample      #> 4 001_EQC_TQC prerun…                1 001_EQC_TQC prer… 001_EQC_TQ… Sample      #> 5 001_EQC_TQC prerun…                1 001_EQC_TQC prer… 001_EQC_TQ… Sample      #> 6 001_EQC_TQC prerun…                1 001_EQC_TQC prer… 001_EQC_TQ… Sample      #> # ℹ 13 more variables: sample_level <chr>, acquisition_time_stamp <dttm>, #> #   vial_position <chr>, feature_id <chr>, integration_qualifier <lgl>, #> #   method_polarity <fct>, method_precursor_mz <dbl>, method_product_mz <dbl>, #> #   method_collision_energy <dbl>, feature_rt <dbl>, feature_area <dbl>, #> #   feature_fwhm <dbl>, feature_manual_integration <lgl>"},{"path":"https://slinghub.github.io/midar/reference/parse_mrmkit_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Parses MRMkit peak integration results into a tibble — parse_mrmkit_result","title":"Parses MRMkit peak integration results into a tibble — parse_mrmkit_result","text":"Parses MRMkit peak integration results tibble","code":""},{"path":"https://slinghub.github.io/midar/reference/parse_mrmkit_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parses MRMkit peak integration results into a tibble — parse_mrmkit_result","text":"","code":"parse_mrmkit_result(path, silent = FALSE)"},{"path":"https://slinghub.github.io/midar/reference/parse_mrmkit_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parses MRMkit peak integration results into a tibble — parse_mrmkit_result","text":"path File name MRMkit result file (*.tsv *.csv) silent comments printed","code":""},{"path":"https://slinghub.github.io/midar/reference/parse_mrmkit_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parses MRMkit peak integration results into a tibble — parse_mrmkit_result","text":"tibble long format","code":""},{"path":"https://slinghub.github.io/midar/reference/parse_mrmkit_result.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parses MRMkit peak integration results into a tibble — parse_mrmkit_result","text":"","code":"file_path = system.file(\"extdata\", \"MRMkit_demo.tsv\", package = \"midar\")  tbl <- parse_mrmkit_result(path = file_path)  head(tbl) #> # A tibble: 6 × 18 #>   analysis_id      raw_data_filename acquisition_time_stamp sample_type batch_id #>   <chr>            <chr>             <dttm>                 <chr>       <chr>    #> 1 Longit_BLANK-01… Longit_BLANK-01 … 2017-10-20 14:15:36    SBLK        1        #> 2 Longit_B-ISTD 0… Longit_B-ISTD 01… 2017-10-20 14:27:06    PBLK        1        #> 3 Longit_Un-ISTD … Longit_Un-ISTD 0… 2017-10-20 14:38:26    UBLK        1        #> 4 Longit_LTR 01    Longit_LTR 01.mz… 2017-10-20 14:49:48    LTR         1        #> 5 Longit_TQC-10%   Longit_TQC-10%.m… 2017-10-20 15:12:31    TQC         1        #> 6 Longit_TQC-20%   Longit_TQC-20%.m… 2017-10-20 15:23:51    TQC         1        #> # ℹ 13 more variables: feature_id <chr>, istd_feature_id <chr>, #> #   integration_qualifier <lgl>, feature_rt <dbl>, feature_area <dbl>, #> #   feature_height <dbl>, feature_fwhm <dbl>, feature_int_start <dbl>, #> #   feature_int_end <dbl>, method_polarity <chr>, method_precursor_mz <dbl>, #> #   method_product_mz <dbl>, method_collision_energy <dbl>"},{"path":"https://slinghub.github.io/midar/reference/parse_plain_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads a long CSV file with Feature Intensities — parse_plain_csv","title":"Reads a long CSV file with Feature Intensities — parse_plain_csv","text":"Reads long CSV file Feature Intensities","code":""},{"path":"https://slinghub.github.io/midar/reference/parse_plain_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads a long CSV file with Feature Intensities — parse_plain_csv","text":"","code":"parse_plain_csv(path, variable_name, analysis_id_col = NA, import_metadata)"},{"path":"https://slinghub.github.io/midar/reference/parse_plain_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads a long CSV file with Feature Intensities — parse_plain_csv","text":"path path name path plain long-format CSV file variable_name Name variable representing values table. Must one \"intensity\", \"norm_intensity\", \"conc\", \"area\", \"height\", \"response\") analysis_id_col Column used analysis_id import_metadata Import additional metadata columns (e.g. batch ID, sample type) add MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/parse_plain_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads a long CSV file with Feature Intensities — parse_plain_csv","text":"tibble long format","code":""},{"path":"https://slinghub.github.io/midar/reference/parse_plain_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads a long CSV file with Feature Intensities — parse_plain_csv","text":"","code":"file_path <- system.file(\"extdata\", \"plain_wide_dataset.csv\", package = \"midar\")  tbl <- parse_plain_csv(  path = file_path,  variable_name = \"conc\",  analysis_id_col = \"analysis_id\",  import_metadata = TRUE)  head(tbl) #> # A tibble: 6 × 6 #>   analysis_id qc_type batch_id feature_id  feature_conc integration_qualifier #>   <chr>       <chr>   <chr>    <chr>              <dbl> <lgl>                 #> 1 1           SPL     1        S1P 18:1;O2        944.  FALSE                 #> 2 1           SPL     1        S1P 18:2;O2        321.  FALSE                 #> 3 1           SPL     1        S1P 18:0;O2        338.  FALSE                 #> 4 1           SPL     1        S1P 16:1;O2         91.2 FALSE                 #> 5 1           SPL     1        S1P 17:1;O2         24.5 FALSE                 #> 6 2           SPL     1        S1P 18:1;O2        977.  FALSE"},{"path":"https://slinghub.github.io/midar/reference/plot_calibrationcurves.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots calibration curves for each measured feature. — plot_calibrationcurves","title":"Plots calibration curves for each measured feature. — plot_calibrationcurves","text":"Plots calibration curves measured feature.","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_calibrationcurves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots calibration curves for each measured feature. — plot_calibrationcurves","text":"","code":"plot_calibrationcurves(   data = NULL,   variable = \"intensity\",   overwrite_metadata = FALSE,   fit_method = c(\"linear\", \"quadratic\"),   fit_weighting = c(NA, \"none\", \"1/x\", \"1/x^2\"),   log_axes = FALSE,   filter_data = FALSE,   output_pdf = FALSE,   include_feature_filter = \"\",   exclude_feature_filter = \"\",   max_regression_value = NA,   path = \"\",   rows_page = 4,   cols_page = 5,   specific_page = NA,   point_size = 1.5,   line_width = 0.7,   scaling_factor = 1,   page_orientation = \"LANDSCAPE\",   font_base_size = 7,   show_progress = TRUE,   return_plots = FALSE )"},{"path":"https://slinghub.github.io/midar/reference/plot_calibrationcurves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots calibration curves for each measured feature. — plot_calibrationcurves","text":"data MidarExperiment object . variable variable name plot y-axis, usually measure intensity. Defaults \"intensity\" overwrite_metadata logical value (TRUE FALSE). TRUE, function ignore fit method weighting settings defined metadata use provided fit_method fit_weighting values analytes. fit_method character string specifying default regression fit method use calibration curve. Must one \"linear\" \"quadratic\". method applied specific fit method defined feature metadata. fit_weighting character string specifying default weighting method regression points calibration curve. Must one \"none\", \"1/x\", \"1/x^2\". method applied specific weighting method defined feature metadata. log_axes Logical. TRUE, x y axes displayed logarithmic scale. Defaults FALSE. filter_data Logical. Indicates whether use quality control (QC) filtered data (TRUE) raw data (FALSE). Defaults FALSE. output_pdf Logical. TRUE, saves generated plots PDF file. Defaults FALSE. include_feature_filter regex pattern filter include features match criteria. omitted, features considered. exclude_feature_filter regex pattern filter exclude features match criteria. omitted, features excluded. max_regression_value maximum x value (analyzed amount) regression line fitted. Defaults NA, considering data points. path file path saving PDF. Defaults empty string, meaning file saved. rows_page number rows plots per page PDF output. Defaults 4. cols_page number columns plots per page PDF output. Defaults 5. specific_page integer specifying particular page plot. NA, pages plotted. point_size Numeric value specifying size points plot. Defaults 1.5. line_width Numeric value specifying width regression lines. Defaults 0.7. scaling_factor universal scaling factor fonts, symbols, lines. Defaults 1. page_orientation orientation PDF paper, either \"LANDSCAPE\" \"PORTRAIT\". Defaults \"LANDSCAPE\". font_base_size base font size text plots. Defaults 7. show_progress Logical. Show progress bar plot creation set TRUE. Defaults TRUE. return_plots Logical. TRUE, returns plots list ggplot2 objects. item represents page plots. Defaults FALSE.","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_calibrationcurves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots calibration curves for each measured feature. — plot_calibrationcurves","text":"return_plots TRUE, list ggplot2 objects returned. Otherwise, function may return plot output /save PDF, depending output_pdf parameter.","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_cv_normalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Comparison of CV values before and after normalization — plot_cv_normalization","title":"Comparison of CV values before and after normalization — plot_cv_normalization","text":"Comparison CV values normalization","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_cv_normalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comparison of CV values before and after normalization — plot_cv_normalization","text":"","code":"plot_cv_normalization(   data = NULL,   filter_data,   qc_type,   var_before = c(\"intensity\"),   var_after = c(\"norm_intensity\"),   cv_treshhold = 25,   only_quantifier = TRUE,   xlim = c(0, NA),   ylim = c(0, NA),   ncol = 5,   point_size = 1,   point_alpha = 0.5,   scale_factor = 1,   font_base_size = 8 )"},{"path":"https://slinghub.github.io/midar/reference/plot_cv_normalization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comparison of CV values before and after normalization — plot_cv_normalization","text":"data MidarExperiment object filter_data Use (default) qc-filtered data qc_type QC type use plot. var_before Variable QC metrics table used x axis var_after Variable QC metrics table used y axis cv_treshhold Threshold values shown plot dashed lines only_quantifier Show quantifier xlim Lower upper limits x axis vector ylim Lower upper limits y axis vector ncol Number facet columns point_size size points. Default 2 point_alpha transparency points scale_factor Scale factor text labels font_base_size Base font size plot text elements","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_cv_normalization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comparison of CV values before and after normalization — plot_cv_normalization","text":"ggplot2 object","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"PCA Plot for Quality Control — plot_pca","title":"PCA Plot for Quality Control — plot_pca","text":"Generates Principal Component Analysis (PCA) plot visualizing QC samples, options filtering, transformations, customizable visual elements.","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PCA Plot for Quality Control — plot_pca","text":"","code":"plot_pca(   data = NULL,   variable,   filter_data,   pca_dim = c(1, 2),   qc_types = c(\"SPL\", \"BQC\", \"TQC\", \"NIST\", \"LTR\"),   label_mad_threshold = 3,   log_transform = TRUE,   exclude_istds = TRUE,   min_median_signal = NA,   point_size = 2,   point_alpha = 0.7,   ellipse_alpha = 0.8,   font_base_size = 8,   hide_text_from_labels = NA )"},{"path":"https://slinghub.github.io/midar/reference/plot_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PCA Plot for Quality Control — plot_pca","text":"data MidarExperiment object containing QC data variable Variable use PCA analysis. Must one : \"area\", \"height\", \"intensity\", \"response\", \"conc\", \"conc_raw\", \"rt\", \"fwhm\" filter_data Use (default) qc-filtered data pca_dim PCA dimensions plot vector length 2. Default c(1,2) qc_types QC types include plot. Default c(\"SPL\", \"BQC\", \"TQC\", \"NIST\", \"LTR\") label_mad_threshold Show analysis_id label points outside k * MAD selected PCA dimensions. Default 3. Set NULL suppress labels log_transform Whether log-transform data PCA. Default TRUE exclude_istds Whether exclude internal standards. Default TRUE min_median_signal Minimum median signal across samples selected QC types. NA (default) filter features point_size Size plot points. Default 2 point_alpha Transparency plot points (0-1). Default 0.7 ellipse_alpha Transparency ellipse fill (0-1). Default 0.8 font_base_size Base font size plot text elements. Default 8 hide_text_from_labels Hide shared text (case-sensitive) labels. resulting non-unique analysis_id's, error raised","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PCA Plot for Quality Control — plot_pca","text":"ggplot2 object","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_qc_summary_byclass.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot QC Filtering Summary by Feature Class — plot_qc_summary_byclass","title":"Plot QC Filtering Summary by Feature Class — plot_qc_summary_byclass","text":"function provides summary feature QC filtering based class, showing number features passed failed various quality control criteria. visualizes hierarchical filtering process different feature classes. Features classified failing given criterion (e.g., CV) passing hierarchically lower filters (e.g., S/B ratio LOD).","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_qc_summary_byclass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot QC Filtering Summary by Feature Class — plot_qc_summary_byclass","text":"","code":"plot_qc_summary_byclass(   data = NULL,   include_qualifier = FALSE,   include_istd = FALSE,   user_defined_keeper = FALSE,   font_base_size = 8 )"},{"path":"https://slinghub.github.io/midar/reference/plot_qc_summary_byclass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot QC Filtering Summary by Feature Class — plot_qc_summary_byclass","text":"data MidarExperiment object include_qualifier Whether include qualifier features plot. Default FALSE. Qualifier features may included final analysis still retained reference. include_istd Whether include internal standard features plot. Default FALSE. Internal standards used calibration purposes mass spectrometry experiments. user_defined_keeper Whether retain user-specified features selected QC filters. Default FALSE. TRUE, user-defined features kept even fail QC. font_base_size base font size plot. Default 8.","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_qc_summary_byclass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot QC Filtering Summary by Feature Class — plot_qc_summary_byclass","text":"ggplot2 object showing feature QC filtering summary class.","code":""},{"path":[]},{"path":"https://slinghub.github.io/midar/reference/plot_qc_summary_overall.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Overall QC Filtering Summary — plot_qc_summary_overall","title":"Plot Overall QC Filtering Summary — plot_qc_summary_overall","text":"function generates summary feature QC filtering process, visualizing number features passed failed various QC criteria. includes Venn diagram showing features excluded due different filtering criteria signal--blank ratios, CV thresholds, linearity. criteria applied hierarchically, meaning feature must pass lower-tier filters considered failure higher-tier filters.","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_qc_summary_overall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Overall QC Filtering Summary — plot_qc_summary_overall","text":"","code":"plot_qc_summary_overall(   data = NULL,   include_qualifier = FALSE,   include_istd = FALSE,   with_venn_diag = TRUE,   user_defined_keeper = FALSE,   font_base_size = 8 )"},{"path":"https://slinghub.github.io/midar/reference/plot_qc_summary_overall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Overall QC Filtering Summary — plot_qc_summary_overall","text":"data MidarExperiment object include_qualifier Whether include qualifier features plot. Default FALSE. include_istd Whether include internal standard features plot. Default FALSE. with_venn_diag Whether include Venn diagram summarizing features excluded due different QC criteria. Default TRUE. user_defined_keeper Whether retain user-specified features selected QC filters. Default FALSE. font_base_size base font size plot. Default 8.","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_qc_summary_overall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Overall QC Filtering Summary — plot_qc_summary_overall","text":"ggplot2 object showing feature QC filtering summary without Venn diagram.","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_qc_summary_overall.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Overall QC Filtering Summary — plot_qc_summary_overall","text":"QC filtering process follows hierarchical structure, features first evaluated lower-level filters signal--blank ratios limit detection (LOD). features pass basic criteria subjected higher-level filters like coefficient variation (CV) linear regression results. feature fail higher-level filter (CV R-squared) passed previous lower-level filters. ensures features evaluated progressively, starting fundamental quality checks stringent filtering criteria.","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_responsecurves.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Response Curves — plot_responsecurves","title":"Plot Response Curves — plot_responsecurves","text":"Generates linear regression plots measured feature within dataset. function allows customization plot's appearance format, can filter features based specified criteria.","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_responsecurves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Response Curves — plot_responsecurves","text":"","code":"plot_responsecurves(   data = NULL,   variable = \"intensity\",   filter_data = FALSE,   output_pdf = FALSE,   include_feature_filter = \"\",   exclude_feature_filter = \"\",   max_regression_value = NA,   path = \"\",   rows_page = 4,   cols_page = 5,   specific_page = NA,   point_size = 1.5,   line_width = 0.7,   scaling_factor = 1,   page_orientation = \"LANDSCAPE\",   font_base_size = 7,   show_progress = TRUE,   return_plots = FALSE )"},{"path":"https://slinghub.github.io/midar/reference/plot_responsecurves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Response Curves — plot_responsecurves","text":"data MidarExperiment object containing dataset sample amounts detector signals. Required. variable variable name plot y-axis, usually measure intensity. Defaults \"intensity\". filter_data Logical. Indicates whether use quality control (QC) filtered data (TRUE) raw data (FALSE). Defaults FALSE. output_pdf Logical. TRUE, saves generated plots PDF file. Defaults FALSE. include_feature_filter regex pattern filter include features match criteria. omitted, features considered. exclude_feature_filter regex pattern filter exclude features match criteria. omitted, features excluded. max_regression_value maximum x value (analyzed amount) regression line fitted. Defaults NA, considering data points. path file path saving PDF. Defaults empty string, meaning file saved. rows_page number rows plots per page PDF output. Defaults 4. cols_page number columns plots per page PDF output. Defaults 5. specific_page integer specifying particular page plot. NA, pages plotted. point_size Numeric value specifying size points plot. Defaults 1.5. line_width Numeric value specifying width regression lines. Defaults 0.7. scaling_factor universal scaling factor fonts, symbols, lines. Defaults 1. page_orientation orientation PDF paper, either \"LANDSCAPE\" \"PORTRAIT\". Defaults \"LANDSCAPE\". font_base_size base font size text plots. Defaults 7. show_progress Logical. Show progress bar plot creation set TRUE. Defaults TRUE. return_plots Logical. TRUE, returns plots list ggplot2 objects. item represents page plots. Defaults FALSE.","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_responsecurves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Response Curves — plot_responsecurves","text":"return_plots TRUE, list ggplot2 objects returned. Otherwise, function may return plot output /save PDF, depending output_pdf parameter.","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_rla_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Relative Log Abundance (RLA) Plot — plot_rla_boxplot","title":"Relative Log Abundance (RLA) Plot — plot_rla_boxplot","text":"Relative log abundance (RLA) plots show standardized feature abundances across samples. Standardization done removing either within-batch across-batch median feature RLA plots useful visualizing technical effects impact features similar manner, batch effects due changes instrument response, pipetting errors, sample spillage. Unlike plots raw normalized abundances, RLA plots robust types effects.","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_rla_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relative Log Abundance (RLA) Plot — plot_rla_boxplot","text":"","code":"plot_rla_boxplot(   data = NULL,   rla_type_batch = c(\"within\", \"across\"),   variable = c(\"intensity\", \"norm_intensity\", \"conc\", \"conc_raw\", \"area\", \"height\",     \"fwhm\"),   filter_data = FALSE,   qc_types = NA,   x_axis_variable = c(\"run_seq_num\"),   include_feature_filter = \"\",   exclude_feature_filter = \"\",   plot_range_indices = NA,   min_feature_intensity = 0,   y_lim = NA,   ignore_outliers = FALSE,   show_batches = TRUE,   batches_as_shades = FALSE,   batch_line_color = \"#b6f0c5\",   batch_shading_color = \"grey93\",   x_gridlines = FALSE,   linewidth = 0.2,   base_font_size = 8,   relative_log_abundances = TRUE )"},{"path":"https://slinghub.github.io/midar/reference/plot_rla_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relative Log Abundance (RLA) Plot — plot_rla_boxplot","text":"data MidarExperiment rla_type_batch Character, must either \"within\" \"across\", defining whether use within-batch across-batch RLA variable Variable plot, must one \"intensity\", \"norm_intensity\", \"conc\", \"conc_raw\", \"area\", \"height\", \"fwhm\". filter_data Logical, whether use QC-filtered data qc_types QC type(s) plot. Can vector QC types NA/NULL plot available QC types. x_axis_variable Character, variable use x-axis. Must one : \"run_seq_num\", \"run_no\", \"analysis_id\", \"timestamp\" include_feature_filter Regex pattern select specific features exclude_feature_filter Regex pattern exclude specific features plot_range_indices Numeric vector length 2, specifying start end indices sequence plotted. NA plots samples. min_feature_intensity Numeric, exclude features overall median signal value y_lim Numeric vector length 2, specifying lower upper y-axis limits. Default NA, uses limits calculated based ignore_outliers. ignore_outliers Logical, whether exclude outlier values based 4x MAD (median absolute deviation) fences show_batches Logical, whether show batch separators plot batches_as_shades Logical, whether show batches shaded areas instead line separators batch_line_color Character, color batch separator lines batch_shading_color Character, color batch shaded areas x_gridlines Logical, whether show major x-axis gridlines linewidth Numeric, line width used whiskers boxplot base_font_size Numeric, base font size plot relative_log_abundances Logical, whether use relative log abundances (RLA) just log-transformed values","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_rla_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relative Log Abundance (RLA) Plot — plot_rla_boxplot","text":"ggplot object representing RLA plot","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_rla_boxplot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Relative Log Abundance (RLA) Plot — plot_rla_boxplot","text":"De Livera et al. (2012) Normalizing integrating metabolomics data. Analytical Chemistry 10768-10776 DOI: 10.1021/ac302748b De Livera et al. (2015) Statistical Methods Handling Unwanted Variation Metabolomics Data. Analytical Chemistry 87(7):3606-3615 DOI: 10.1021/ac502439y","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_runscatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Run Scatter Plot to Visualize Analyte Distributions — plot_runscatter","title":"Create a Run Scatter Plot to Visualize Analyte Distributions — plot_runscatter","text":"run scatter plot allows visualize sequence measurements distribution QC (sample) types across analysis run sequence. can useful identifying trends, outliers, patterns data. function provides range options customizing plot, : Filtering data (e.g., QC type, feature ID) Applying outlier capping Displaying batch information control limits Showing trend lines drift correction Controlling layout appearance plot","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_runscatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Run Scatter Plot to Visualize Analyte Distributions — plot_runscatter","text":"","code":"plot_runscatter(   data = NULL,   variable = c(\"intensity\", \"norm_intensity\", \"conc\", \"conc_raw\", \"area\", \"height\",     \"fwhm\"),   filter_data = FALSE,   qc_types = NA,   include_qualifier = TRUE,   include_feature_filter = NA,   exclude_feature_filter = NA,   plot_range_indices = NA,   output_pdf = FALSE,   path = \"\",   log_scale = FALSE,   cap_outliers = FALSE,   cap_qc_k_mad = 4,   cap_spl_k_mad = 4,   cap_top_n_values = NA,   show_batches = TRUE,   show_control_limits = NA,   set_limits_n_sd = NA,   limits_batchwise = FALSE,   limits_linecolor = \"#38dff5\",   limits_linewidth = 0.75,   batches_as_shades = FALSE,   batch_line_color = \"#b6f0c5\",   batch_shading_color = \"grey93\",   cols_page = 3,   rows_page = 3,   base_font_size = 11,   annot_scale = 1,   show_trend = FALSE,   trend_linecolor = \"#22e06b\",   fit_qc_type = \"BQC\",   page_orientation = \"LANDSCAPE\",   point_transparency = 1,   point_size = 2,   point_border_width = 1,   specific_page = NA,   y_label_text = NA,   return_plots = FALSE,   show_gridlines = FALSE,   show_progress = FALSE )"},{"path":"https://slinghub.github.io/midar/reference/plot_runscatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Run Scatter Plot to Visualize Analyte Distributions — plot_runscatter","text":"data MidarExperiment object variable Variable plot, one 'area', 'height', 'intensity', 'norm_intensity', 'intensity_raw', 'norm_intensity_raw', 'response', 'conc', 'conc_raw', 'rt', 'fwhm.' filter_data Logical, whether use QC-filtered data based criteria set via filter_features_qc() qc_types QC types shown. Can vector QC types regular expression pattern. NA (default) displays available QC/Sample types. include_qualifier Logical, whether include qualifier features include_feature_filter Regex pattern select features feature_id. NA \"\" ignores filter. exclude_feature_filter Regex pattern exclude features feature_id. NA \"\" ignores filter. plot_range_indices Numeric vector length 2, specifying start end indices sequence plotted. NA plots samples. output_pdf Logical, whether save plot PDF file path File name PDF output log_scale Logical, whether use log10 scale y-axis cap_outliers Logical, whether cap upper outliers based MAD fences SPL QC samples cap_qc_k_mad Numeric, k * MAD (median absolute deviation) outlier capping QC samples cap_spl_k_mad Numeric, k * MAD (median absolute deviation) outlier capping SPL samples cap_top_n_values Numeric, cap top n values regardless MAD fences. NA 0 ignores filter. show_batches Logical, whether show batch separators plot show_control_limits Logical, whether show mean line specified QC types. NA ignores mean line. set_limits_n_sd Numeric, show +/- n x SD lines QC types defined show_control_limits. NA ignores SD lines. limits_batchwise Logical, whether calculate mean SD lines per batch limits_linecolor Color mean SD lines limits_linewidth Width mean SD lines batches_as_shades Logical, whether show batches shaded areas instead line separators batch_line_color Color batch separator lines batch_shading_color Color batch shaded areas cols_page Number columns per page rows_page Number rows per page base_font_size Base font size plot annot_scale Scale factor text elements show_trend Logical, whether show drift correction trend line trend_linecolor Color trend line fit_qc_type QC type used smoothing trend line page_orientation Page orientation, \"LANDSCAPE\" \"PORTRAIT\" point_transparency Alpha transparency data points point_size Size data points point_border_width Width data point borders specific_page Integer, show/save specific page number. NA plots/saves pages. y_label_text Override default y-axis label text return_plots Logical, whether return list ggplot objects show_gridlines Logical, whether show major x y gridlines show_progress Logical, whether show progress bar","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_runscatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Run Scatter Plot to Visualize Analyte Distributions — plot_runscatter","text":"list ggplot2 plots, NULL return_plots = FALSE","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_runsequence.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Sequence Plot to Visualize Analysis Design and Timelines — plot_runsequence","title":"Run Sequence Plot to Visualize Analysis Design and Timelines — plot_runsequence","text":"run sequence plot provides overview analysis design timelines, can useful subsequent processing steps. plot illustrates batch structure, quality control (QC) samples included respective positions, additional information regarding date, duration, run time analysis. Setting show_timestamp = TRUE allows check interruptions analysis timeline.","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_runsequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Sequence Plot to Visualize Analysis Design and Timelines — plot_runsequence","text":"","code":"plot_runsequence(   data = NULL,   qc_types = NA,   show_batches = TRUE,   show_timestamp = FALSE,   add_info_title = TRUE,   single_row = FALSE,   segment_width = 0.5,   batches_as_shades = FALSE,   batch_line_color = \"#b6f0c5\",   batch_shading_color = \"grey85\",   scale_factor = 1,   base_font_size = 8 )"},{"path":"https://slinghub.github.io/midar/reference/plot_runsequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Sequence Plot to Visualize Analysis Design and Timelines — plot_runsequence","text":"data MidarExperiment object qc_types QC types shown. Can vector QC types regular expression pattern. NA (default) displays available QC/Sample types. show_batches Logical, whether show batch separators plot show_timestamp Logical, whether use acquisition timestamp x-axis instead run sequence number add_info_title Logical, whether add title experiment title, analysis date, analysis times single_row Logical, whether show QC types single row segment_width Numeric, line width segments batches_as_shades Logical, whether show batches shaded areas instead line separators batch_line_color Color batch separator lines batch_shading_color Color batch shaded areas scale_factor Numeric, overall plot scale factor base_font_size Numeric, base font size plot","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_runsequence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Sequence Plot to Visualize Analysis Design and Timelines — plot_runsequence","text":"ggplot object representing run sequence plot","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_x_vs_y.html","id":null,"dir":"Reference","previous_headings":"","what":"Contrast two variables from QC metrics table for all features per feature class — plot_x_vs_y","title":"Contrast two variables from QC metrics table for all features per feature class — plot_x_vs_y","text":"Contrast two variables QC metrics table features per feature class","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_x_vs_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contrast two variables from QC metrics table for all features per feature class — plot_x_vs_y","text":"","code":"plot_x_vs_y(   data = NULL,   filter_data,   x_variable,   y_variable,   cv_treshhold = 25,   only_quantifier = TRUE,   xlim = c(0, NA),   ylim = c(0, NA),   ncol = 5,   point_size = 1,   point_alpha = 0.5,   scale_factor = 1,   font_base_size = 8 )"},{"path":"https://slinghub.github.io/midar/reference/plot_x_vs_y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contrast two variables from QC metrics table for all features per feature class — plot_x_vs_y","text":"data MidarExperiment object filter_data Use (default) qc-filtered data x_variable Variable QC metrics table used x axis y_variable Variable QC metrics table used y axis cv_treshhold Treshhold values shown plot dashed lines only_quantifier Show quantifier xlim Lower upper limits x axis vector ylim Lower upper limits y axis vector ncol Number facet columns point_size size points. Default 2 point_alpha transparency points scale_factor Scale factor text labels font_base_size Base font size plot text elements","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_x_vs_y.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contrast two variables from QC metrics table for all features per feature class — plot_x_vs_y","text":"ggplot2 object","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_calc_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate feature quality control (QC) metrics — qc_calc_metrics","title":"Calculate feature quality control (QC) metrics — qc_calc_metrics","text":"feature, different QC metrics calculated, either across full analysis medians batch-wise calculations","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_calc_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate feature quality control (QC) metrics — qc_calc_metrics","text":"","code":"qc_calc_metrics(   data = NULL,   batch_medians,   with_norm_intensity = TRUE,   with_conc = TRUE,   with_linearity = TRUE,   with_calibration = TRUE )"},{"path":"https://slinghub.github.io/midar/reference/qc_calc_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate feature quality control (QC) metrics — qc_calc_metrics","text":"data MidarExperiment object batch_medians Use median batch-wise derived QC values. Default FALSE. with_norm_intensity Include normalized intensity statistics features. Default TRUE. with_conc Include concentration statistics features. Default TRUE. with_linearity Include linearity statistics response curves. increase calculation time. Default TRUE. with_calibration Include external calibration results available.","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_calc_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate feature quality control (QC) metrics — qc_calc_metrics","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/quantify_by_calibration.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate concentrations based on external calibration — quantify_by_calibration","title":"Calculate concentrations based on external calibration — quantify_by_calibration","text":"Concentrations features analyses determined using ISTD-normalized intensities corresponding external calibration curves. Calibration curves calculated feature based calibration sample concentrations defined qc_concentrations metadata. regression fit model (linear quadratic) weighting method (either \"none\", \"1/x\", \"1/x^2\") can defined globally via arguments fit_method fit_weighting features, overwrite_metadata TRUE. Alternatively, model weighting can defined individually feature feature metadata (columns curve_fit_method fit_weighting). details missing metadata, default values provided via fit_method fit_weighting used.","code":""},{"path":"https://slinghub.github.io/midar/reference/quantify_by_calibration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate concentrations based on external calibration — quantify_by_calibration","text":"","code":"quantify_by_calibration(   data = NULL,   overwrite_metadata = FALSE,   fit_method = c(\"linear\", \"quadratic\"),   fit_weighting = c(\"none\", \"1/x\", \"1/x^2\"),   error_failed_calibration = TRUE,   error_missing_annotation = TRUE )"},{"path":"https://slinghub.github.io/midar/reference/quantify_by_calibration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate concentrations based on external calibration — quantify_by_calibration","text":"data MidarExperiment object overwrite_metadata TRUE,  fit method weighting settings defined metadata ignored instead fit_method fit_weighting used features fit_method character string indicating default regression fit method use calibration curve. Must one \"linear\" \"quadratic\". method used specific fit method defined feature metadata. fit_weighting character string indicating default weighting method regression points calibration curve. Must one \"none\", \"1/x\", \"1/x^2\". specific weighting method defined feature metadata, method used. error_failed_calibration TRUE, error raised calibration curve fitting failed feature. FALSE, failed calibration curve fitting ignored, resulting feature concentration NA. error_missing_annotation Raise error following information missing: calibration curve data, ISTD mix volume sample amounts feature. FALSE, missing annotations ignored, resulting feature concentration NA","code":""},{"path":"https://slinghub.github.io/midar/reference/quantify_by_calibration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate concentrations based on external calibration — quantify_by_calibration","text":"modified MidarExperiment object updated concentration values.","code":""},{"path":"https://slinghub.github.io/midar/reference/quantify_by_calibration.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate concentrations based on external calibration — quantify_by_calibration","text":"concentrations added dataset table feature_conc column. results regression calculated LoD LoQ values stored metrics_calibration table returned MidarExperiment object.","code":""},{"path":[]},{"path":"https://slinghub.github.io/midar/reference/quantify_by_istd.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Analyte Concentrations Based on Internal Standards — quantify_by_istd","title":"Calculate Analyte Concentrations Based on Internal Standards — quantify_by_istd","text":"Analyte concentrations calculated based ISTD-normalized intensities corresponding spiked-ISTD amount, normalized sample amount (single-point calibration approach). concentration unit determined sample_amount_unit field analysis metadata MidarExperiment object.","code":""},{"path":"https://slinghub.github.io/midar/reference/quantify_by_istd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Analyte Concentrations Based on Internal Standards — quantify_by_istd","text":"","code":"quantify_by_istd(data = NULL, error_missing_annotation = TRUE)"},{"path":"https://slinghub.github.io/midar/reference/quantify_by_istd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Analyte Concentrations Based on Internal Standards — quantify_by_istd","text":"data MidarExperiment object error_missing_annotation TRUE, error raised following information missing: ISTD concentration, ISTD mix volume, sample amounts feature. FALSE, missing annotations ignored, resulting feature concentration NA","code":""},{"path":"https://slinghub.github.io/midar/reference/quantify_by_istd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Analyte Concentrations Based on Internal Standards — quantify_by_istd","text":"MidarExperiment object calculated analyte concentrations added dataset table feature_conc column.","code":""},{"path":"https://slinghub.github.io/midar/reference/quantify_by_istd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Analyte Concentrations Based on Internal Standards — quantify_by_istd","text":"calculated concentrations added dataset table new column named feature_conc.","code":""},{"path":[]},{"path":"https://slinghub.github.io/midar/reference/report_write_qc_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Save the QC table to a CSV file — report_write_qc_metrics","title":"Save the QC table to a CSV file — report_write_qc_metrics","text":"Save QC table CSV file","code":""},{"path":"https://slinghub.github.io/midar/reference/report_write_qc_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save the QC table to a CSV file — report_write_qc_metrics","text":"","code":"report_write_qc_metrics(data = NULL, path)"},{"path":"https://slinghub.github.io/midar/reference/report_write_qc_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save the QC table to a CSV file — report_write_qc_metrics","text":"data MidarExperiment object path File name path exported CSV file","code":""},{"path":"https://slinghub.github.io/midar/reference/report_write_qc_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save the QC table to a CSV file — report_write_qc_metrics","text":"tibble exported dataset","code":""},{"path":"https://slinghub.github.io/midar/reference/save_dataset_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Export any parameter to a wide-format table — save_dataset_csv","title":"Export any parameter to a wide-format table — save_dataset_csv","text":"Export parameter wide-format table","code":""},{"path":"https://slinghub.github.io/midar/reference/save_dataset_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export any parameter to a wide-format table — save_dataset_csv","text":"","code":"save_dataset_csv(   data = NULL,   path,   variable = c(\"area\", \"height\", \"intensity\", \"norm_intensity\", \"response\", \"conc\",     \"conc_raw\", \"rt\", \"fwhm\"),   filter_data,   qc_types = c(\"SPL\", \"BQC\", \"TQC\", \"NIST\", \"LTR\", \"PBLK\", \"SBLK\", \"UBLK\", \"MBLK\"),   include_qualifier = NA,   include_istd = NA,   add_qctype = NA )"},{"path":"https://slinghub.github.io/midar/reference/save_dataset_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export any parameter to a wide-format table — save_dataset_csv","text":"data MidarExperiment object path File name path exported CSV fil variable Variable exported filter_data Use QC-filtered data, based criteria set via filter_features_qc(). Overwrites include_qualifier include_istd. qc_types QC type plot. qc_types us NA NULL, available QC types plotted. include_qualifier Include qualifier features. used filter_data = TRUE applied. include_istd Include internal standard features. Default TRUE. used filter_data = TRUE applied. add_qctype Add QC type column","code":""},{"path":"https://slinghub.github.io/midar/reference/save_report_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes all a data processing report to an EXCEL file — save_report_xlsx","title":"Writes all a data processing report to an EXCEL file — save_report_xlsx","text":"Writes data processing report EXCEL file","code":""},{"path":"https://slinghub.github.io/midar/reference/save_report_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes all a data processing report to an EXCEL file — save_report_xlsx","text":"","code":"save_report_xlsx(data = NULL, path)"},{"path":"https://slinghub.github.io/midar/reference/save_report_xlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes all a data processing report to an EXCEL file — save_report_xlsx","text":"data MidarExperiment object path File name path Excel file","code":""},{"path":"https://slinghub.github.io/midar/reference/set_analysis_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Analysis Order — set_analysis_order","title":"Set Analysis Order — set_analysis_order","text":"Determines sequence analyses using either instrument timestamps, order imported raw data file, order defined Analysis metadata. Note: changing analysis order, post processing steps must rerun.","code":""},{"path":"https://slinghub.github.io/midar/reference/set_analysis_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Analysis Order — set_analysis_order","text":"","code":"set_analysis_order(   data = NULL,   order_by = c(\"timestamp\", \"resultfile\", \"metadata\") )"},{"path":"https://slinghub.github.io/midar/reference/set_analysis_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Analysis Order — set_analysis_order","text":"data MidarExperiment object order_by Character string specifying ordering method. Must one \"timestamp\" (requires timestamp data imported results), \"resultfile\" (uses order imported data file), \"metadata\" (uses order analysis metadata)","code":""},{"path":"https://slinghub.github.io/midar/reference/set_analysis_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Analysis Order — set_analysis_order","text":"updated MidarExperiment object ordered analyses","code":""},{"path":"https://slinghub.github.io/midar/reference/set_analysis_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Analysis Order — set_analysis_order","text":"","code":"file_path <- system.file(\"extdata\", \"MRMkit_demo.tsv\", package = \"midar\") mexp <- MidarExperiment() mexp <- import_data_mrmkit(mexp, path = file_path, import_metadata = TRUE) #> ✔ Imported 499 analyses with 28 features #> ℹ `feature_area` selected as default feature intensity. Modify with `set_intensity_var()`. #> ✔ Analysis metadata associated with 499 analyses. #> ✔ Feature metadata associated with 28 features.  # Order by timestamp (if available) mexp <- set_analysis_order(mexp, \"timestamp\") #> ✔ Analysis order set to \"timestamp\"  # Order by metadata definition mexp <- set_analysis_order(mexp, \"metadata\") #> ✔ Analysis order set to \"metadata\""},{"path":"https://slinghub.github.io/midar/reference/set_intensity_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Set default variable to be used as feature raw signal value — set_intensity_var","title":"Set default variable to be used as feature raw signal value — set_intensity_var","text":"Sets raw signal variable used calculations starting raw signal values (.e., normalization)","code":""},{"path":"https://slinghub.github.io/midar/reference/set_intensity_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set default variable to be used as feature raw signal value — set_intensity_var","text":"","code":"set_intensity_var(   data = NULL,   variable_name,   auto_select = FALSE,   warnings = TRUE,   ... )"},{"path":"https://slinghub.github.io/midar/reference/set_intensity_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set default variable to be used as feature raw signal value — set_intensity_var","text":"data MidarExperiment object variable_name Feature variable used default feature intensity downstream processing. auto_select TRUE first available used default: \"intensity\", \"response\", \"area\", \"height\". warnings Suppress warnings ... Feature variables best search one--one auto-detect = TRUE","code":""},{"path":"https://slinghub.github.io/midar/reference/set_intensity_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set default variable to be used as feature raw signal value — set_intensity_var","text":"MidarExperiment object","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://slinghub.github.io/midar/news/index.html","id":"midar-0100000","dir":"Changelog","previous_headings":"","what":"midar 0.1.0.0000","title":"midar 0.1.0.0000","text":"Initial version","code":""}]
