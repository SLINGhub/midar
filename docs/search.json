[{"path":[]},{"path":"https://slinghub.github.io/midar/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://slinghub.github.io/midar/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://slinghub.github.io/midar/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://slinghub.github.io/midar/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://slinghub.github.io/midar/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement Singapore Lipidomics Incubator. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://slinghub.github.io/midar/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://slinghub.github.io/midar/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://slinghub.github.io/midar/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://slinghub.github.io/midar/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://slinghub.github.io/midar/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://slinghub.github.io/midar/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://slinghub.github.io/midar/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Singapore Lipidomics Incubator Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://slinghub.github.io/midar/articles/1_datastructure.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Data Structure of MiDAR","text":" MidarExperiment object organizes data two main categories: data metadata. data category includes tables raw data, processed data, feature metrics, metadata category encompasses analysis annotations, feature annotations, internal standard annotations, batch annotations, response curve annotations, calibration curves. Key identifiers, analysis_id analyses feature_id features, used link data metadata integral functions package.","code":""},{"path":"https://slinghub.github.io/midar/articles/1_datastructure.html","id":"midarexperiment","dir":"Articles","previous_headings":"","what":"MidarExperiment","title":"Data Structure of MiDAR","text":"MidarExperiment object serves primary data container MiDAR workflow. encompasses experimental processed data, metadata, details applied processing steps, current data status. MiDAR functions data processing, management, visualization utilize MidarExperiment objects input output.","code":""},{"path":"https://slinghub.github.io/midar/articles/1_datastructure.html","id":"data-and-metadata","dir":"Articles","previous_headings":"","what":"Data and Metadata","title":"Data Structure of MiDAR","text":"Data within  MidarExperiment systematically organized data metadata categories, divided tables (data.frames).","code":""},{"path":[]},{"path":[]},{"path":"https://slinghub.github.io/midar/articles/1_datastructure.html","id":"key-data-identifiers","dir":"Articles","previous_headings":"","what":"Key Data Identifiers","title":"Data Structure of MiDAR","text":"following key data fields essential organizing data within MiDAR. Many MiDAR functions depend fields, exported data utilizes identifier names. Field Naming Considerations Certain field names differ conventional terminology (e.g., analysis_id instead  sample_id) enhance clarity prevent confusion identifiers. sample may measured multiple times across different methods processing replicates, necessitating distinct identifiers. Similarly, analytes can quantified multiple transitions adducts,  feature_id designated primary identifier.","code":""},{"path":"https://slinghub.github.io/midar/articles/BatchDriftCorrect.html","id":"batch-centering","dir":"Articles","previous_headings":"","what":"Batch-Centering","title":"Drift and Batch Correction","text":"Now let’s plot data batch correction.   Next, correct batch effects , time scaling variance.  Finally, can export corrected data using report_write_csv() function.","code":"# Correct batch effects - Set `correct_scale = TRUE` to scale also variance myexp <- correct_batch_centering(   data = myexp,    qc_types = \"SPL\",    correct_scale = FALSE) #> ✔ Batch median-centering of 7 batches was applied to raw concentrations of all 2 features. #> ℹ The median CV of features in the study samples across batches decreased by -30.7% (-30.8 to -30.5%) to 13.3%. qc_plot_runscatter(myexp, variable = \"conc_raw\", rows_page = 1, cols_page = 1) qc_plot_runscatter(myexp, variable = \"conc\", rows_page = 1, cols_page = 1) # Correct batch effects - WITH scaling of variance myexp <- midar::correct_batch_centering(   myexp,    qc_types = \"SPL\",    correct_scale = TRUE) #> ! Previous batch correction is being overwritten! #> ✔ Batch median-centering of 7 batches was applied to raw concentrations of all 2 features. #> ℹ The median CV of features in the study samples across batches decreased by -32.4% (-32.5 to -32.2%) to 11.6%.  qc_plot_runscatter(myexp, variable = \"conc\", rows_page = 1, cols_page = 1)"},{"path":"https://slinghub.github.io/midar/articles/BatchDriftCorrect.html","id":"drift-correction-and-batch-centering","dir":"Articles","previous_headings":"","what":"Drift Correction and Batch-Centering","title":"Drift and Batch Correction","text":"","code":"# Created a data object myexp <- midar::MidarExperiment(title = \"batch-effects\")  # Import a wide CSV file with some metadata  myexp <- data_import_csv(data = myexp,                            path = \"drift_batch_effect-simdata-u1000-sd100_7batches.csv\",                            variable_name = \"conc\",                            use_metadata = TRUE) #> ✔ Imported 1400 analyses with 1 features #> ℹ `feature_conc` selected as default feature intensity. Modify with `data_set_intensity_var()`. #> ✔ Analysis metadata associated with 1400 analyses. #> ✔ Feature metadata associated with 1 features.  # Within-batch drift correction (smoothing) based on study samples myexp <- midar::correct_drift_gaussiankernel(myexp,                                         qc_types = \"SPL\",                                          batch_wise = TRUE,                                          kernel_size = 10,                                          recalc_trend_after = TRUE,show_progress = T) #> Applying drift correction... #> ✔ Drift correction (batch-wise) was applied to raw concentrations of 1 of 1 features. #> ℹ The median CV of all features in study samples (batche medians) decreased by -5% (-5.0 to -5.0%) to 9.0%.  # Plot before and after batch correction  midar::qc_plot_runscatter(myexp, variable = \"conc_raw\", rows_page = 1, cols_page = 1,                            show_trend = TRUE, show_progress = F) midar::qc_plot_runscatter(myexp, variable = \"conc\", rows_page = 1, cols_page = 1,                            show_trend = TRUE, show_progress = F) # Correct between-batch effects (median centering) myexp <- midar::correct_batch_centering(myexp,                                          qc_types = \"SPL\",                                          correct_scale = TRUE) #> ✔ Batch median-centering of 7 batches was applied to drift-corrected concentrations of all 1 features. #> ℹ The median CV of features in the study samples across batches decreased by -29.6% (-29.6 to -29.6%) to 9.8%. #Plot again the fully corrected data midar::qc_plot_runscatter(myexp, variable = \"conc\", rows_page = 1, cols_page = 1,                            show_trend = TRUE, show_progress = F) # Save corrected data midar::report_write_csv(myexp,                          path = \"corrected-data.csv\",                          variable = \"conc\",                          filter_data = FALSE) #> ✔ Concentration values of 1400 analyses and 1 features have been exported."},{"path":"https://slinghub.github.io/midar/articles/annotating.html","id":"creating-a-midarexperiment-object","dir":"Articles","previous_headings":"","what":"Creating a MidarExperiment object","title":"MidarExperiment dataset object","text":"First {midar} package loaded create new MidarExperiment object. time can obtain summary status myexp object using print() function.","code":"library(midar) myexp <- MidarExperiment() print(myexp) #> Warning: Unknown or uninitialised column: `feature_id`."},{"path":"https://slinghub.github.io/midar/articles/annotating.html","id":"using-midarexperiment-objects","dir":"Articles","previous_headings":"","what":"Using MidarExperiment objects","title":"MidarExperiment dataset object","text":"MiDAR functions take MidarExperiment object input. Functions process update data return modified MidarExperiment object output, allowing used subsequent functions. can also use MidarExperiment objects R pipe chain. allows chain multiple functions together, making code streamlined easier read clearly indicating flow processing workflow. Multiple MidarExperiment objects can created processed independently within script.","code":"myexp <- MidarExperiment() myexp <- data_load_example(myexp, 1) myexp <- calc_normalize_by_istd(myexp) myexp <- report_write_csv(myexp,                            \"mydata.csv\",                            variable = \"norm_intensity\",                            filter_data = FALSE) myexp <- myexp |>    MidarExperiment() |>   data_load_example(1) |>   calc_normalize_by_istd() |>   report_write_csv(myexp,                     \"mydata.csv\",                     variable = \"norm_intensity\",                     filter_data = FALSE) myexp_panel_1 <- data_load_example(myexp, 1) myexp_panel_2 <- data_load_example(myexp, 1)"},{"path":"https://slinghub.github.io/midar/articles/annotating.html","id":"accessing-data-and-metadata","dir":"Articles","previous_headings":"","what":"Accessing data and metadata","title":"MidarExperiment dataset object","text":"Use specific functions access data metadata stored MidarExperiment object, rather directly accessing object slots. TODO","code":"myexp <- MidarExperiment() myexp <- data_load_example(myexp, 1) print(midar::data_get_analyticaldata(myexp))"},{"path":"https://slinghub.github.io/midar/articles/annotating.html","id":"saving-and-reading-midarexperiment-objects","dir":"Articles","previous_headings":"","what":"Saving and Reading MidarExperiment objects","title":"MidarExperiment dataset object","text":"","code":"myexp <- MidarExperiment() myexp <- data_load_example(myexp, 1) saveRDS(myexp, file = \"myexp-midar.rds\", compress = TRUE) my_saved_exp <- readRDS(file = \"myexp-midar.rds\") print(my_saved_exp)"},{"path":"https://slinghub.github.io/midar/articles/dataimport.html","id":"data-sources","dir":"Articles","previous_headings":"","what":"Data Sources","title":"Importing analytical data","text":"Following formats currently supported:","code":""},{"path":"https://slinghub.github.io/midar/articles/dataimport.html","id":"metadata-within-analytical-results","dir":"Articles","previous_headings":"","what":"Metadata within analytical results","title":"Importing analytical data","text":"analytical results contain metadata, sample feature annotations, can imported metadata MidarExperiment object well. imported metadata checked integrity consistency (see TODO) added annotation tables within MidarExperiment. include available metadata, set argument use_metadata = TRUE.","code":""},{"path":"https://slinghub.github.io/midar/articles/dataimport.html","id":"importing-and-merging-multiple-files","dir":"Articles","previous_headings":"","what":"Importing and merging multiple files","title":"Importing analytical data","text":"Multiple data files can imported merged simultaneously. Users can either provide list file paths specify folder path import data files within directory. support multiple files useful raw data processing divided batches, leading separate result files. imported merged data checked consistency, ensuring analysis ID feature ID pair unique. means feature reported multiple times within analysis, can happend example feature sample integrated different raw data processing batches.","code":""},{"path":"https://slinghub.github.io/midar/articles/dataimport.html","id":"mrmkit-results","dir":"Articles","previous_headings":"","what":"MRMkit Results","title":"Importing analytical data","text":"","code":"library(midar) filepath <- system.file(\"extdata/sPerfect_MRMkit.tsv\", package = \"midar\") myexp <- MidarExperiment() myexp <- data_import_mrmkit(myexp, filepath, use_metadata = TRUE)"},{"path":"https://slinghub.github.io/midar/articles/dataimport.html","id":"agilent-masshunter-quantitative","dir":"Articles","previous_headings":"","what":"Agilent MassHunter Quantitative","title":"Importing analytical data","text":"","code":"filepath <- system.file(\"extdata/Example_MHQuant_1.csv\", package = \"midar\") myexp <- MidarExperiment()  myexp <- data_import_masshunter(myexp, filepath, use_metadata = TRUE)"},{"path":"https://slinghub.github.io/midar/articles/dataimport.html","id":"plain-csv-files","dir":"Articles","previous_headings":"","what":"Plain CSV files","title":"Importing analytical data","text":"","code":"library(midar) myexp <- MidarExperiment()"},{"path":"https://slinghub.github.io/midar/articles/datastructure.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Data Structure of MiDAR","text":" MidarExperiment object organizes data two main categories: data metadata. data category includes tables raw data, processed data, feature metrics, metadata category encompasses analysis annotations, feature annotations, internal standard annotations, batch annotations, response curve annotations, calibration curves. Key identifiers, analysis_id analyses feature_id features, used link data metadata integral functions package.","code":""},{"path":"https://slinghub.github.io/midar/articles/datastructure.html","id":"midarexperiment","dir":"Articles","previous_headings":"","what":"MidarExperiment","title":"Data Structure of MiDAR","text":"MidarExperiment object serves primary data container MiDAR workflow. encompasses experimental processed data, metadata, details applied processing steps, current data status. MiDAR functions data processing, management, visualization utilize MidarExperiment objects input output.","code":""},{"path":"https://slinghub.github.io/midar/articles/datastructure.html","id":"data-and-metadata","dir":"Articles","previous_headings":"","what":"Data and Metadata","title":"Data Structure of MiDAR","text":"Data within MidarExperiment organized data metadata categories, divided tables (data.frames).","code":""},{"path":[]},{"path":[]},{"path":"https://slinghub.github.io/midar/articles/datastructure.html","id":"key-data-identifiers","dir":"Articles","previous_headings":"","what":"Key Data Identifiers","title":"Data Structure of MiDAR","text":"following key data fields essential organizing data within MiDAR. Many MiDAR functions depend fields, exported data utilizes identifier names. Field Naming Considerations Certain field names differ conventional terminology (e.g., analysis_id instead  sample_id) enhance clarity prevent confusion identifiers. sample may measured multiple times across different methods processing replicates, necessitating distinct identifiers. Similarly, analytes can quantified multiple transitions adducts,  feature_id designated primary identifier.","code":""},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"importing-mrmkit-results-with-integrated-peak-areas","dir":"Articles","previous_headings":"","what":"1. Importing MRMkit results with integrated peak areas","title":"MidarExperiment object","text":"Type print(myexp) console get summary status. can explore myexp object RStudio clicking Environment panel top right.","code":"myexp <- midar::MidarExperiment(title = \"sPerfect\")  data_path <- system.file(\"extdata\", \"sPerfect_MRMkit.tsv\", package = \"midar\") myexp <- data_import_mrmkit(data = myexp, path = data_path, use_metadata = TRUE) #> ✔ Imported 499 analyses with 503 features #> ℹ `feature_area` selected as default feature intensity. Modify with `data_set_intensity_var()`. #> ✔ Analysis metadata associated with 499 analyses. #> ✔ Feature metadata associated with 503 features."},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"a-glimpse-on-the-imported-mrmkit-results","dir":"Articles","previous_headings":"","what":"2. A glimpse on the imported MRMkit results","title":"MidarExperiment object","text":"Let us examine imported data executing code entering command View(myexp@dataset_orig) console. can observed, data long format, thereby enabling user view multiple parameters analysis-feature pair. Explore imported table using RStudio table viewer filter functionality.","code":"print(myexp@dataset_orig) # Better use `get_rawdata(mexp, \"original\")` #> # A tibble: 250,997 × 19 #>    analysis_id  data_source raw_data_filename acquisition_time_stamp sample_type #>    <chr>        <chr>       <chr>             <dttm>                 <chr>       #>  1 Longit_BLAN… /private/v… Longit_BLANK-01 … 2017-10-20 14:15:36    SBLK        #>  2 Longit_B-IS… /private/v… Longit_B-ISTD 01… 2017-10-20 14:27:06    PBLK        #>  3 Longit_Un-I… /private/v… Longit_Un-ISTD 0… 2017-10-20 14:38:26    UBLK        #>  4 Longit_LTR … /private/v… Longit_LTR 01.mz… 2017-10-20 14:49:48    LTR         #>  5 Longit_TQC-… /private/v… Longit_TQC-10%.m… 2017-10-20 15:12:31    TQC         #>  6 Longit_TQC-… /private/v… Longit_TQC-20%.m… 2017-10-20 15:23:51    TQC         #>  7 Longit_TQC-… /private/v… Longit_TQC-40%.m… 2017-10-20 15:35:11    TQC         #>  8 Longit_TQC-… /private/v… Longit_TQC-60%.m… 2017-10-20 15:46:31    TQC         #>  9 Longit_TQC-… /private/v… Longit_TQC-80%.m… 2017-10-20 15:57:51    TQC         #> 10 Longit_TQC-… /private/v… Longit_TQC-100%.… 2017-10-20 16:09:11    TQC         #> # ℹ 250,987 more rows #> # ℹ 14 more variables: batch_id <chr>, feature_id <chr>, istd_feature_id <chr>, #> #   integration_qualifier <lgl>, feature_rt <dbl>, feature_area <dbl>, #> #   feature_height <dbl>, feature_fwhm <dbl>, feature_int_start <dbl>, #> #   feature_int_end <dbl>, method_polarity <chr>, method_precursor_mz <dbl>, #> #   method_product_mz <dbl>, method_collision_energy <dbl>"},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"analytical-design-and-timeline","dir":"Articles","previous_headings":"","what":"3. Analytical design and timeline","title":"MidarExperiment object","text":"overview analysis design timelines can provide useful information subsequent processing steps. plot illustrates batch structure, quality control (QC) samples included respective positions, additional information regarding date, duration, run time analysis. Show analysis timestamps show_timestamp = TRUE. long interruptions within batches?","code":"qc_plot_runsequence(   myexp,    qc_types = NA,    show_batches = TRUE,    batches_as_shades = TRUE,    batch_shading_color = \"#fffbdb\",    segment_thickness = 0.5,   show_timestamp = FALSE)"},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"signal-trends-of-internal-standards","dir":"Articles","previous_headings":"","what":"4. Signal trends of Internal Standards","title":"MidarExperiment object","text":"can look internal standards (ISTDs) samples across six batches see analyses went. ISTD amount spiked sample (except SBLK) expect intensities samples sample types. observe? can set save_pdf = TRUE save plots PDF (see subfolder output).","code":"qc_plot_runscatter(   data = myexp,   variable = \"intensity\",   qc_types = c(\"BQC\", \"TQC\", \"SPL\", \"PBLK\", \"SBLK\"),   analysis_no_range = NA, #get_batch_boundaries(myexp, c(1,6)),    filt_include_features = \"ISTD\",    filt_exclude_features = \"Hex|282\",   cap_outliers = FALSE,   log_scale = FALSE,    show_batches = TRUE,base_font_size = 5,   save_pdf = FALSE,   path = \"./output/runscatter_istd.pdf\",   cols_page = 3, rows_page = 2 ) #> Generating plots (5 pages)... #>  - done!"},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"adding-detailed-metadata","dir":"Articles","previous_headings":"","what":"5. Adding detailed metadata","title":"MidarExperiment object","text":"proceed processing, require additional metadata describing samples features. MiDAR Excel template provides solution collection, organisation pre-validation analysis metadata. Import metadata template using function . errors metadata (e.g. duplicate missing ID), import fail error message summary errors. metadata error-free, summary warnings notes metadata shown table, present. Check metadata working warnings, proceed using ignore_warnings = TRUE. Open XLSM file data folder explore metadata structure (click ‘Disable Macros’).","code":"file_path <- system.file(\"extdata\", \"Example_Metadata_1.xlsm\", package = \"midar\") myexp <- midar::metadata_import_midarxlm(myexp, path = file_path, ignore_warnings = TRUE) #> ! Metadata has following warnings and notifications: #> --------------------------------------------------------------------------------- #>   Type Table    Issue                           Column                Count #> 1 W    Analyses Analyses not in analysis data   NA                       15 #> 2 W    Features Feature(s) not in analysis data NA                        4 #> 3 W    Features Feature(s) without metadata     NA                        1 #> 4 W    ISTDs    Internal standard(s) not used   quant_istd_feature_id     1 #> --------------------------------------------------------------------------------- #> E = Error, W = Warning, N = Note #> --------------------------------------------------------------------------------- #> ✔ Analysis metadata associated with 499 analyses. #> ✔ Feature metadata associated with 502 features. #> ✔ Internal Standard metadata associated with 17 ISTDs. #> ✔ Response Curve metadata associated with 12 analyses."},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"overall-trends-and-possible-technical-outlier","dir":"Articles","previous_headings":"","what":"6. Overall trends and possible technical outlier","title":"MidarExperiment object","text":"examine overall technical trends issues affecting majority analytes (features), RLA (Relative Log Abundance) plot useful tool (De Livera et al., Analytical Chemistry, 2015). plot, features normalised (across within-batch medians) plotted boxplot per sample. plot can help identify potential pipetting errors, sample spillage, injection volume changes instrument sensitivity changes. First, run code . observations can made? , examine batch 6, uncommenting line #analysis_no_range =. see batch? Identify potential outlier sample setting x_axis_variable = \"analysis_id\". Next, set y-axis limits manually y_lim = c(-2,2) display analyses/batches inspect data trends fluctuations.","code":"midar::qc_plot_rla_boxplot(   data = myexp,   rla_type_batch = c(\"within\"),   variable = \"intensity\",   qc_types = c(\"BQC\", \"SPL\", \"RQC\", \"TQC\", \"PBLK\"),    filter_data = FALSE,    #analysis_no_range = get_batch_boundaries(myexp, batch_ids = c(6,6)),    #y_lim = c(-3,3),   x_axis_variable = \"run_seq_num\",   ignore_outliers = FALSE, x_gridlines = FALSE,   batches_as_shades = FALSE,   linewidth = 0.1 )"},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"pca-plot-of-all-qc-types","dir":"Articles","previous_headings":"","what":"7. PCA plot of all QC types","title":"MidarExperiment object","text":"principal component analysis (PCA) plot provides alternative method obtaining overview study quality control (QC) samples, well identifying potential issues, batch effects, technical outliers, differences sample types. Add blanks sample dilutions plot, including \"PBLK\", \"RQC\" qc_types = . think resulting PCA plot suggests now?","code":"qc_plot_pca(   data = myexp,    variable = \"feature_intensity\",    filter_data = FALSE,   pca_dim = c(1,2),   label_k_mad = 3,    qc_types = c(\"SPL\", \"BQC\", \"NIST\", \"TQC\"),   log_transform = TRUE,     point_size = 2, point_alpha = 0.7, font_base_size = 8, ellipse_alpha = 0.3,    remove_istds = TRUE)"},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"exclude-technical-outliers","dir":"Articles","previous_headings":"","what":"8. Exclude technical outliers","title":"MidarExperiment object","text":"Based RLA PCA plots, flagged technical outlier decided remove downstream processing via function data_exclude_analyses(). now see new PCA plot? Explore also different PCA dimensions (modifying pca_dim).","code":"# Exclude the sample from the processing myexp <- data_exclude_analyses(myexp, analyses_exlude = c(\"Longit_batch6_51\"), overwrite = TRUE) #> ℹ 1 analyses were excluded for downstream processing. Please reprocess data.  # Replot the PCA qc_plot_pca(   data = myexp,    variable = \"intensity\",    filter_data = FALSE,   pca_dim = c(1,2),   label_k_mad = 3,    qc_types = c(\"SPL\", \"BQC\", \"NIST\", \"TQC\"),   log_transform = TRUE,     point_size = 2, point_alpha = 0.7, font_base_size = 8, ellipse_alpha = 0.3,    remove_istds = TRUE,    hide_label_text = NA)"},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"response-curves","dir":"Articles","previous_headings":"","what":"9. Response curves","title":"MidarExperiment object","text":"linear response quantification prerequisite compared differences analyte concentrations samples. Given considerable dynamic range plasma lipid species abundances fact class-specific ISTD spiked single concentration, verifying linear response can valuable aspect analytical quality assessment. optimising injected sample amount primarily matter quality assurance (QA), differences instrument performance can affect dynamic range. Therefore, measured injection volume series start end analysis QC. Look response curves . see results? Change plotted lipid species modifying feature_incl_filt (can use regular expressions). Save PDF lipids setting save_pdf = TRUE commenting (add # front ) feature_incl_filt","code":"# Exclude very low abundant features myexp <- midar::qc_apply_feature_filter(myexp, intensity.median.spl.min = 200) #> Calculating feature QC metrics - please wait... #> ✔ New QC filter criteria were defined: 415 of 423 quantifier features meet QC criteria (excluding the 25 quantifier ISTD features).  #Plot the curves qc_plot_responsecurves(   data = myexp,    variable = \"intensity\",    filter_data = TRUE,    feature_incl_filt = \"PC 3[2-9]\",    save_pdf = FALSE, path = \"./outout/response-curves.pdf\",    cols_page = 5,  ) #> Generating plots (2 pages):  |                                                          |                                                  |   0% #> Registered S3 methods overwritten by 'ggpp': #>   method                  from    #>   heightDetails.titleGrob ggplot2 #>   widthDetails.titleGrob  ggplot2 #>   |                                                          |=========================                         |  50% #>   |                                                          |==================================================| 100% - done!"},{"path":[]},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"isotope-interference-correction","dir":"Articles","previous_headings":"","what":"10. Isotope interference correction","title":"MidarExperiment object","text":"demonstrated course presentation, several instances peaks interest co-integrated interfering isotope peaks lipid species. intereferences can subtracted raw intensities (areas) using function, utilises information metadata. relative abundances interfering fragments obtained using LICAR (https://github.com/SLINGhub/LICAR). Check sheet “Features (Analytes)” metadata file (folder data). species affected? information need? correct M+3 isotope interference?","code":"myexp <- midar::correct_interferences(myexp) #> ✔ Interference-correction has been applied to 11 of the 502 features."},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"normalization-and-quantification-based-on-istds","dir":"Articles","previous_headings":"","what":"11. Normalization and quantification based on ISTDs","title":"MidarExperiment object","text":"first step normalize lipid species corresponding internal standard (ISTD). Subsequently, concentrations calculated based volume spiked-ISTD solution, concentration ISTDs solution, sample volume. Visit metadata template view corresponding details. can also try re-run e.g. RLA PCA plots variable = \"norm_intensity\" variable = \"conc\" plot normalized data.","code":"myexp <- midar::calc_normalize_by_istd(myexp) #> ✔ 460 features normalized with 17 ISTDs in 498 analyses. myexp <- midar::calc_quantify_by_istd(myexp) #> ✔ 460 feature concentrations calculated based on 17 ISTDs and sample amounts of 498 analyses. #> ℹ Concentrations are given in μmol/L."},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"examine-the-effects-of-class-wide-istd-normalization","dir":"Articles","previous_headings":"","what":"12. Examine the effects of class-wide ISTD normalization","title":"MidarExperiment object","text":"use class-specific ISTDs common practice lipidomics. However, non-authentic internal standards may elute different times, can result subject different matrix effects thus different responses compared analytes. may also differ fragmentation properties, can also affect response. Consequently, use non-authentic ISTDs normalization can lead introduction artefacts, can manifest increases sample variability, rather expected reduction. therefore important assess ISTDs QA particular, also QC, consider using alternative ISTDs observing artefacts. One approach detecting potential ISTD-related artefacts compare variability QC samples normalization. expect comarisons CV? notice potential issues ISTDs ? possible explanations effect? situation?","code":"myexp <- midar::qc_apply_feature_filter(myexp, intensity.median.spl.min = 1000, overwrite = FALSE) #> Calculating feature QC metrics - please wait... #> ✔ New QC filter criteria were defined: 393 of 423 quantifier features meet QC criteria (excluding the 25 quantifier ISTD features). qc_plot_normalization_cv(   data = myexp,    filter_data = FALSE,    qc_type = \"SPL\",    var_before = \"intensity\",    var_after = \"norm_intensity\")"},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"drift-correction","dir":"Articles","previous_headings":"","what":"13. Drift correction","title":"MidarExperiment object","text":"’re going use Gaussian kernel smoothing based study sample correct drifts concentration data within batch. summary return function isn’t meant actual diagnostics fit, rather understand fit caused major artefacts. also option scale along fit setting scale_smooth = TRUE. order demonstrate correction, plot example (PC 40:8) drift batch correction. using plot several occasions, create simple function wraps plot many parameters preset. Let’s use defined function plot trends one selected example within-batch smoothing. may caused drift raw concentrations? QC samples follow trend sample? Look also lipid species. Try changing batch_wise = FALSE code chunk correct_drift_gaussiankernel() run run smoothing across batches. valid alternative? NOTE: don’t forget change back batch_wise = TRUE test.","code":"myexp <- midar::correct_drift_gaussiankernel(   data = myexp,   qc_types = c(\"SPL\"),   batch_wise = TRUE,   kernel_size = 10,   outlier_filter = TRUE,   outlier_ksd = 5,   location_smooth = TRUE,   scale_smooth = TRUE,    show_progress = TRUE  # set to FALSE when rendering ) #> Applying drift correction... #>   |                                                    |                                            |   0%  |                                                    |=                                           |   2%  |                                                    |==                                          |   4%  |                                                    |===                                         |   6%  |                                                    |====                                        |   8%  |                                                    |====                                        |  10%  |                                                    |=====                                       |  12%  |                                                    |======                                      |  14%  |                                                    |=======                                     |  16%  |                                                    |========                                    |  18%  |                                                    |=========                                   |  20%  |                                                    |==========                                  |  22%  |                                                    |===========                                 |  24%  |                                                    |============                                |  26%  |                                                    |============                                |  28%  |                                                    |=============                               |  30%  |                                                    |==============                              |  32%  |                                                    |===============                             |  34%  |                                                    |================                            |  37%  |                                                    |=================                           |  39%  |                                                    |==================                          |  41%  |                                                    |===================                         |  43%  |                                                    |====================                        |  45%  |                                                    |=====================                       |  47%  |                                                    |=====================                       |  49%  |                                                    |======================                      |  51%  |                                                    |=======================                     |  53%  |                                                    |========================                    |  55%  |                                                    |=========================                   |  57%  |                                                    |==========================                  |  59%  |                                                    |===========================                 |  61%  |                                                    |============================                |  63%  |                                                    |=============================               |  65%  |                                                    |=============================               |  67%  |                                                    |==============================              |  69%  |                                                    |===============================             |  71%  |                                                    |================================            |  73%  |                                                    |=================================           |  75%  |                                                    |==================================          |  77%  |                                                    |===================================         |  79%  |                                                    |====================================        |  81%  |                                                    |=====================================       |  83%  |                                                    |=====================================       |  85%  |                                                    |======================================      |  87%  |                                                    |=======================================     |  89%  |                                                    |========================================    |  91%  |                                                    |=========================================   |  93%  |                                                    |==========================================  |  95%  |                                                    |=========================================== |  97%  |                                                    |============================================|  99%  |                                                    |============================================| 100% - trend smoothing done! #>   |                                                    |                                            |   0%  |                                                    |=                                           |   2%  |                                                    |==                                          |   4%  |                                                    |===                                         |   6%  |                                                    |====                                        |   8%  |                                                    |====                                        |  10%  |                                                    |=====                                       |  12%  |                                                    |======                                      |  14%  |                                                    |=======                                     |  16%  |                                                    |========                                    |  18%  |                                                    |=========                                   |  20%  |                                                    |==========                                  |  22%  |                                                    |===========                                 |  24%  |                                                    |============                                |  26%  |                                                    |============                                |  28%  |                                                    |=============                               |  30%  |                                                    |==============                              |  32%  |                                                    |===============                             |  34%  |                                                    |================                            |  37%  |                                                    |=================                           |  39%  |                                                    |==================                          |  41%  |                                                    |===================                         |  43%  |                                                    |====================                        |  45%  |                                                    |=====================                       |  47%  |                                                    |=====================                       |  49%  |                                                    |======================                      |  51%  |                                                    |=======================                     |  53%  |                                                    |========================                    |  55%  |                                                    |=========================                   |  57%  |                                                    |==========================                  |  59%  |                                                    |===========================                 |  61%  |                                                    |============================                |  63%  |                                                    |=============================               |  65%  |                                                    |=============================               |  67%  |                                                    |==============================              |  69%  |                                                    |===============================             |  71%  |                                                    |================================            |  73%  |                                                    |=================================           |  75%  |                                                    |==================================          |  77%  |                                                    |===================================         |  79%  |                                                    |====================================        |  81%  |                                                    |=====================================       |  83%  |                                                    |=====================================       |  85%  |                                                    |======================================      |  87%  |                                                    |=======================================     |  89%  |                                                    |========================================    |  91%  |                                                    |=========================================   |  93%  |                                                    |==========================================  |  95%  |                                                    |=========================================== |  97%  |                                                    |============================================|  99%  |                                                    |============================================| 100% - trend recalc done! #> ✔ Drift correction (batch-wise) was applied to raw concentrations of 460 of 460 features. #> ℹ The median CV of all features in study samples (batche medians) decreased by -1.7% (-3.7 to 0.3%) to 42.2%. # Define a wrapper function  my_trend_plot <- function(variable, feature){   qc_plot_runscatter(     data = myexp,     variable = variable,     qc_types = c(\"BQC\", \"TQC\", \"SPL\"),     filt_include_features = feature,     filt_exclude_features = \"ISTD\",     cap_outliers = TRUE,     log_scale = FALSE,     show_trend = TRUE,     save_pdf = FALSE,     path = \"./output/runscatter_PC408_beforecorr.pdf\",     cols_page = 1, rows_page = 1,    ) } my_trend_plot(\"conc_raw\", \"PC 40:8\") #> Generating plots (1 page)... #>  - done! my_trend_plot(\"conc\", \"PC 40:8\") #> Generating plots (1 page)... #>  - done!"},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"batch-effect-correction","dir":"Articles","previous_headings":"","what":"14. Batch-effect correction","title":"MidarExperiment object","text":"observed, trend lines different batches aligned. use correct_batcheffects() correct median center (location) scale differences batches. define correction based study samples medians. optional scale correction can performed setting correct_scale = FALSE. correction directly plot example lipid species . Change sample type qc_type = \"BQC\" use BQC center batches. observe?","code":"myexp <- midar::correct_batch_centering(   myexp,    qc_types = \"SPL\", overwrite = T,   correct_location = TRUE,    correct_scale = FALSE) #> ✔ Batch median-centering of 6 batches was applied to drift-corrected concentrations of all 460 features. #> ℹ The median CV of features in the study samples across batches decreased by -0.6% (-2.2 to 1.0%) to 44.7%.  my_trend_plot(\"conc\", \"PC 40:8\") #> Generating plots (1 page)... #>  - done!"},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"saving-runscatter-plots-of-all-features-as-pdf","dir":"Articles","previous_headings":"","what":"15. Saving runscatter plots of all features as PDF","title":"MidarExperiment object","text":"additional inspection documentation, can save plots selected subset species. often preferable exclude blanks, can exhibit random concentrations signals features internal standards close proximity limit detection. corresponding PDF can accessed within output subfolder. Use filt_ arguments include exclude specific analytes. filter can use regular expressions (regex). (Hint: try using ChatGPT generate complex regex-based filters). Explore effect setting cap_outliers TRUEor FALSE. Run ?runscatter console press F2 function name see available options qc_plot_runscatter().","code":"qc_plot_runscatter(   data = myexp,   variable = \"conc\",   qc_types = c(\"BQC\", \"TQC\", \"SPL\"),   filt_include_features =  NA,   filt_exclude_features = \"ISTD\",   cap_outliers = TRUE,   log_scale = FALSE,   show_trend = TRUE,   save_pdf = TRUE,   path = \"./output/runscatter_after-drift-batch-correction.pdf\",   cols_page = 2,    rows_page = 2,   show_progress = TRUE )"},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"qc-based-feature-filtering","dir":"Articles","previous_headings":"","what":"16. QC-based feature filtering","title":"MidarExperiment object","text":"Finally, apply set filters exclude features don’t meet specific QC criteria. function qc_apply_feature_filter() lets apply filters. Just press TAB open bracket qc_apply_feature_filter() select, press F1 run ?qc_apply_feature_filter view, available filter criteria. filter function may applied multiple times, either overwriting amending previously set filters. Explore effects different filtering criteria filtering thresholds. plot section 17 can run order examine effects visually.","code":"myexp <- qc_apply_feature_filter(   data = myexp,   overwrite = TRUE,   batch_medians = TRUE,   qualifier.include = FALSE,   istd.include = FALSE,   response.curve.id = 1,   response.rsquare.min = 0.8,   response.yintersect.rel.max = 0.6,   signalblank.median.pblk.min = 10,   intensity.median.spl.min = 100,   #dratio.conc.tqc.mad.max = 0.5,   cv.conc.bqc.max = 25,   features_to_keep = c(\"CE 20:4\", \"CE 22:5\", \"CE 22:6\", \"CE 16:0\", \"CE 18:0\") ) #> Calculating feature QC metrics - please wait... #> ✔ New QC filter criteria were defined: 328 of 423 quantifier features meet QC criteria (excluding the 25 quantifier ISTD features)."},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"summary-of-the-qc-filtering","dir":"Articles","previous_headings":"","what":"17. Summary of the QC filtering","title":"MidarExperiment object","text":"plot provides overview data quality feature filtering. segments green indicate number species passed previously defined quality control (QC) filtering criteria. rest number species failed different filtering criteria. noted criteria hierarchically organised; feature classified failing criterion (e.g., CV) passed hierarchically lower filters (e.g., S/B LOD). differences lipid classes terms analytical performance? identified QC issues possible explanations ? implications want run next analysis?  following plot provides summary feature filtering process, indicating total number features successfully filtered. previously stated, classification based hierarchical application filters. Venn diagram right illustrates number features excluded particular filtering criterion. Take look Venn diagram. feature shows bad non-linear response (e.g. r2 < 0.8), reasons ?","code":"midar::qc_plot_summary_classes(myexp, include_qualifier = FALSE) midar::qc_plot_summary(myexp, include_qualifier = FALSE)"},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"saving-a-report-with-data-metadata-and-processing-details","dir":"Articles","previous_headings":"","what":"18. Saving a report with data, metadata and processing details","title":"MidarExperiment object","text":"detailed summary data post-processing can generated form formatted Excel workbook comprising multiple sheets, containing raw processed datasets, associated metadata, feature quality control metrics, information applied processing steps. Explore report saved output folder. can also save specific data subsets clean flat, wide CSV file. shared data statistical analysis presented next part workshop! Specify data export using function arguments check generated CSV files.","code":"midar::report_write_xlsx(myexp, path = \"./output/myexp-midar_report.xlsx\") #> Saving report to disk - please wait... #> ✔ The data processing report of analysis 'sPerfect' has been saved. midar::report_write_csv(   data = myexp,    path = \"./output/sperfect_filt_uM.csv\",   variable = \"conc\",    qc_types = \"SPL\",    include_qualifier = FALSE,   filter_data = TRUE) #> ✔ Concentration values of 377 analyses and 328 features have been exported."},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"sharing-the-midarexperiment-dataset","dir":"Articles","previous_headings":"","what":"19. Sharing the MidarExperiment dataset","title":"MidarExperiment object","text":"myexp object can saved RDS file shared. RDS files serialized R variables/objects can opened R anyone, even absence midar package. imported MidarExperiment object can also utilized re-processing, plotting, inspection using midar package. Save dataset disk re-open different name. Check status comparing dataset generated workflow (mexp)","code":"saveRDS(myexp, file = \"./output/myexp-midar.rds\", compress = TRUE) my_saved_exp <- readRDS(file = \"./output/myexp-midar.rds\") print(myexp) #>  #> ── MidarExperiment ───────────────────────────────────────────────────────────── #> Title: sPerfect #>  #> Processing status: Batch- and drift-corrected concentrations #>  #> ── Annotated Raw Data ── #>  #> • Samples: #> • Features: 502 #> • Intensity Variable: feature_area #>  #> ── Metadata ── #>  #> • Sample annotation: ✔ #> • Feature annotation: ✔ #> • Internal standard annotation: ✔ #> • Response curve annotation: ✔ #> • Study samples annotation: ✖ #>  #> ── Processing Status ── #>  #> • Isotope corrected: ✔ #> • ISTD normalized: ✔ #> • ISTD quantitated: ✔ #> • Drift corrected: ✔ #> • Batch corrected: ✔ #> • Feature QC-filtered: ✔ #>  #> ── Exclusion of Analyses and Features ── #>  #> • One or more analyses manually excluded: ✔"},{"path":"https://slinghub.github.io/midar/articles/getstarted.html","id":"more-qc","dir":"Articles","previous_headings":"","what":"20. More QC","title":"MidarExperiment object","text":"’ll add code extra QC analyses workshop starts.","code":""},{"path":"https://slinghub.github.io/midar/articles/importing.html","id":"data-sources","dir":"Articles","previous_headings":"","what":"Data Sources","title":"Importing analytical data","text":"Following formats currently supported:","code":""},{"path":"https://slinghub.github.io/midar/articles/importing.html","id":"metadata-within-analytical-results","dir":"Articles","previous_headings":"","what":"Metadata within analytical results","title":"Importing analytical data","text":"analytical results contain metadata, sample feature annotations, can imported metadata MidarExperiment object well. imported metadata checked integrity consistency (see TODO) added annotation tables within MidarExperiment. include available metadata, set argument use_metadata = TRUE.","code":""},{"path":"https://slinghub.github.io/midar/articles/importing.html","id":"importing-and-merging-multiple-files","dir":"Articles","previous_headings":"","what":"Importing and merging multiple files","title":"Importing analytical data","text":"Multiple data files can imported merged simultaneously. Users can either provide list file paths specify folder path import data files within directory. support multiple files useful raw data processing divided batches, leading separate result files. imported merged data checked consistency, ensuring analysis ID feature ID pair unique. means feature reported multiple times within analysis, can happend example feature sample integrated different raw data processing batches.","code":""},{"path":"https://slinghub.github.io/midar/articles/importing.html","id":"mrmkit-results","dir":"Articles","previous_headings":"","what":"MRMkit Results","title":"Importing analytical data","text":"","code":"library(midar) filepath <- system.file(\"extdata/sPerfect_MRMkit.tsv\", package = \"midar\") myexp <- MidarExperiment() myexp <- data_import_mrmkit(myexp, filepath, use_metadata = TRUE)"},{"path":"https://slinghub.github.io/midar/articles/importing.html","id":"agilent-masshunter-quantitative","dir":"Articles","previous_headings":"","what":"Agilent MassHunter Quantitative","title":"Importing analytical data","text":"","code":"filepath <- system.file(\"extdata/Example_MHQuant_1.csv\", package = \"midar\") myexp <- MidarExperiment()  myexp <- data_import_masshunter(myexp, filepath, use_metadata = TRUE)"},{"path":"https://slinghub.github.io/midar/articles/importing.html","id":"plain-csv-files","dir":"Articles","previous_headings":"","what":"Plain CSV files","title":"Importing analytical data","text":"","code":"library(midar) myexp <- MidarExperiment()"},{"path":"https://slinghub.github.io/midar/articles/midar.html","id":"example-workflow","dir":"Articles","previous_headings":"","what":"Example Workflow","title":"Getting Started","text":"example simple data processing workflow, starting peak integration results MRMkit (https://github.com/MRMkit)","code":"# Get paths of example files included with this package file_path <- system.file(\"extdata\", \"sPerfect_MRMkit.tsv\", package = \"midar\")  # Create a MidarExperiment object (S4) mexp <- MidarExperiment()  # Load data and metadata mexp <- midar::data_import_mrmkit(data = mexp,                                    path = file_path,                                    use_metadata = TRUE) #> ✔ Imported 499 analyses with 503 features #> ℹ `feature_area` selected as default feature intensity. Modify with `data_set_intensity_var()`. #> ✔ Analysis metadata associated with 499 analyses. #> ✔ Feature metadata associated with 503 features.  # # Normalize and quantitate each feature by internal standards # mexp <- calc_normalize_by_istd(mexp) #  # # Get QC metrics for each feature # mexp <- qc_calc_metrics(mexp) #  # # Filter features according to QC criteria # mexp <- qc_apply_feature_filter( #   data = mexp,  #   missing.normintensity.spl.prop.max = 0.2, #   cv.conc.bqc.max = 30, #   signalblank.median.pblk.min = 3, #   qualifier.include = TRUE,  #   istd.include = FALSE #)"},{"path":"https://slinghub.github.io/midar/articles/midar.html","id":"contributor-code-of-conduct","dir":"Articles","previous_headings":"","what":"Contributor Code of Conduct","title":"Getting Started","text":"Please note midar project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://slinghub.github.io/midar/articles/midarexperiment.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"MidarExperiment object","text":"MidarExperiment` object main data container used MiDAR workflow. holds experimental processed data metadata, well details applied processing steps current status data. MiDAR functions take MidarExperiment object input. Functions process update data return modified MidarExperiment object output, allowing used subsequent functions. can create process multiple MidarExperiment objects independently within script.","code":""},{"path":"https://slinghub.github.io/midar/articles/midarexperiment.html","id":"creating-a-midarexperiment-object","dir":"Articles","previous_headings":"Overview","what":"Creating a MidarExperiment object","title":"MidarExperiment object","text":"First {midar} package loaded create new MidarExperiment object.","code":"library(midar) myexp <- MidarExperiment()"},{"path":"https://slinghub.github.io/midar/articles/midarexperiment.html","id":"using-midarexperiment-objects","dir":"Articles","previous_headings":"Overview","what":"Using MidarExperiment objects","title":"MidarExperiment object","text":"MiDAR functions take MidarExperiment object input. Functions process update data return modified MidarExperiment object output, allowing used subsequent functions. can also use MidarExperiment objects R pipe chain. allows chain multiple functions together, making code streamlined easier read clearly indicating flow processing workflow.","code":"myexp <- MidarExperiment() myexp <- data_load_example(myexp, 1) myexp <- calc_normalize_by_istd(myexp) #> ✔ 486 features normalized with 0 ISTDs in 499 analyses.  report_write_csv(myexp, \"mydata.csv\", \"norm_intensity\", FALSE) #> ✔ Norm_intensity values of 499 analyses and 486 features have been exported. myexp <- myexp |>    MidarExperiment() |>   data_load_example(1) |>   calc_normalize_by_istd() |>   report_write_csv(\"mydata.csv\", \"norm_intensity\", FALSE) #> ✔ 486 features normalized with 0 ISTDs in 499 analyses. #> ✔ Norm_intensity values of 499 analyses and 486 features have been exported."},{"path":"https://slinghub.github.io/midar/articles/midarexperiment.html","id":"status-of-an-midarexperiment","dir":"Articles","previous_headings":"Overview","what":"Status of an MidarExperiment","title":"MidarExperiment object","text":"detailed summary dataset processing status can printed time","code":"print(myexp) #> [1] \"cli-85346-7\""},{"path":"https://slinghub.github.io/midar/articles/midarexperiment.html","id":"multiple-midarexperiment-objects","dir":"Articles","previous_headings":"Overview","what":"Multiple MidarExperiment objects","title":"MidarExperiment object","text":"Multiple MidarExperiment objects can created processed independently within script.","code":"myexp_1 <- MidarExperiment(title = \"Polar metabolites\") myexp_2 <- MidarExperiment(title = \"Non-polar metabolites\")  #myexp <- midar::combine_experiments(myexp_1, myexp_2)"},{"path":"https://slinghub.github.io/midar/articles/midarexperiment.html","id":"accessing-data-and-metadata","dir":"Articles","previous_headings":"Overview","what":"Accessing data and metadata","title":"MidarExperiment object","text":"Functions starting data_get_ allow retrieve data metadat MidarExperiment object. Alternatively, $ syntax can used access data metadata tables MidarExperiment objects.","code":"myexp <- data_load_example(myexp, 1) dataset <- data_get_analyticaldata(myexp)  print(dataset) #> # A tibble: 250,997 × 14 #>    run_seq_num analysis_id    acquisition_time_stamp qc_type batch_id feature_id #>          <int> <chr>          <dttm>                 <chr>   <chr>    <chr>      #>  1           1 Longit_BLANK-… 2017-10-20 14:15:36    SBLK    1        CE 14:0    #>  2           1 Longit_BLANK-… 2017-10-20 14:15:36    SBLK    1        CE 15:0    #>  3           1 Longit_BLANK-… 2017-10-20 14:15:36    SBLK    1        CE 16:0    #>  4           1 Longit_BLANK-… 2017-10-20 14:15:36    SBLK    1        CE 16:1    #>  5           1 Longit_BLANK-… 2017-10-20 14:15:36    SBLK    1        CE 16:2    #>  6           1 Longit_BLANK-… 2017-10-20 14:15:36    SBLK    1        CE 17:0    #>  7           1 Longit_BLANK-… 2017-10-20 14:15:36    SBLK    1        CE 17:1    #>  8           1 Longit_BLANK-… 2017-10-20 14:15:36    SBLK    1        CE 18:0    #>  9           1 Longit_BLANK-… 2017-10-20 14:15:36    SBLK    1        CE 18:1    #> 10           1 Longit_BLANK-… 2017-10-20 14:15:36    SBLK    1        CE 18:1 d… #> # ℹ 250,987 more rows #> # ℹ 8 more variables: feature_class <chr>, is_istd <lgl>, is_quantifier <lgl>, #> #   feature_rt <dbl>, feature_area <dbl>, feature_height <dbl>, #> #   feature_fwhm <dbl>, feature_intensity <dbl> analyses <- myexp$annot_analyses features <- myexp$annot_features dataset <- myexp$dataset  print(features) #> # A tibble: 503 × 11 #>    feature_id        istd_feature_id feature_class is_istd quant_istd_feature_id #>    <chr>             <chr>           <chr>         <lgl>   <chr>                 #>  1 CE 14:0           CE 18:1 d7 (IS… NA            FALSE   NA                    #>  2 CE 15:0           CE 18:1 d7 (IS… NA            FALSE   NA                    #>  3 CE 16:0           CE 18:1 d7 (IS… NA            FALSE   NA                    #>  4 CE 16:1           CE 18:1 d7 (IS… NA            FALSE   NA                    #>  5 CE 16:2           CE 18:1 d7 (IS… NA            FALSE   NA                    #>  6 CE 17:0           CE 18:1 d7 (IS… NA            FALSE   NA                    #>  7 CE 17:1           CE 18:1 d7 (IS… NA            FALSE   NA                    #>  8 CE 18:0           CE 18:1 d7 (IS… NA            FALSE   NA                    #>  9 CE 18:1           CE 18:1 d7 (IS… NA            FALSE   NA                    #> 10 CE 18:1 d7 (ISTD) CE 18:1 d7 (IS… NA            TRUE    NA                    #> # ℹ 493 more rows #> # ℹ 6 more variables: is_quantifier <lgl>, valid_feature <lgl>, #> #   response_factor <dbl>, interference_feature_id <chr>, #> #   interference_proportion <dbl>, remarks <chr>"},{"path":"https://slinghub.github.io/midar/articles/midarexperiment.html","id":"saving-and-reading-midarexperiment-objects","dir":"Articles","previous_headings":"Overview","what":"Saving and Reading MidarExperiment objects","title":"MidarExperiment object","text":"","code":"myexp <- MidarExperiment() myexp <- data_load_example(myexp, 1) saveRDS(myexp, file = \"myexp-midar.rds\", compress = TRUE) my_saved_exp <- readRDS(file = \"myexp-midar.rds\") print(my_saved_exp)"},{"path":"https://slinghub.github.io/midar/articles/vocabulary.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Structure of Data and Metadata","text":" MidarExperiment object organizes data two main categories: dataa nd metadata. data category includes tables raw data, processed data, feature metrics, metadata category encompasses analysis annotations, feature annotations, internal standard annotations, batch annotations, response curve annotations, calibration curves. Key identifiers, analysis_id analyses feature_id features, used link data metadata integral functions package.","code":""},{"path":"https://slinghub.github.io/midar/articles/vocabulary.html","id":"midarexperiment","dir":"Articles","previous_headings":"","what":"MidarExperiment","title":"Structure of Data and Metadata","text":"MidarExperiment object serves primary data container MiDAR workflow. encompasses experimental processed data, metadata, details applied processing steps, current data status. MiDAR functions data processing, management, visualization utilize MidarExperiment objects input output.","code":""},{"path":"https://slinghub.github.io/midar/articles/vocabulary.html","id":"data-and-metadata","dir":"Articles","previous_headings":"","what":"Data and Metadata","title":"Structure of Data and Metadata","text":"Data within  MidarExperiment systematically organized data metadata categories, divided tables (data.frames).","code":""},{"path":[]},{"path":[]},{"path":"https://slinghub.github.io/midar/articles/vocabulary.html","id":"key-data-identifiers","dir":"Articles","previous_headings":"","what":"Key Data Identifiers","title":"Structure of Data and Metadata","text":"following key data fields essential organizing data within MiDAR. Many MiDAR functions depend fields, exported data utilizes identifier names. Field Naming Considerations Certain field names differ conventional terminology (e.g., analysis_id instead  sample_id) enhance clarity prevent confusion identifiers. sample may measured multiple times across different methods processing replicates, necessitating distinct identifiers. Similarly, analytes can quantified multiple transitions adducts,  feature_id designated primary identifier.","code":""},{"path":"https://slinghub.github.io/midar/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bo Burla. Author, maintainer.","code":""},{"path":"https://slinghub.github.io/midar/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Burla B (2024). midar: Small Molecule Mass Spectrometry Data Post-Processing, Quality Control, Exploration Reporting. R package version 0.1.2.9010, https://slinghub.github.io/midar/, https://github.com/SLINGhub/midar.","code":"@Manual{,   title = {midar: Small Molecule Mass Spectrometry Data Post-Processing, Quality Control, Exploration and Reporting},   author = {Bo Burla},   year = {2024},   note = {R package version 0.1.2.9010, https://slinghub.github.io/midar/},   url = {https://github.com/SLINGhub/midar}, }"},{"path":"https://slinghub.github.io/midar/index.html","id":"midar-","dir":"","previous_headings":"","what":"Small Molecule Mass Spectrometry Data Post-Processing, Quality Control, Exploration and Reporting","title":"Small Molecule Mass Spectrometry Data Post-Processing, Quality Control, Exploration and Reporting","text":"MiDAR R package designed reproducible post-processing, assessment, quality control, reporting small-molecule mass spectrometry (MS) datasets, including lipidomics metabolomics. offers complete workflow, allowing users import data, apply normalization quantification methods, perform isotope correction, address drift batch effects. Additionally, MiDAR supports feature filtering, sharing curated datasets various formats, generating quality control plots metrics evaluate analytical data quality effects post-processing steps. MiDAR intended analytical bioinformatics scientists. ItIts core tools accessible users basic understanding R coding, also allowing advanced customizations access data. approach, package supports analysts annotating, inspecting, processing data independently, facilitates sharing detailed annotated datasets processing information collaboration colleagues, including bioinformaticians, analyses. MiDAR emphasizes fully documented, reproducible data processing workflows serves tool creating automated data processing pipelines.","code":""},{"path":"https://slinghub.github.io/midar/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Small Molecule Mass Spectrometry Data Post-Processing, Quality Control, Exploration and Reporting","text":"console run:","code":"if (!require(\"pak\")) install.packages(\"pak\") pak::pkg_install(\"SLINGhub/midar\")"},{"path":"https://slinghub.github.io/midar/index.html","id":"example-workflow","dir":"","previous_headings":"","what":"Example workflow","title":"Small Molecule Mass Spectrometry Data Post-Processing, Quality Control, Exploration and Reporting","text":"","code":"library(midar)  # Create a MidarExperiment object myexp <- MidarExperiment()  # Load data and available metadata myexp <- data_import_mrmkit(myexp, path = \"data.tsv\") myexp <- metadata_import_midarxlm(myexp, path = \"metadata.csv\")   # Normalize and quantitate each feature by internal standards myexp <- calc_normalize_by_istd(myexp) myexp <- calc_quantify_by_istd(myexp)  # Filter features according to QC criteria mexp <- qc_apply_feature_filter(   data = mexp,    cv.conc.bqc.max = 30,   signalblank.median.pblk.min = 3, )  # Export concentration data myexp <- report_write_csv(   myexp,    path = \"mydata.csv\",    variable = \"norm_intensity\",    filter_data = FALSE)"},{"path":"https://slinghub.github.io/midar/reference/MidarExperiment-class.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 Class Representing the MIDAR Dataset — MidarExperiment-class","title":"S4 Class Representing the MIDAR Dataset — MidarExperiment-class","text":"MidarExperiment object core data structure utilized within MiDAR workflow, encapsulating relevant experimental data metadata. also includes processing results, details applied processing steps, current status data.","code":""},{"path":"https://slinghub.github.io/midar/reference/MidarExperiment-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"S4 Class Representing the MIDAR Dataset — MidarExperiment-class","text":"title Title experiment analysis_type Analysis type, one \"lipidomics\", \"metabolomics\", \"externalcalib\", \"others\" feature_intensity_var Feature variable used default calculations dataset_orig Original imported analysis data. Required fields: dataset Processed analysis data. Required fields: dataset_filtered Processed analysis data. Required fields: annot_analyses Annotation analyses/runs annot_features Annotation measured features. annot_istd Annotation Internal Standard concs. annot_responsecurves Annotation  Response curves (RQC). Required fields annot_studysamples Annotation study samples. Required fields: annot_batches Annotation batches. Required fields: metrics_qc QC information measured feature parameters_processing Values parameters used different processing steps status_processing Status within data processing workflow is_istd_normalized Flag data ISTD normalized is_quantitated Flag data quantitated using ISTD sample amount is_drift_corrected Flag data drift corrected is_batch_corrected Flag data batch corrected is_filtered Flag data filtered based QC parameters is_isotope_corr Flag one features isotope corrected has_outliers_tech Flag data technical analysis/sample outliers analyses_excluded Flag outliers excluded QC-filtered dataset","code":""},{"path":"https://slinghub.github.io/midar/reference/MidarExperiment-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S4 Class Representing the MIDAR Dataset — MidarExperiment-class","text":"","code":"myexp <- MidarExperiment(title = \"my_experiment\") print(myexp) #>  #> ── MidarExperiment ───────────────────────────────────────────────────────────── #> Title: my_experiment #>  #> Processing status: No Data #>  #> ── Annotated Raw Data ── #>  #> • Samples: #> Warning: Unknown or uninitialised column: `feature_id`. #> • Features: 0 #> • Intensity Variable: #>  #> ── Metadata ── #>  #> • Sample annotation: ✖ #> • Feature annotation: ✖ #> • Internal standard annotation: ✖ #> • Response curve annotation: ✖ #> • Study samples annotation: ✖ #>  #> ── Processing Status ── #>  #> • Isotope corrected: ✖ #> • ISTD normalized: ✖ #> • ISTD quantitated: ✖ #> • Drift corrected: ✖ #> • Batch corrected: ✖ #> • Feature QC-filtered: ✖ #>  #> ── Exclusion of Analyses and Features ── #>  #> • One or more analyses manually excluded: ✖"},{"path":"https://slinghub.github.io/midar/reference/MidarExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for the MidarExperiment object. — MidarExperiment","title":"Constructor for the MidarExperiment object. — MidarExperiment","text":"Constructor MidarExperiment object.","code":""},{"path":"https://slinghub.github.io/midar/reference/MidarExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for the MidarExperiment object. — MidarExperiment","text":"","code":"MidarExperiment(title = \"\", analysis_type = \"\")"},{"path":"https://slinghub.github.io/midar/reference/MidarExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for the MidarExperiment object. — MidarExperiment","text":"title Title experiment analysis_type Analysis type, one \"lipidomics\", \"metabolomics\", \"externalcalib\", \"others\"","code":""},{"path":"https://slinghub.github.io/midar/reference/MidarExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for the MidarExperiment object. — MidarExperiment","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/SLINGtools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"SLINGtools: Mass Spectrometry and Lipidomics Data Analysis in R — SLINGtools-package","title":"SLINGtools: Mass Spectrometry and Lipidomics Data Analysis in R — SLINGtools-package","text":"R functions facilitate managing, processing evaluating lipidomics data.","code":""},{"path":[]},{"path":"https://slinghub.github.io/midar/reference/SLINGtools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SLINGtools: Mass Spectrometry and Lipidomics Data Analysis in R — SLINGtools-package","text":"Maintainer: Bo Burla bo.burla@nus.edu.sg (ORCID)","code":""},{"path":"https://slinghub.github.io/midar/reference/add_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Add metadata an MidarExperiment object — add_metadata","title":"Add metadata an MidarExperiment object — add_metadata","text":"Metadata provided list tibbles validates consistency loaded analysis data provided MidarExperiment object transfered.","code":""},{"path":"https://slinghub.github.io/midar/reference/add_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add metadata an MidarExperiment object — add_metadata","text":"","code":"add_metadata(data = NULL, metadata, excl_unannotated_analyses = FALSE)"},{"path":"https://slinghub.github.io/midar/reference/add_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add metadata an MidarExperiment object — add_metadata","text":"data MidarExperiment object metadata List tibbles data.frames containing analysis, feature, istd, response curve tables excl_unannotated_analyses Exclude analyses (samples) matching metadata","code":""},{"path":"https://slinghub.github.io/midar/reference/add_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add metadata an MidarExperiment object — add_metadata","text":"metadata list","code":""},{"path":"https://slinghub.github.io/midar/reference/analysis_outlier_detection.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of analyses classified as technical outliers — analysis_outlier_detection","title":"Get list of analyses classified as technical outliers — analysis_outlier_detection","text":"Retrieves IDs os analysis technical outliers, .e, analyses systematic differences multiple features. based SD MAD fences mean median, respectively, principal components PCA, relative mean abundance (RMA)","code":""},{"path":"https://slinghub.github.io/midar/reference/analysis_outlier_detection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of analyses classified as technical outliers — analysis_outlier_detection","text":"","code":"analysis_outlier_detection(   data,   variable = c(\"feature_intensity\", \"feature_norm_intensity\", \"feature_conc\"),   qc_types = c(\"BQC\", \"TQC\", \"SPL\"),   pca_component,   fence_multiplicator,   summarize_fun = c(\"pca\", \"rma\"),   outlier_detection = c(\"sd\", \"mad\"),   log_transform = TRUE,   print_outliers = TRUE )"},{"path":"https://slinghub.github.io/midar/reference/analysis_outlier_detection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get list of analyses classified as technical outliers — analysis_outlier_detection","text":"data MidarExperiment object variable Feature variable used outlier detection qc_types QC types included outlier detection pca_component PCA component used fence_multiplicator Multiplicator SD MAD, respectively. summarize_fun Function used summarize features, either \"pca\" based PCA, \"rma\" based mean relative abundance (RMA) features outlier_detection Outlier detection method, either based SD (\"sd\") MAD (\"mad\") log_transform Log-transform data outlier detection print_outliers Print analysis_id outliers console","code":""},{"path":"https://slinghub.github.io/midar/reference/analysis_outlier_detection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get list of analyses classified as technical outliers — analysis_outlier_detection","text":"MidarExperiment object ggplot2 object","code":""},{"path":"https://slinghub.github.io/midar/reference/analysis_type-MidarExperiment-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get analysis_type — analysis_type,MidarExperiment-method","title":"Get analysis_type — analysis_type,MidarExperiment-method","text":"Get analysis_type","code":""},{"path":"https://slinghub.github.io/midar/reference/analysis_type-MidarExperiment-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get analysis_type — analysis_type,MidarExperiment-method","text":"","code":"# S4 method for class 'MidarExperiment' analysis_type(x)"},{"path":"https://slinghub.github.io/midar/reference/analysis_type-MidarExperiment-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get analysis_type — analysis_type,MidarExperiment-method","text":"x MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/analysis_type-MidarExperiment-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get analysis_type — analysis_type,MidarExperiment-method","text":"character string","code":""},{"path":"https://slinghub.github.io/midar/reference/analysis_type-set-MidarExperiment-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Set analysis_type — analysis_type<-,MidarExperiment-method","title":"Set analysis_type — analysis_type<-,MidarExperiment-method","text":"Set analysis_type","code":""},{"path":"https://slinghub.github.io/midar/reference/analysis_type-set-MidarExperiment-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set analysis_type — analysis_type<-,MidarExperiment-method","text":"","code":"# S4 method for class 'MidarExperiment' analysis_type(x) <- value"},{"path":"https://slinghub.github.io/midar/reference/analysis_type-set-MidarExperiment-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set analysis_type — analysis_type<-,MidarExperiment-method","text":"x MidarExperiment object value Analysis type, one \"lipidomics\", \"metabolomics, \"quantitative\"","code":""},{"path":"https://slinghub.github.io/midar/reference/analysis_type-set.html","id":null,"dir":"Reference","previous_headings":"","what":"Get analysis type — analysis_type<-","title":"Get analysis type — analysis_type<-","text":"Get analysis type defined MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/analysis_type-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get analysis type — analysis_type<-","text":"","code":"analysis_type(x) <- value"},{"path":"https://slinghub.github.io/midar/reference/analysis_type-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get analysis type — analysis_type<-","text":"x MidarExperiment object value Analysis type, one \"lipidomics\", \"metabolomics, \"quantitative\"","code":""},{"path":"https://slinghub.github.io/midar/reference/analysis_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Set analysis type — analysis_type","title":"Set analysis type — analysis_type","text":"Set analysis type, .e. \"lipidomics\", \"metabolomics, \"quantitative\"","code":""},{"path":"https://slinghub.github.io/midar/reference/analysis_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set analysis type — analysis_type","text":"","code":"analysis_type(x)"},{"path":"https://slinghub.github.io/midar/reference/analysis_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set analysis type — analysis_type","text":"x MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/analysis_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set analysis type — analysis_type","text":"character string","code":""},{"path":"https://slinghub.github.io/midar/reference/apply_qc_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"QC-filter dataset — apply_qc_filter","title":"QC-filter dataset — apply_qc_filter","text":"QC-filter dataset","code":""},{"path":"https://slinghub.github.io/midar/reference/apply_qc_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"QC-filter dataset — apply_qc_filter","text":"","code":"qc_apply_feature_filter(   data,   min_intensity_bqc = NA,   min_cv_conc_bqc = NA,   min_intensity_tqc = NA,   min_cv_conc_tqc = NA,   min_signal_blank_ratio = NA,   min_response_rsquare = NA,   rqc_curve_used_for_filt = NA )"},{"path":"https://slinghub.github.io/midar/reference/apply_qc_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"QC-filter dataset — apply_qc_filter","text":"data MidarExperiment object min_intensity_bqc min_intensity_bqc min_cv_conc_bqc = min_cv_conc_bqc min_intensity_tqc = min_intensity_tqc min_cv_conc_tqc = min_cv_conc_tqc min_signal_blank_ratio = min_signal_blank_ratio min_response_rsquare = min_response_rsquare rqc_curve_used_for_filt = rqc_curve_used_for_filt","code":""},{"path":"https://slinghub.github.io/midar/reference/apply_qc_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"QC-filter dataset — apply_qc_filter","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/assert_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Add metadata an MidarExperiment object — assert_metadata","title":"Add metadata an MidarExperiment object — assert_metadata","text":"Metadata provided list tibbles validates consistency loaded analysis data provided MidarExperiment object transfered.","code":""},{"path":"https://slinghub.github.io/midar/reference/assert_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add metadata an MidarExperiment object — assert_metadata","text":"","code":"assert_metadata(data, metadata, excl_unannotated_analyses, ignore_warnings)"},{"path":"https://slinghub.github.io/midar/reference/assert_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add metadata an MidarExperiment object — assert_metadata","text":"data MidarExperiment object metadata List tibbles data.frames containing analysis, feature, istd, response curve tables excl_unannotated_analyses Exclude analyses (samples) matching metadata ignore_warnings Ignore data validation warnings proceed adding metadata","code":""},{"path":"https://slinghub.github.io/midar/reference/assert_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add metadata an MidarExperiment object — assert_metadata","text":"metadata list","code":""},{"path":"https://slinghub.github.io/midar/reference/batch_corr_center.html","id":null,"dir":"Reference","previous_headings":"","what":"Combines a list of MidarExperiments into one — batch_corr_center","title":"Combines a list of MidarExperiments into one — batch_corr_center","text":"Combines list MidarExperiments one","code":""},{"path":"https://slinghub.github.io/midar/reference/batch_corr_center.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combines a list of MidarExperiments into one — batch_corr_center","text":"","code":"batch_corr_center(data, qc_types, center_by_fun = \"median\")"},{"path":"https://slinghub.github.io/midar/reference/batch_corr_center.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combines a list of MidarExperiments into one — batch_corr_center","text":"data MidarExperiment object qc_types QC types used batch correction center_by_fun Function used center. Default \"median\".","code":""},{"path":"https://slinghub.github.io/midar/reference/batch_corr_center.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combines a list of MidarExperiments into one — batch_corr_center","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/calcQC.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate QC parameters for each feature — calcQC","title":"Calculate QC parameters for each feature — calcQC","text":"Calculate QC parameters feature","code":""},{"path":"https://slinghub.github.io/midar/reference/calcQC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate QC parameters for each feature — calcQC","text":"","code":"qc_calc_metrics(data)"},{"path":"https://slinghub.github.io/midar/reference/calcQC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate QC parameters for each feature — calcQC","text":"data MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/calc_normalize_by_istd.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize Intensities with corresponding ISTD Intensities — calc_normalize_by_istd","title":"Normalize Intensities with corresponding ISTD Intensities — calc_normalize_by_istd","text":"Normalize Intensities corresponding ISTD Intensities","code":""},{"path":"https://slinghub.github.io/midar/reference/calc_normalize_by_istd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize Intensities with corresponding ISTD Intensities — calc_normalize_by_istd","text":"","code":"calc_normalize_by_istd(data = NULL, error_missing_info = TRUE)"},{"path":"https://slinghub.github.io/midar/reference/calc_normalize_by_istd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize Intensities with corresponding ISTD Intensities — calc_normalize_by_istd","text":"data MidarExperiment object error_missing_info Raise error ISTD defined 1 features (excluding ISTD ) . Default: TRUE.","code":""},{"path":"https://slinghub.github.io/midar/reference/calc_normalize_by_istd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize Intensities with corresponding ISTD Intensities — calc_normalize_by_istd","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/calc_quant_by_istd.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate analyte concentrations — calc_quantify_by_istd","title":"Calculate analyte concentrations — calc_quantify_by_istd","text":"Calculation based ISTD-normalized intensities corresponding sample spiked-ISTD amounts. determined concentration unit based sample_amount_unit provided analysis metadata. spiked-ISTD concentrations missing, concentrations ","code":""},{"path":"https://slinghub.github.io/midar/reference/calc_quant_by_istd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate analyte concentrations — calc_quantify_by_istd","text":"","code":"calc_quantify_by_istd(data, error_missing_info = TRUE, ignore_unused_istds = TRUE)"},{"path":"https://slinghub.github.io/midar/reference/calc_quant_by_istd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate analyte concentrations — calc_quantify_by_istd","text":"data MidarExperiment object error_missing_info Raise error 1 ISTD concentratios sample/ISTD amounts missing. Default: TRUE. ignore_unused_istds Ignore ISTDs missing concentrations used feature quantitation. Default: FALSE.","code":""},{"path":"https://slinghub.github.io/midar/reference/calc_quant_by_istd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate analyte concentrations — calc_quantify_by_istd","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/calc_quantify_by_istd.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate analyte concentrations — calc_quantify_by_istd","title":"Calculate analyte concentrations — calc_quantify_by_istd","text":"Calculation based ISTD-normalized intensities corresponding sample spiked-ISTD amounts. determined concentration unit based sample_amount_unit provided analysis metadata. spiked-ISTD concentrations missing, concentrations ","code":""},{"path":"https://slinghub.github.io/midar/reference/calc_quantify_by_istd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate analyte concentrations — calc_quantify_by_istd","text":"","code":"calc_quantify_by_istd(   data = NULL,   error_missing_info = TRUE,   ignore_unused_istds = TRUE )"},{"path":"https://slinghub.github.io/midar/reference/calc_quantify_by_istd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate analyte concentrations — calc_quantify_by_istd","text":"data MidarExperiment object error_missing_info Raise error 1 ISTD concentratios sample/ISTD amounts missing. Default: TRUE. ignore_unused_istds Ignore ISTDs missing concentrations used feature quantitation. Default: FALSE.","code":""},{"path":"https://slinghub.github.io/midar/reference/calc_quantify_by_istd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate analyte concentrations — calc_quantify_by_istd","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/calculate_qc_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate QC metrics for each feature — calculate_qc_metrics","title":"Calculate QC metrics for each feature — calculate_qc_metrics","text":"Calculate QC metrics feature","code":""},{"path":"https://slinghub.github.io/midar/reference/calculate_qc_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate QC metrics for each feature — calculate_qc_metrics","text":"","code":"qc_calc_metrics(data)"},{"path":"https://slinghub.github.io/midar/reference/calculate_qc_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate QC metrics for each feature — calculate_qc_metrics","text":"data MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/calculate_qc_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate QC metrics for each feature — calculate_qc_metrics","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/cash-MidarExperiment-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for specific slots of an MidarExperiments object — $,MidarExperiment-method","title":"Getter for specific slots of an MidarExperiments object — $,MidarExperiment-method","text":"$ syntax can used shortcut getting specific variables results MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/cash-MidarExperiment-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for specific slots of an MidarExperiments object — $,MidarExperiment-method","text":"","code":"# S4 method for class 'MidarExperiment' x$name"},{"path":"https://slinghub.github.io/midar/reference/cash-MidarExperiment-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for specific slots of an MidarExperiments object — $,MidarExperiment-method","text":"x MidarExperiment object name MidarExperiment slot","code":""},{"path":"https://slinghub.github.io/midar/reference/cash-MidarExperiment-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getter for specific slots of an MidarExperiments object — $,MidarExperiment-method","text":"Value variable tibble","code":""},{"path":"https://slinghub.github.io/midar/reference/cash-MidarExperiment-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getter for specific slots of an MidarExperiments object — $,MidarExperiment-method","text":"","code":"mexp <- MidarExperiment() mexp$analysis_type #> [1] \"\" mexp$annot_analyses #> # A tibble: 0 × 13 #> # ℹ 13 variables: analysis_id <chr>, sample_id <chr>, qc_type <fct>, #> #   replicate_no <int>, batch_id <chr>, specimen <chr>, sample_amount <dbl>, #> #   sample_amount_unit <chr>, istd_volume <dbl>, valid_analysis <lgl>, #> #   outlier_technical <lgl>, outlier_technical_note <chr>, remarks <chr>"},{"path":"https://slinghub.github.io/midar/reference/clear_outlier.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear all analysis/sample outlier classifications — clear_outlier","title":"Clear all analysis/sample outlier classifications — clear_outlier","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/clear_outlier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear all analysis/sample outlier classifications — clear_outlier","text":"","code":"clear_outlier(data)"},{"path":"https://slinghub.github.io/midar/reference/clear_outlier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clear all analysis/sample outlier classifications — clear_outlier","text":"data description","code":""},{"path":"https://slinghub.github.io/midar/reference/clear_outlier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear all analysis/sample outlier classifications — clear_outlier","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/combine_experiments.html","id":null,"dir":"Reference","previous_headings":"","what":"Combines a list of MidarExperiments into one — combine_experiments","title":"Combines a list of MidarExperiments into one — combine_experiments","text":"Combines list MidarExperiments one","code":""},{"path":"https://slinghub.github.io/midar/reference/combine_experiments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combines a list of MidarExperiments into one — combine_experiments","text":"","code":"combine_experiments(..., ordered_by_runsequence)"},{"path":"https://slinghub.github.io/midar/reference/combine_experiments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combines a list of MidarExperiments into one — combine_experiments","text":"... MidarExperiment objects ordered_by_runsequence Boolean list provided MidarExperiment objects run order","code":""},{"path":"https://slinghub.github.io/midar/reference/corr_drift_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"Drift Correction by Custom Function — corr_drift_fun","title":"Drift Correction by Custom Function — corr_drift_fun","text":"Function correct run-order drifts within across batches via provided custom function #' @details drift correction function needs provided user. See smooth_fun details.","code":""},{"path":"https://slinghub.github.io/midar/reference/corr_drift_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drift Correction by Custom Function — corr_drift_fun","text":"","code":"corr_drift_fun(   data = NULL,   smooth_fun,   qc_types,   calc_log_transform = TRUE,   within_batch,   apply_conditionally,   apply_conditionally_per_batch = TRUE,   max_cv_ratio_before_after = 1,   use_uncorrected_if_fail = TRUE,   ignore_istd = TRUE,   feature_list = NULL,   recalc_trend_after = FALSE,   show_progress = TRUE,   ... )"},{"path":"https://slinghub.github.io/midar/reference/corr_drift_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drift Correction by Custom Function — corr_drift_fun","text":"data MidarExperiment object smooth_fun Function performs drift correction. Function need following parameter data (MidarExperiment), qc_typeS (one strings), span_width (numerical). Function needs return numerical vector length number rows data. case functions fails vector NA_real_ needs returned qc_types QC types used drift correction calc_log_transform Log transform data correction TRUE (default). Note: log transformation solely applied internally smoothing, results log-transformed. Log transformation may result robust smoothing less sensitive outlier. within_batch Apply batch separately TRUE (default) apply_conditionally Apply drift correction species TRUE, sample CV smoothing changes threshold defined via max_cv_ratio_before_after apply_conditionally_per_batch apply_conditionally = TRUE, correction conditionally applied per batch TRUE across batches FALSE max_cv_ratio_before_after used apply_conditionally = TRUE. Maximum allowed ratio sample CV change smoothing correction applied. value 1 (default) indicates CV needs improve remain unchanged smoothing conditional smoothing applied. value < 1 means CV needs improve, value e.g. 1.20 CV need improve get worse max 1.20-fold smoothing. use_uncorrected_if_fail case smoothing function fails species, use original (uncorrected) data TRUE (default) return NA analyses feature fit failed. ignore_istd apply corrections ISTDs feature_list Subset features correction whose names matches specified text using regular expression. Default NULL means features selected. recalc_trend_after Recalculate trend drift correction, used plot_qc_runscatter(). double calculation time. show_progress Show progress bar. Default = `TRUE. ... Parameters specific smoothing function","code":""},{"path":"https://slinghub.github.io/midar/reference/corr_drift_fun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drift Correction by Custom Function — corr_drift_fun","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_batch_centering.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch centering — correct_batch_centering","title":"Batch centering — correct_batch_centering","text":"short description... #' @details Additional details...","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_batch_centering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch centering — correct_batch_centering","text":"","code":"correct_batch_centering(   data = NULL,   qc_types,   correct_location = TRUE,   correct_scale = FALSE,   overwrite = TRUE,   calc_log_transform = TRUE,   ... )"},{"path":"https://slinghub.github.io/midar/reference/correct_batch_centering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch centering — correct_batch_centering","text":"data MidarExperiment object qc_types QC types used batch correction correct_location Align locations (median) batches correct_scale Scale batches level overwrite Overwrite previous batch correction apply top existing batch correction calc_log_transform Log transform data internally correction. Note: transform final results. ... parameters batch correction function. Currently use.","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_batch_centering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch centering — correct_batch_centering","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_drift_gaussiankernel.html","id":null,"dir":"Reference","previous_headings":"","what":"Drift Correction by Gaussian Kernel Smoothing — correct_drift_gaussiankernel","title":"Drift Correction by Gaussian Kernel Smoothing — correct_drift_gaussiankernel","text":"Function correct run-order drifts within across batches using gaussian kernel smoothing (see Tan et al. (2020)). typically used smooth based study samples. avoid local biases artefacts, function applied analyses wit sufficient number samples well randomized.","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_drift_gaussiankernel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drift Correction by Gaussian Kernel Smoothing — correct_drift_gaussiankernel","text":"","code":"correct_drift_gaussiankernel(   data = NULL,   qc_types,   batch_wise = TRUE,   kernel_size,   outlier_filter = FALSE,   outlier_ksd = 5,   location_smooth = TRUE,   scale_smooth = FALSE,   calc_log_transform = TRUE,   recalc_trend_after = TRUE,   apply_conditionally = FALSE,   apply_conditionally_per_batch = FALSE,   feature_list = NULL,   ignore_istd = TRUE,   max_cv_ratio_before_after = 1,   use_uncorrected_if_fail = FALSE,   show_progress = TRUE )"},{"path":"https://slinghub.github.io/midar/reference/correct_drift_gaussiankernel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drift Correction by Gaussian Kernel Smoothing — correct_drift_gaussiankernel","text":"data MidarExperiment object qc_types QC types used drift correction. Typically includes study samples (SPL). batch_wise Apply batch separately TRUE (default) kernel_size Kernel bandwidth outlier_filter Kernel Outlier filter outlier_ksd Kernel K times standard deviation data distribution location_smooth Location parameter smoothing scale_smooth Scale parameter smoothing calc_log_transform Log transform data correction TRUE (default). Note: log transformation solely applied internally smoothing, results log-transformed. Log transformation may result robust smoothing less sensitive outlier. recalc_trend_after Recalculate trends smoothing, used plotting (e.g., qc_plot_runscatter()) apply_conditionally Apply drift correction species TRUE, sample CV smoothing changes threshold defined via max_cv_ratio_before_after apply_conditionally_per_batch apply_conditionally = TRUE, correction conditionally applied per batch TRUE across batches FALSE feature_list Subset features correction whose names matches specified text using regular expression. Default NULL means features selected. ignore_istd apply corrections ISTDs max_cv_ratio_before_after used apply_conditionally = TRUE. Maximum allowed ratio sample CV change smoothing correction applied. value 1 (default) indicates CV needs improve remain unchanged smoothing conditional smoothing applied. value < 1 means CV needs improve, value e.g. 1.20 CV need improve get worse max 1.20-fold smoothing. use_uncorrected_if_fail case smoothing function fails species, use original (uncorrected) data TRUE (default) return NA analyses feature fit failed. show_progress Show progress bars. Set FALSE rendering notebook.","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_drift_gaussiankernel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drift Correction by Gaussian Kernel Smoothing — correct_drift_gaussiankernel","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_drift_gaussiankernel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Drift Correction by Gaussian Kernel Smoothing — correct_drift_gaussiankernel","text":"Teo G., Chew WS, Burla B, Herr D, Tai ES, Wenk MR, Torta F, & Choi H (2020). MRMkit: Automated Data Processing Large-Scale Targeted Metabolomics Analysis. Analytical Chemistry, 92(20), 13677–13682. https://doi.org/10.1021/acs.analchem.0c03060","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_drift_loess.html","id":null,"dir":"Reference","previous_headings":"","what":"Drift Correction by LOESS Smoothing — correct_drift_loess","title":"Drift Correction by LOESS Smoothing — correct_drift_loess","text":"Function correct run-order drifts within across batches using loess smoothing","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_drift_loess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drift Correction by LOESS Smoothing — correct_drift_loess","text":"","code":"correct_drift_loess(   data = NULL,   qc_types,   within_batch = TRUE,   span = 0.75,   apply_conditionally = FALSE,   apply_conditionally_per_batch = TRUE,   calc_log_transform = TRUE,   feature_list = NULL,   ignore_istd = TRUE,   max_cv_ratio_before_after = 1,   use_uncorrected_if_fail = TRUE,   extrapolate = FALSE )"},{"path":"https://slinghub.github.io/midar/reference/correct_drift_loess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drift Correction by LOESS Smoothing — correct_drift_loess","text":"data MidarExperiment object qc_types QC types used drift correction within_batch Apply batch separately TRUE (default) span Loess span width (default 0.75) apply_conditionally Apply drift correction species FALSE, sample CV smoothing changes threshold defined via max_cv_ratio_before_after apply_conditionally_per_batch apply_conditionally = TRUE, correction conditionally applied per batch TRUE across batches FALSE calc_log_transform Log transform data correction TRUE (default). Note: log transformation solely applied internally smoothing, results log-transformed. Log transformation may result robust smoothing less sensitive outlier. feature_list Subset features correction whose names matches specified text using regular expression. Default NULL means features selected. ignore_istd apply corrections ISTDs max_cv_ratio_before_after used apply_conditionally = TRUE. Maximum allowed ratio sample CV change smoothing correction applied. value 1 (default) indicates CV needs improve remain unchanged smoothing conditional smoothing applied. value < 1 means CV needs improve, value e.g. 1.20 CV need improve get worse max 1.20-fold smoothing. use_uncorrected_if_fail case smoothing function fails species, use original (uncorrected) data TRUE (default) return NA analyses feature fit failed. extrapolate Extrapolate loess smoothing. WARNING: generally recommended extrapolate outside range spanned QCs used smoothing. See details .","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_drift_loess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drift Correction by LOESS Smoothing — correct_drift_loess","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_drift_loess.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Drift Correction by LOESS Smoothing — correct_drift_loess","text":"Note using extrapolation loess smoothing generally recommended. Use must include samples QCs outside range spanned QCs used smoothing. Cases may necessary specific drifts occur analysis sequence segments spanned QC, e.g. instrument broke suddenly changed sensitivity. use samples  adjacent first last QC consult runscatter plots.","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_interference_manually.html","id":null,"dir":"Reference","previous_headings":"","what":"Manual correction for interference contributed by another feature — correct_interference_manually","title":"Manual correction for interference contributed by another feature — correct_interference_manually","text":"interference substracted using following formula: $$Value_{Corrected} = Value_{Feature} - Factor_{Contribution} * Value_{Interfering Feature}$$","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_interference_manually.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manual correction for interference contributed by another feature — correct_interference_manually","text":"","code":"correct_interference_manually(   data,   variable,   feature,   interfering_feature,   relative_contribution,   new_feature_id = NULL )"},{"path":"https://slinghub.github.io/midar/reference/correct_interference_manually.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manual correction for interference contributed by another feature — correct_interference_manually","text":"data MidarExperiment object variable Default: feature_intensity. Name Variable corrected. feature Name feature corrected interfering_feature Name feature interfering, .e. contributing signal feature relative_contribution Relative portion interfering feature contribute feature signal. Must 0 1. new_feature_id Optional. New name corrected feature. empty feature name change.","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_interference_manually.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manual correction for interference contributed by another feature — correct_interference_manually","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_interferences.html","id":null,"dir":"Reference","previous_headings":"","what":"Substract interferences contributed by another feature — correct_interferences","title":"Substract interferences contributed by another feature — correct_interferences","text":"interference (e.g. isotope overlap -source fragments) subtracted using following formula: $$Value_corrected = Value_Feature - relative_contribution * Value_InterferingFeature$$","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_interferences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Substract interferences contributed by another feature — correct_interferences","text":"","code":"correct_interferences(data = NULL, variable = \"feature_intensity\")"},{"path":"https://slinghub.github.io/midar/reference/correct_interferences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Substract interferences contributed by another feature — correct_interferences","text":"data MidarExperiment object variable Name Variable corrected. Default: feature_intensity.","code":""},{"path":"https://slinghub.github.io/midar/reference/correct_interferences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Substract interferences contributed by another feature — correct_interferences","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/cv_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Coefficient of variation (CV) using log-transformed data — cv_log","title":"Coefficient of variation (CV) using log-transformed data — cv_log","text":"Computes coefficient variation (CV) log-transformation provided data","code":""},{"path":"https://slinghub.github.io/midar/reference/cv_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coefficient of variation (CV) using log-transformed data — cv_log","text":"","code":"cv_log(x, na.rm)"},{"path":"https://slinghub.github.io/midar/reference/cv_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coefficient of variation (CV) using log-transformed data — cv_log","text":"x numeric vector values log-transformed na.rm logical, TRUE NA values stripped x computation takes place","code":""},{"path":"https://slinghub.github.io/midar/reference/cv_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coefficient of variation (CV) using log-transformed data — cv_log","text":"numeric vector length one. x contains zero, NaN returned. x numeric integer, NA_real_ returned","code":""},{"path":"https://slinghub.github.io/midar/reference/cv_log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coefficient of variation (CV) using log-transformed data — cv_log","text":"","code":"library(midar) cv_log(c(5, 6, 3, 4, 5, NA), na.rm = TRUE) #> [1] 27.082"},{"path":"https://slinghub.github.io/midar/reference/cvlog.html","id":null,"dir":"Reference","previous_headings":"","what":"Coefficient of variation (CV) using log-transformed data — cvlog","title":"Coefficient of variation (CV) using log-transformed data — cvlog","text":"Computes coefficient variation (CV) log-transformation provided data","code":""},{"path":"https://slinghub.github.io/midar/reference/cvlog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coefficient of variation (CV) using log-transformed data — cvlog","text":"","code":"cv_log(x, na.rm)"},{"path":"https://slinghub.github.io/midar/reference/cvlog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coefficient of variation (CV) using log-transformed data — cvlog","text":"x numeric vector values log-transformed na.rm logical, TRUE NA values stripped x computation takes place","code":""},{"path":"https://slinghub.github.io/midar/reference/cvlog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coefficient of variation (CV) using log-transformed data — cvlog","text":"numeric vector length one. x contains zero, NaN returned. x numeric integer, NA_real_ returned","code":""},{"path":"https://slinghub.github.io/midar/reference/cvlog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coefficient of variation (CV) using log-transformed data — cvlog","text":"","code":"library(midar) cv_log(c(5,6,3,4,5, NA), na.rm = TRUE) #> [1] 27.082"},{"path":"https://slinghub.github.io/midar/reference/data_exclude_analyses.html","id":null,"dir":"Reference","previous_headings":"","what":"@title Exclude analyses from the dataset — data_exclude_analyses","title":"@title Exclude analyses from the dataset — data_exclude_analyses","text":"@title Exclude analyses dataset","code":""},{"path":"https://slinghub.github.io/midar/reference/data_exclude_analyses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"@title Exclude analyses from the dataset — data_exclude_analyses","text":"","code":"data_exclude_analyses(data = NULL, analyses_exlude, overwrite)"},{"path":"https://slinghub.github.io/midar/reference/data_exclude_analyses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"@title Exclude analyses from the dataset — data_exclude_analyses","text":"data MidarExperiment object analyses_exlude Vector analysis IDs (case-sensitive) exclude dataset. overwrite TRUE existing valid_analysis flags overwritten, otherwise appended","code":""},{"path":"https://slinghub.github.io/midar/reference/data_exclude_analyses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"@title Exclude analyses from the dataset — data_exclude_analyses","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/data_exclude_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Exclude features from the dataset — data_exclude_features","title":"Exclude features from the dataset — data_exclude_features","text":"Exclude features dataset","code":""},{"path":"https://slinghub.github.io/midar/reference/data_exclude_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exclude features from the dataset — data_exclude_features","text":"","code":"data_exclude_features(data = NULL, features_exlude, overwrite)"},{"path":"https://slinghub.github.io/midar/reference/data_exclude_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exclude features from the dataset — data_exclude_features","text":"data MidarExperiment object features_exlude Vector feature IDs (case-sensitive) exclude dataset overwrite TRUE existing valid_feature flags overwritten, otherwise appended","code":""},{"path":"https://slinghub.github.io/midar/reference/data_exclude_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exclude features from the dataset — data_exclude_features","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/data_get_analyticaldata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the annotated or the originally imported analytical data — data_get_analyticaldata","title":"Get the annotated or the originally imported analytical data — data_get_analyticaldata","text":"Get annotated originally imported analytical data","code":""},{"path":"https://slinghub.github.io/midar/reference/data_get_analyticaldata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the annotated or the originally imported analytical data — data_get_analyticaldata","text":"","code":"data_get_analyticaldata(data = NULL, original = FALSE)"},{"path":"https://slinghub.github.io/midar/reference/data_get_analyticaldata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the annotated or the originally imported analytical data — data_get_analyticaldata","text":"data MidarExperiment object original Boolean indicating whether return original imported data (TRUE) annotated data (FALSE) overwrite TRUE existing valid_feature flags overwritten, otherwise appended","code":""},{"path":"https://slinghub.github.io/midar/reference/data_get_analyticaldata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the annotated or the originally imported analytical data — data_get_analyticaldata","text":"tibble analytical data long format","code":""},{"path":"https://slinghub.github.io/midar/reference/data_import_agilent.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports an Agilent MassHunter Quant CSV file — data_import_masshunter","title":"Imports an Agilent MassHunter Quant CSV file — data_import_masshunter","text":"Imports .csv file(s) exported Agilent MassHunter (MH) Quantitative Analysis containing peak integration results. Samples must rows, features/compounds columns must contain either peak areas, peak heights intensities. Additional columns, RT (retention time), FWHM, PrecursorMZ, CE imported available MidarExperiment object downstream analyses. path folder provided, .csv files folder imported merged one raw dataset. useful, e.g. importing datasets pre-processed blocks resulting different files. feature raw data file pair must occur within across .csv source data files, duplicated return error.","code":""},{"path":"https://slinghub.github.io/midar/reference/data_import_agilent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports an Agilent MassHunter Quant CSV file — data_import_masshunter","text":"","code":"data_import_masshunter(   data,   path,   use_metadata,   file_format = \"csv\",   expand_qualifier_names = TRUE,   silent = FALSE )"},{"path":"https://slinghub.github.io/midar/reference/data_import_agilent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports an Agilent MassHunter Quant CSV file — data_import_masshunter","text":"data MidarExperiment object path One file names path, folder path, case *.csv files folder read. use_metadata Extract add metadata analysis result file file_format File format MassHunter export. One \"csv\", \"xls\" expand_qualifier_names Add quantifier name front qualifier name, latter mz transitions values silent Suppress notifications","code":""},{"path":"https://slinghub.github.io/midar/reference/data_import_agilent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports an Agilent MassHunter Quant CSV file — data_import_masshunter","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/data_import_agilent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports an Agilent MassHunter Quant CSV file — data_import_masshunter","text":"","code":"file_path <- system.file(\"extdata\", \"Example_MHQuant_1.csv\", package = \"midar\") mexp <- MidarExperiment() mexp <- data_import_masshunter(data = mexp, path = file_path, use_metadata = TRUE) #> ✔ Imported 215 analyses with 428 features #> ℹ `feature_area` selected as default feature intensity. Modify with `data_set_intensity_var()`. #> ✔ Analysis metadata associated with 215 analyses. #> ✔ Feature metadata associated with 428 features. mexp #>  #> ── MidarExperiment ───────────────────────────────────────────────────────────── #> Title: #>  #> Processing status: Annotated raw AREA values #>  #> ── Annotated Raw Data ── #>  #> • Samples: 215 #> • Features: 428 #> • Intensity Variable: feature_area #>  #> ── Metadata ── #>  #> • Sample annotation: ✔ #> • Feature annotation: ✔ #> • Internal standard annotation: ✖ #> • Response curve annotation: ✖ #> • Study samples annotation: ✖ #>  #> ── Processing Status ── #>  #> • Isotope corrected: ✖ #> • ISTD normalized: ✖ #> • ISTD quantitated: ✖ #> • Drift corrected: ✖ #> • Batch corrected: ✖ #> • Feature QC-filtered: ✖ #>  #> ── Exclusion of Analyses and Features ── #>  #> • One or more analyses manually excluded: ✖"},{"path":"https://slinghub.github.io/midar/reference/data_import_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Import plain analysis results — data_import_csv","title":"Import plain analysis results — data_import_csv","text":"Imports .csv file(s) reprensenting analysis results wide format samples rows features columns. first column must contain analysis identifier, subsequent columns can metadata columns, followed value different features. table format must long format columns raw data file name, feature ID, peak intensity parameters. Additional information, retention time, FWHM, precursor/product MZ, CE also imported available MidarExperiment object downstream analyses. path folder provided, .scv files folder imported merged one raw dataset. useful, e.g. importing datasets pre-processed blocks resulting different files. feature raw data file pair must occur within across .csv source data files, duplicated return error.","code":""},{"path":"https://slinghub.github.io/midar/reference/data_import_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import plain analysis results — data_import_csv","text":"","code":"data_import_csv(   data = NULL,   path,   variable_name,   analysis_id_col = NA,   use_metadata )"},{"path":"https://slinghub.github.io/midar/reference/data_import_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import plain analysis results — data_import_csv","text":"data MidarExperiment object path One file names path, folder path, case *.csv files folder read. variable_name Variable type representing values table. Must one \"intensity\", \"norm_intensity\", \"conc\", \"area\", \"height\", \"response\") analysis_id_col Column used analysis_id. NA (default) used 'analysis_id' present, first column contains unique values. use_metadata Import additional metadata columns (e.g. batch ID, sample type) add MidarExperiment object. following metadata column names supported: \"qc_type\", \"batch_id\", \"is_quantifier\", \"is_istd\", \"run_seq_num\", \"precursor_mz\", \"product_mz\", \"collision_energy\"","code":""},{"path":"https://slinghub.github.io/midar/reference/data_import_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import plain analysis results — data_import_csv","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/data_import_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import plain analysis results — data_import_csv","text":"","code":"file_path <- system.file(\"extdata\", \"plain_wide_dataset.csv\", package = \"midar\") mexp <- MidarExperiment() mexp <- data_import_csv(data = mexp, path = file_path, variable_name = \"conc\", use_metadata = TRUE) #> ✔ Imported 87 analyses with 1 features #> ℹ `feature_conc` selected as default feature intensity. Modify with `data_set_intensity_var()`. #> ✔ Analysis metadata associated with 87 analyses. #> ✔ Feature metadata associated with 1 features. mexp #>  #> ── MidarExperiment ───────────────────────────────────────────────────────────── #> Title: #>  #> Processing status: Annotated raw CONC values #>  #> ── Annotated Raw Data ── #>  #> • Samples: #> • Features: 1 #> • Intensity Variable: feature_conc #>  #> ── Metadata ── #>  #> • Sample annotation: ✔ #> • Feature annotation: ✔ #> • Internal standard annotation: ✖ #> • Response curve annotation: ✖ #> • Study samples annotation: ✖ #>  #> ── Processing Status ── #>  #> • Isotope corrected: ✖ #> • ISTD normalized: ✖ #> • ISTD quantitated: ✔ #> • Drift corrected: ✖ #> • Batch corrected: ✖ #> • Feature QC-filtered: ✖ #>  #> ── Exclusion of Analyses and Features ── #>  #> • One or more analyses manually excluded: ✖"},{"path":"https://slinghub.github.io/midar/reference/data_import_masshunter.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports an Agilent MassHunter Quant CSV file — data_import_masshunter","title":"Imports an Agilent MassHunter Quant CSV file — data_import_masshunter","text":"Imports .csv file(s) exported Agilent MassHunter (MH) Quantitative Analysis containing peak integration results. Samples must rows, features/compounds columns must contain either peak areas, peak heights intensities. Additional columns, RT (retention time), FWHM, PrecursorMZ, CE imported available MidarExperiment object downstream analyses. path folder provided, .csv files folder imported merged one raw dataset. useful, e.g. importing datasets pre-processed blocks resulting different files. feature raw data file pair must occur within across .csv source data files, duplicated return error.","code":""},{"path":"https://slinghub.github.io/midar/reference/data_import_masshunter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports an Agilent MassHunter Quant CSV file — data_import_masshunter","text":"","code":"data_import_masshunter(   data = NULL,   path,   use_metadata,   file_format = \"csv\",   expand_qualifier_names = TRUE,   silent = FALSE )"},{"path":"https://slinghub.github.io/midar/reference/data_import_masshunter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports an Agilent MassHunter Quant CSV file — data_import_masshunter","text":"data MidarExperiment object path One file names path, folder path, case *.csv files folder read. use_metadata Extract add metadata analysis result file file_format File format MassHunter export. One \"csv\", \"xls\" expand_qualifier_names Add quantifier name front qualifier name, latter mz transitions values silent Suppress notifications","code":""},{"path":"https://slinghub.github.io/midar/reference/data_import_masshunter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports an Agilent MassHunter Quant CSV file — data_import_masshunter","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/data_import_masshunter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports an Agilent MassHunter Quant CSV file — data_import_masshunter","text":"","code":"file_path <- system.file(\"extdata\", \"Example_MHQuant_1.csv\", package = \"midar\") mexp <- MidarExperiment() mexp <- data_import_masshunter(data = mexp, path = file_path, use_metadata = TRUE) #> ✔ Imported 215 analyses with 428 features #> ℹ `feature_area` selected as default feature intensity. Modify with `data_set_intensity_var()`. #> ✔ Analysis metadata associated with 215 analyses. #> ✔ Feature metadata associated with 428 features. mexp #>  #> ── MidarExperiment ───────────────────────────────────────────────────────────── #> Title: #>  #> Processing status: Annotated raw AREA values #>  #> ── Annotated Raw Data ── #>  #> • Samples: #> • Features: 428 #> • Intensity Variable: feature_area #>  #> ── Metadata ── #>  #> • Sample annotation: ✔ #> • Feature annotation: ✔ #> • Internal standard annotation: ✖ #> • Response curve annotation: ✖ #> • Study samples annotation: ✖ #>  #> ── Processing Status ── #>  #> • Isotope corrected: ✖ #> • ISTD normalized: ✖ #> • ISTD quantitated: ✖ #> • Drift corrected: ✖ #> • Batch corrected: ✖ #> • Feature QC-filtered: ✖ #>  #> ── Exclusion of Analyses and Features ── #>  #> • One or more analyses manually excluded: ✖"},{"path":"https://slinghub.github.io/midar/reference/data_import_mrmkit.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports MRMkit peak integration results — data_import_mrmkit","title":"Imports MRMkit peak integration results — data_import_mrmkit","text":"Imports .tsv file(s) generated MRMkit containing peak integration results. table format must long format columns raw data file name, feature ID, peak intensity parameters. Additional information, retention time, FWHM, precursor/product MZ, CE also imported available MidarExperiment object downstream analyses. path folder provided, .tsv files folder imported merged one raw dataset. useful, e.g. importing datasets pre-processed blocks resulting different files. feature raw data file pair must occur within across .csv source data files, duplicated return error.","code":""},{"path":"https://slinghub.github.io/midar/reference/data_import_mrmkit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports MRMkit peak integration results — data_import_mrmkit","text":"","code":"data_import_mrmkit(data = NULL, path, use_metadata, silent = FALSE)"},{"path":"https://slinghub.github.io/midar/reference/data_import_mrmkit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports MRMkit peak integration results — data_import_mrmkit","text":"data MidarExperiment object path One file names path, folder path, case *.csv files folder read. use_metadata Import additional metadata columns (e.g. batch ID, sample type) add MidarExperiment object silent Suppress notifications","code":""},{"path":"https://slinghub.github.io/midar/reference/data_import_mrmkit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports MRMkit peak integration results — data_import_mrmkit","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/data_import_mrmkit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports MRMkit peak integration results — data_import_mrmkit","text":"","code":"file_path <- system.file(\"extdata\", \"sPerfect_MRMkit.tsv\", package = \"midar\") mexp <- MidarExperiment() mexp <- data_import_mrmkit(data = mexp, path = file_path, use_metadata = TRUE) #> ✔ Imported 499 analyses with 503 features #> ℹ `feature_area` selected as default feature intensity. Modify with `data_set_intensity_var()`. #> ✔ Analysis metadata associated with 499 analyses. #> ✔ Feature metadata associated with 503 features. mexp #>  #> ── MidarExperiment ───────────────────────────────────────────────────────────── #> Title: #>  #> Processing status: Annotated raw AREA values #>  #> ── Annotated Raw Data ── #>  #> • Samples: #> • Features: 503 #> • Intensity Variable: feature_area #>  #> ── Metadata ── #>  #> • Sample annotation: ✔ #> • Feature annotation: ✔ #> • Internal standard annotation: ✖ #> • Response curve annotation: ✖ #> • Study samples annotation: ✖ #>  #> ── Processing Status ── #>  #> • Isotope corrected: ✖ #> • ISTD normalized: ✖ #> • ISTD quantitated: ✖ #> • Drift corrected: ✖ #> • Batch corrected: ✖ #> • Feature QC-filtered: ✖ #>  #> ── Exclusion of Analyses and Features ── #>  #> • One or more analyses manually excluded: ✖"},{"path":"https://slinghub.github.io/midar/reference/data_load_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Load an example MidarExperiment dataset — data_load_example","title":"Load an example MidarExperiment dataset — data_load_example","text":"Load example MidarExperiment dataset. Dataset 1 small dataset (Burla et al, 2024, see ) Dataset 2 larger dataset (Tan et al, 2022).See Details .","code":""},{"path":"https://slinghub.github.io/midar/reference/data_load_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load an example MidarExperiment dataset — data_load_example","text":"","code":"data_load_example(data = NULL, dataset = 1)"},{"path":"https://slinghub.github.io/midar/reference/data_load_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load an example MidarExperiment dataset — data_load_example","text":"data MidarExperiment object, optional. Data overwritten provided. dataset Dataset type. Either 1 2. Default 1.","code":""},{"path":"https://slinghub.github.io/midar/reference/data_load_example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load an example MidarExperiment dataset — data_load_example","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/data_load_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load an example MidarExperiment dataset — data_load_example","text":"","code":"myexp <- MidarExperiment() myexp <- data_load_example(myexp) myexp #>  #> ── MidarExperiment ───────────────────────────────────────────────────────────── #> Title: sPerfect #>  #> Processing status: Annotated raw AREA values #>  #> ── Annotated Raw Data ── #>  #> • Samples: #> • Features: 503 #> • Intensity Variable: feature_area #>  #> ── Metadata ── #>  #> • Sample annotation: ✔ #> • Feature annotation: ✔ #> • Internal standard annotation: ✖ #> • Response curve annotation: ✖ #> • Study samples annotation: ✖ #>  #> ── Processing Status ── #>  #> • Isotope corrected: ✖ #> • ISTD normalized: ✖ #> • ISTD quantitated: ✖ #> • Drift corrected: ✖ #> • Batch corrected: ✖ #> • Feature QC-filtered: ✖ #>  #> ── Exclusion of Analyses and Features ── #>  #> • One or more analyses manually excluded: ✖"},{"path":"https://slinghub.github.io/midar/reference/data_set_intensity_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Set default variable to be used as feature raw signal value — data_set_intensity_var","title":"Set default variable to be used as feature raw signal value — data_set_intensity_var","text":"Sets raw signal variable used calculations starting raw signal values (.e., normalization)","code":""},{"path":"https://slinghub.github.io/midar/reference/data_set_intensity_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set default variable to be used as feature raw signal value — data_set_intensity_var","text":"","code":"data_set_intensity_var(   data = NULL,   variable_name,   auto_select = FALSE,   warnings = TRUE,   ... )"},{"path":"https://slinghub.github.io/midar/reference/data_set_intensity_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set default variable to be used as feature raw signal value — data_set_intensity_var","text":"data MidarExperiment object variable_name Feature variable used default feature intensity downstream processing. auto_select TRUE first available used default: \"feature_intensity\", \"feature_response\", \"feature_area\", \"feature_height\". warnings Suppress warnings ... Feature variables best search one--one auto-detect = TRUE","code":""},{"path":"https://slinghub.github.io/midar/reference/data_set_intensity_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set default variable to be used as feature raw signal value — data_set_intensity_var","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/dataset_plasma_lipidomics.html","id":null,"dir":"Reference","previous_headings":"","what":"Plasma Lipidomics Peak Areas Dataset — dataset_plasma_lipidomics","title":"Plasma Lipidomics Peak Areas Dataset — dataset_plasma_lipidomics","text":"reporocessed dataset containing raw peak areas analytical metadata 499 analyses 503 features plasma lipidomics analysis published Tan et al, ATVB, 2022. dataset used demonstrate","code":""},{"path":"https://slinghub.github.io/midar/reference/dataset_plasma_lipidomics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plasma Lipidomics Peak Areas Dataset — dataset_plasma_lipidomics","text":"","code":"dataset_plasma_lipidomics"},{"path":"https://slinghub.github.io/midar/reference/dataset_plasma_lipidomics.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Plasma Lipidomics Peak Areas Dataset — dataset_plasma_lipidomics","text":"MidarExperiment object: dataset_orig tibble original peak data. dataset tibble annotated data. annot_analyses tibble analyses annotations. annot_features tibble features annotations. annot_batches tibble batch annotations.","code":""},{"path":"https://slinghub.github.io/midar/reference/drift_corr_loess.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs drift correction based on LOESS smoothing — drift_corr_loess","title":"Performs drift correction based on LOESS smoothing — drift_corr_loess","text":"Performs drift correction based LOESS smoothing","code":""},{"path":"https://slinghub.github.io/midar/reference/drift_corr_loess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs drift correction based on LOESS smoothing — drift_corr_loess","text":"","code":"drift_corr_loess(   data,   qc_types,   smooth_by_batch = TRUE,   log2_transform = TRUE,   loess_span = 0.75,   limit_to_species = NULL,   apply_only_if_smpl_cv_lower = FALSE,   treshold_smpl_cv_delta = 0 )"},{"path":"https://slinghub.github.io/midar/reference/drift_corr_loess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs drift correction based on LOESS smoothing — drift_corr_loess","text":"data MidarExperiment object qc_types QC types used drift correction smooth_by_batch Correct batch separately (Default TRUE) log2_transform log2 transform data correction (Default TRUE) loess_span Loess span width (default 0.75) limit_to_species Apply correction species matching (RegEx) apply_only_if_smpl_cv_lower Apply correction sample CV decreases (default FALSE) treshold_smpl_cv_delta Maximum sample CV change correction applied","code":""},{"path":"https://slinghub.github.io/midar/reference/drift_corr_loess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs drift correction based on LOESS smoothing — drift_corr_loess","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/exportWideCSV.html","id":null,"dir":"Reference","previous_headings":"","what":"Export any parameter to a wide-format table — exportWideCSV","title":"Export any parameter to a wide-format table — exportWideCSV","text":"Export parameter wide-format table","code":""},{"path":"https://slinghub.github.io/midar/reference/exportWideCSV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export any parameter to a wide-format table — exportWideCSV","text":"","code":"exportWideCSV(data, variable, filename)"},{"path":"https://slinghub.github.io/midar/reference/exportWideCSV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export any parameter to a wide-format table — exportWideCSV","text":"data MidarExperiment object variable Variable exported filename File name path exported CSV file","code":""},{"path":"https://slinghub.github.io/midar/reference/fun_gauss.kernel.smooth.html","id":null,"dir":"Reference","previous_headings":"","what":"Gaussian Kernel smoothing helper function — fun_gauss.kernel.smooth","title":"Gaussian Kernel smoothing helper function — fun_gauss.kernel.smooth","text":"Function Gaussian kernel-based smoothing, use corr_drift_fun.","code":""},{"path":"https://slinghub.github.io/midar/reference/fun_gauss.kernel.smooth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gaussian Kernel smoothing helper function — fun_gauss.kernel.smooth","text":"","code":"fun_gauss.kernel.smooth(tbl, qc_types, ...)"},{"path":"https://slinghub.github.io/midar/reference/fun_gauss.kernel.smooth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gaussian Kernel smoothing helper function — fun_gauss.kernel.smooth","text":"tbl Table (tibble data.frame) containing fields qc_type, x (run order number), y (variable) qc_types QC types used smoothing (fit) loess ... Additional parameters","code":""},{"path":"https://slinghub.github.io/midar/reference/fun_gauss.kernel.smooth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gaussian Kernel smoothing helper function — fun_gauss.kernel.smooth","text":"List data.frame containing original x smoothed y values, boolean value indicting whether fit failed .","code":""},{"path":"https://slinghub.github.io/midar/reference/fun_gauss.kernel.smooth.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Gaussian Kernel smoothing helper function — fun_gauss.kernel.smooth","text":"Hyung Won Choi","code":""},{"path":"https://slinghub.github.io/midar/reference/fun_gaussiankernel_old.html","id":null,"dir":"Reference","previous_headings":"","what":"Gaussian Kernel smoothing helper function — fun_gaussiankernel_old","title":"Gaussian Kernel smoothing helper function — fun_gaussiankernel_old","text":"Function Gaussian kernel-based smoothing, use corr_drift_fun","code":""},{"path":"https://slinghub.github.io/midar/reference/fun_gaussiankernel_old.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gaussian Kernel smoothing helper function — fun_gaussiankernel_old","text":"","code":"fun_gaussiankernel_old(tbl, qc_types, ...)"},{"path":"https://slinghub.github.io/midar/reference/fun_gaussiankernel_old.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gaussian Kernel smoothing helper function — fun_gaussiankernel_old","text":"tbl Table (tibble data.frame) containing fields qc_type, x (run order number), y (variable) qc_types QC types used smoothing (fit) loess ... Additional parameters forwarded KernSmooth::locpoly","code":""},{"path":"https://slinghub.github.io/midar/reference/fun_gaussiankernel_old.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gaussian Kernel smoothing helper function — fun_gaussiankernel_old","text":"List data.frame containing original x smoothed y values, boolean value indicting whether fit failed .","code":""},{"path":"https://slinghub.github.io/midar/reference/fun_loess.html","id":null,"dir":"Reference","previous_headings":"","what":"Loess smoothing helper function — fun_loess","title":"Loess smoothing helper function — fun_loess","text":"Function loess-based smoothing, use corr_drift_fun","code":""},{"path":"https://slinghub.github.io/midar/reference/fun_loess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loess smoothing helper function — fun_loess","text":"","code":"fun_loess(tbl, qc_types, ...)"},{"path":"https://slinghub.github.io/midar/reference/fun_loess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loess smoothing helper function — fun_loess","text":"tbl Table (tibble data.frame) containing fields qc_type, x (run order number), y (variable) qc_types QC types used smoothing (fit) loess ... Additional parameters forwarded Loess","code":""},{"path":"https://slinghub.github.io/midar/reference/fun_loess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loess smoothing helper function — fun_loess","text":"List data.frame containing original x smoothed y values, boolean value indicting whether fit failed .","code":""},{"path":"https://slinghub.github.io/midar/reference/getDatasetFilteredQC.html","id":null,"dir":"Reference","previous_headings":"","what":"getDatasetFilteredQC — getDatasetFilteredQC","title":"getDatasetFilteredQC — getDatasetFilteredQC","text":"qc_apply_feature_filter","code":""},{"path":"https://slinghub.github.io/midar/reference/getDatasetFilteredQC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getDatasetFilteredQC — getDatasetFilteredQC","text":"","code":"qc_apply_feature_filter(   data,   min_intensity_bqc = NA,   min_cv_conc_bqc = NA,   min_intensity_tqc = NA,   min_cv_conc_tqc = NA,   min_signal_blank_ratio = NA,   min_response_rsquare = NA,   rqc_curve_used_for_filt = NA )"},{"path":"https://slinghub.github.io/midar/reference/getDatasetFilteredQC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getDatasetFilteredQC — getDatasetFilteredQC","text":"data MidarExperiment object min_intensity_bqc min_intensity_bqc min_cv_conc_bqc = min_cv_conc_bqc min_intensity_tqc = min_intensity_tqc min_cv_conc_tqc = min_cv_conc_tqc min_signal_blank_ratio = min_signal_blank_ratio min_response_rsquare = min_response_rsquare rqc_curve_used_for_filt = rqc_curve_used_for_filt","code":""},{"path":"https://slinghub.github.io/midar/reference/get_batch_boundaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the start and end analysis numbers of specified batches — get_batch_boundaries","title":"Get the start and end analysis numbers of specified batches — get_batch_boundaries","text":"Sets analysis order (sequence) based either () analysis timestamp, available, (ii) order analysis appeared imported raw data file, (iii) order analyses defined Analysis metadata.","code":""},{"path":"https://slinghub.github.io/midar/reference/get_batch_boundaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the start and end analysis numbers of specified batches — get_batch_boundaries","text":"","code":"get_batch_boundaries(data = NULL, batch_ids = NULL)"},{"path":"https://slinghub.github.io/midar/reference/get_batch_boundaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the start and end analysis numbers of specified batches — get_batch_boundaries","text":"data MidarExperiment object batch_ids vector one two elements: first /last batch ID. NULL invalid, function abort.","code":""},{"path":"https://slinghub.github.io/midar/reference/get_batch_boundaries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the start and end analysis numbers of specified batches — get_batch_boundaries","text":"vector two elements: lower upper analysis number specified batch(es).","code":""},{"path":"https://slinghub.github.io/midar/reference/get_response_curve_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear regression statistics of response curves — get_response_curve_stats","title":"Linear regression statistics of response curves — get_response_curve_stats","text":"Linear regression statistics response curves","code":""},{"path":"https://slinghub.github.io/midar/reference/get_response_curve_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear regression statistics of response curves — get_response_curve_stats","text":"","code":"get_response_curve_stats(   data = NULL,   with_staturation_stats = FALSE,   limit_to_rqc = FALSE )"},{"path":"https://slinghub.github.io/midar/reference/get_response_curve_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear regression statistics of response curves — get_response_curve_stats","text":"data MidarExperiment object with_staturation_stats Include statistics classification lancer package. limit_to_rqc TRUE (default) includes RQC qc type","code":""},{"path":"https://slinghub.github.io/midar/reference/get_response_curve_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear regression statistics of response curves — get_response_curve_stats","text":"Tibble linear regression stats curves wide format","code":""},{"path":"https://slinghub.github.io/midar/reference/get_response_curve_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linear regression statistics of response curves — get_response_curve_stats","text":"using with_staturation_stats lancer package needs installed","code":""},{"path":"https://slinghub.github.io/midar/reference/get_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Get FC and p values from a t test contrast — get_stats","title":"Get FC and p values from a t test contrast — get_stats","text":"Get FC p values t test contrast","code":""},{"path":"https://slinghub.github.io/midar/reference/get_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get FC and p values from a t test contrast — get_stats","text":"","code":"get_stats(   data,   feature,   grouping,   group_case,   group_ref,   paired,   min_groupsize = 3,   log_transform = FALSE )"},{"path":"https://slinghub.github.io/midar/reference/get_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get FC and p values from a t test contrast — get_stats","text":"data data.frame tibble feature feature grouping grouping group_case case group group_ref reference group paired paired data min_groupsize min group size t test log_transform log transform t test","code":""},{"path":"https://slinghub.github.io/midar/reference/get_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get FC and p values from a t test contrast — get_stats","text":"tibble p values, fdr log2FC","code":""},{"path":"https://slinghub.github.io/midar/reference/import_MSOrganizerXLM.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports metadata provided by an MSOrganizer EXCEL template — import_MSOrganizerXLM","title":"Imports metadata provided by an MSOrganizer EXCEL template — import_MSOrganizerXLM","text":"Imports metadata provided MSOrganizer EXCEL template","code":""},{"path":"https://slinghub.github.io/midar/reference/import_MSOrganizerXLM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports metadata provided by an MSOrganizer EXCEL template — import_MSOrganizerXLM","text":"","code":"import_MSOrganizerXLM(filename, trim_ws = TRUE)"},{"path":"https://slinghub.github.io/midar/reference/import_MSOrganizerXLM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports metadata provided by an MSOrganizer EXCEL template — import_MSOrganizerXLM","text":"filename File path MSOrganizer EXCEL template (*.xlm) trim_ws Trim white spaces double spaces","code":""},{"path":"https://slinghub.github.io/midar/reference/import_MSOrganizerXLM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports metadata provided by an MSOrganizer EXCEL template — import_MSOrganizerXLM","text":"list tibbles different metadata","code":""},{"path":"https://slinghub.github.io/midar/reference/import_masshunter_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and convert an Agilent MassHunter Quant CSV result file — import_masshunter_csv","title":"Read and convert an Agilent MassHunter Quant CSV result file — import_masshunter_csv","text":"Read convert Agilent MassHunter Quant CSV result file","code":""},{"path":"https://slinghub.github.io/midar/reference/import_masshunter_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and convert an Agilent MassHunter Quant CSV result file — import_masshunter_csv","text":"","code":"data_import_masshunter_csv(filename, silent = FALSE)"},{"path":"https://slinghub.github.io/midar/reference/import_masshunter_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and convert an Agilent MassHunter Quant CSV result file — import_masshunter_csv","text":"filename File path MassHunter Quant CSV file silent Suppress messages","code":""},{"path":"https://slinghub.github.io/midar/reference/import_masshunter_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and convert an Agilent MassHunter Quant CSV result file — import_masshunter_csv","text":"tibble long format","code":""},{"path":"https://slinghub.github.io/midar/reference/import_masshunter_csv_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads a wide CSV file with Feature Intensities — import_masshunter_csv_wide","title":"Reads a wide CSV file with Feature Intensities — import_masshunter_csv_wide","text":"Reads wide CSV file Feature Intensities","code":""},{"path":"https://slinghub.github.io/midar/reference/import_masshunter_csv_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads a wide CSV file with Feature Intensities — import_masshunter_csv_wide","text":"","code":"data_import_masshunter_csv_wide(file, field, silent = FALSE)"},{"path":"https://slinghub.github.io/midar/reference/import_masshunter_csv_wide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads a wide CSV file with Feature Intensities — import_masshunter_csv_wide","text":"file File name path MassHunter Quant CSV file field Peak parameter (e.g. Area, RT) silent Suppress messages","code":""},{"path":"https://slinghub.github.io/midar/reference/import_masshunter_csv_wide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads a wide CSV file with Feature Intensities — import_masshunter_csv_wide","text":"tibble long format","code":""},{"path":"https://slinghub.github.io/midar/reference/import_msorganizer_xlm.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports metadata provided by an MSOrganizer EXCEL template — import_msorganizer_xlm","title":"Imports metadata provided by an MSOrganizer EXCEL template — import_msorganizer_xlm","text":"Imports metadata provided MSOrganizer EXCEL template","code":""},{"path":"https://slinghub.github.io/midar/reference/import_msorganizer_xlm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports metadata provided by an MSOrganizer EXCEL template — import_msorganizer_xlm","text":"","code":"import_msorganizer_xlm(filename, trim_ws = TRUE)"},{"path":"https://slinghub.github.io/midar/reference/import_msorganizer_xlm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports metadata provided by an MSOrganizer EXCEL template — import_msorganizer_xlm","text":"filename File path MSOrganizer EXCEL template (*.xlm) trim_ws Trim white spaces double spaces","code":""},{"path":"https://slinghub.github.io/midar/reference/import_msorganizer_xlm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports metadata provided by an MSOrganizer EXCEL template — import_msorganizer_xlm","text":"list tibbles different metadata","code":""},{"path":"https://slinghub.github.io/midar/reference/lipidomics_get_lipid_class_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve lipid name, lipid class and transition from feature names — lipidomics_get_lipid_class_names","title":"Retrieve lipid name, lipid class and transition from feature names — lipidomics_get_lipid_class_names","text":"Retrieve lipid name, lipid class transition feature names","code":""},{"path":"https://slinghub.github.io/midar/reference/lipidomics_get_lipid_class_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve lipid name, lipid class and transition from feature names — lipidomics_get_lipid_class_names","text":"","code":"lipidomics_get_lipid_class_names(   data = NULL,   use_as_feature_class = \"lipid_class\",   add_transition_names = FALSE )"},{"path":"https://slinghub.github.io/midar/reference/lipidomics_get_lipid_class_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve lipid name, lipid class and transition from feature names — lipidomics_get_lipid_class_names","text":"data MidarExperiment object use_as_feature_class Set feature_class lipid_class add_transition_names add transition name transition group, based information square brackets feature_id","code":""},{"path":"https://slinghub.github.io/midar/reference/lipidomics_get_lipid_class_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve lipid name, lipid class and transition from feature names — lipidomics_get_lipid_class_names","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/loadMSOrganizerXLM.html","id":null,"dir":"Reference","previous_headings":"","what":"#' load_MRMkit_csv\n#'\n#' @param data MidarExperiment object\n#' @param filename file name of the MH CSV file\n#'\n#' @importFrom methods validObject\n#'\n#' @return MidarExperiment object\n#' @export\n#'\n#'\nload_MRMkit_csv <- function(data, filename) \ndata@dataset_orig <- read_MRMkitCSV(filename, silent = FALSE)\ndata@dataset <- data@dataset_orig  %>%\ndplyr::left_join(data@annot_analyses, by = c(","title":"#' load_MRMkit_csv\n#'\n#' @param data MidarExperiment object\n#' @param filename file name of the MH CSV file\n#'\n#' @importFrom methods validObject\n#'\n#' @return MidarExperiment object\n#' @export\n#'\n#'\nload_MRMkit_csv <- function(data, filename) \ndata@dataset_orig <- read_MRMkitCSV(filename, silent = FALSE)\ndata@dataset <- data@dataset_orig  %>%\ndplyr::left_join(data@annot_analyses, by = c(","text":"#' load_MRMkit_csv #' #' @param data MidarExperiment object #' @param filename file name MH CSV file #' #' @importFrom methods validObject #' #' @return MidarExperiment object #' @export #' #' load_MRMkit_csv <- function(data, filename)  data@dataset_orig <- read_MRMkitCSV(filename, silent = FALSE) data@dataset <- data@dataset_orig  %>% dplyr::left_join(data@annot_analyses, = c(\"ANALYSIS_ID\"=\"ANALYSIS_ID\")) stopifnot(methods::validObject(data)) data  Import metadata MSOrganizer template (.XLM)","code":""},{"path":"https://slinghub.github.io/midar/reference/loadMSOrganizerXLM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"#' load_MRMkit_csv\n#'\n#' @param data MidarExperiment object\n#' @param filename file name of the MH CSV file\n#'\n#' @importFrom methods validObject\n#'\n#' @return MidarExperiment object\n#' @export\n#'\n#'\nload_MRMkit_csv <- function(data, filename) \ndata@dataset_orig <- read_MRMkitCSV(filename, silent = FALSE)\ndata@dataset <- data@dataset_orig  %>%\ndplyr::left_join(data@annot_analyses, by = c(","text":"","code":"loadMSOrganizerXLM(data, filename)"},{"path":"https://slinghub.github.io/midar/reference/loadMSOrganizerXLM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"#' load_MRMkit_csv\n#'\n#' @param data MidarExperiment object\n#' @param filename file name of the MH CSV file\n#'\n#' @importFrom methods validObject\n#'\n#' @return MidarExperiment object\n#' @export\n#'\n#'\nload_MRMkit_csv <- function(data, filename) \ndata@dataset_orig <- read_MRMkitCSV(filename, silent = FALSE)\ndata@dataset <- data@dataset_orig  %>%\ndplyr::left_join(data@annot_analyses, by = c(","text":"data MidarExperiment object filename file name path","code":""},{"path":"https://slinghub.github.io/midar/reference/loadMSOrganizerXLM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"#' load_MRMkit_csv\n#'\n#' @param data MidarExperiment object\n#' @param filename file name of the MH CSV file\n#'\n#' @importFrom methods validObject\n#'\n#' @return MidarExperiment object\n#' @export\n#'\n#'\nload_MRMkit_csv <- function(data, filename) \ndata@dataset_orig <- read_MRMkitCSV(filename, silent = FALSE)\ndata@dataset <- data@dataset_orig  %>%\ndplyr::left_join(data@annot_analyses, by = c(","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/loadMasshunterCSV.html","id":null,"dir":"Reference","previous_headings":"","what":"loadMasshunterCSV — loadMasshunterCSV","title":"loadMasshunterCSV — loadMasshunterCSV","text":"loadMasshunterCSV","code":""},{"path":"https://slinghub.github.io/midar/reference/loadMasshunterCSV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"loadMasshunterCSV — loadMasshunterCSV","text":"","code":"loadMasshunterCSV(data, filename)"},{"path":"https://slinghub.github.io/midar/reference/loadMasshunterCSV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"loadMasshunterCSV — loadMasshunterCSV","text":"data MidarExperiment object filename file name MH CSV file","code":""},{"path":"https://slinghub.github.io/midar/reference/loadMasshunterCSV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"loadMasshunterCSV — loadMasshunterCSV","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_assert.html","id":null,"dir":"Reference","previous_headings":"","what":"Add metadata an MidarExperiment object — metadata_assert","title":"Add metadata an MidarExperiment object — metadata_assert","text":"Metadata provided list tibbles validates consistency loaded analysis data provided MidarExperiment object transfered.","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_assert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add metadata an MidarExperiment object — metadata_assert","text":"","code":"metadata_assert(   data = NULL,   metadata,   excl_unannotated_analyses,   ignore_warnings )"},{"path":"https://slinghub.github.io/midar/reference/metadata_assert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add metadata an MidarExperiment object — metadata_assert","text":"data MidarExperiment object metadata List tibbles data.frames containing analysis, feature, istd, response curve tables excl_unannotated_analyses Exclude analyses (samples) matching metadata ignore_warnings Ignore data validation warnings proceed adding metadata","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_assert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add metadata an MidarExperiment object — metadata_assert","text":"metadata list","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_from_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve available metadata from imported analysis data — metadata_import_fromdata","title":"Retrieve available metadata from imported analysis data — metadata_import_fromdata","text":"Available information depend format imported raw analysis data. See data_import_masshunter() data_import_mrmkit()","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_from_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve available metadata from imported analysis data — metadata_import_fromdata","text":"","code":"metadata_import_fromdata(data, qc_type_field = \"qc_type\")"},{"path":"https://slinghub.github.io/midar/reference/metadata_from_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve available metadata from imported analysis data — metadata_import_fromdata","text":"data MidarExperiment object qc_type_field Column name imported raw data file representing qc_type","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_from_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve available metadata from imported analysis data — metadata_import_fromdata","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_import_fromdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve available metadata from imported analysis data — metadata_import_fromdata","title":"Retrieve available metadata from imported analysis data — metadata_import_fromdata","text":"Available information depend format imported raw analysis data. See data_import_masshunter() data_import_mrmkit()","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_import_fromdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve available metadata from imported analysis data — metadata_import_fromdata","text":"","code":"metadata_import_fromdata(data = NULL, qc_type_field = \"qc_type\")"},{"path":"https://slinghub.github.io/midar/reference/metadata_import_fromdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve available metadata from imported analysis data — metadata_import_fromdata","text":"data MidarExperiment object qc_type_field Column name imported raw data file representing qc_type","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_import_fromdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve available metadata from imported analysis data — metadata_import_fromdata","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_import_midarxlm.html","id":null,"dir":"Reference","previous_headings":"","what":"Import metadata from the midar template (.XLM) and associates it with the analysis data — metadata_import_midarxlm","title":"Import metadata from the midar template (.XLM) and associates it with the analysis data — metadata_import_midarxlm","text":"Requires version 1.9.1 template. Template based MSorganizer template (see TODO)","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_import_midarxlm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import metadata from the midar template (.XLM) and associates it with the analysis data — metadata_import_midarxlm","text":"","code":"metadata_import_midarxlm(   data = NULL,   path,   excl_unannotated_analyses = FALSE,   ignore_warnings = FALSE )"},{"path":"https://slinghub.github.io/midar/reference/metadata_import_midarxlm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import metadata from the midar template (.XLM) and associates it with the analysis data — metadata_import_midarxlm","text":"data MidarExperiment object path file name path excl_unannotated_analyses Exclude analyses (samples) matching metadata ignore_warnings Ignore warnings data validation proceed importing metadata","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_import_midarxlm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import metadata from the midar template (.XLM) and associates it with the analysis data — metadata_import_midarxlm","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves-MidarExperiment-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get response curve metadata — metadata_responsecurves,MidarExperiment-method","title":"Get response curve metadata — metadata_responsecurves,MidarExperiment-method","text":"Get curve IDs sample amount information response curves","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves-MidarExperiment-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get response curve metadata — metadata_responsecurves,MidarExperiment-method","text":"","code":"# S4 method for class 'MidarExperiment' metadata_responsecurves(x)"},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves-MidarExperiment-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get response curve metadata — metadata_responsecurves,MidarExperiment-method","text":"x MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves-MidarExperiment-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get response curve metadata — metadata_responsecurves,MidarExperiment-method","text":"Tibble","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves-set-MidarExperiment-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Set response curve metadata — metadata_responsecurves<-,MidarExperiment-method","title":"Set response curve metadata — metadata_responsecurves<-,MidarExperiment-method","text":"Set curve IDs sample amount information response curves","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves-set-MidarExperiment-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set response curve metadata — metadata_responsecurves<-,MidarExperiment-method","text":"","code":"# S4 method for class 'MidarExperiment' metadata_responsecurves(x) <- value"},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves-set-MidarExperiment-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set response curve metadata — metadata_responsecurves<-,MidarExperiment-method","text":"x MidarExperiment object value data.frame tibble","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves-set-MidarExperiment-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set response curve metadata — metadata_responsecurves<-,MidarExperiment-method","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves-set.html","id":null,"dir":"Reference","previous_headings":"","what":"metadata_responsecurves method — metadata_responsecurves<-","title":"metadata_responsecurves method — metadata_responsecurves<-","text":"Get curve IDs sample amount information response curves","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"metadata_responsecurves method — metadata_responsecurves<-","text":"","code":"metadata_responsecurves(x) <- value"},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"metadata_responsecurves method — metadata_responsecurves<-","text":"x MidarExperiment object value Table response curve metadata","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves-set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"metadata_responsecurves method — metadata_responsecurves<-","text":"Tibble","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves.html","id":null,"dir":"Reference","previous_headings":"","what":"metadata_responsecurves method — metadata_responsecurves","title":"metadata_responsecurves method — metadata_responsecurves","text":"Get curve IDs sample amount information response curves","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"metadata_responsecurves method — metadata_responsecurves","text":"","code":"metadata_responsecurves(x)"},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"metadata_responsecurves method — metadata_responsecurves","text":"x MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/metadata_responsecurves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"metadata_responsecurves method — metadata_responsecurves","text":"Tibble","code":""},{"path":"https://slinghub.github.io/midar/reference/midar-package.html","id":null,"dir":"Reference","previous_headings":"","what":"midar: Small Molecule Mass Spectrometry Data Post-Processing, Quality Control, Exploration and Reporting — midar-package","title":"midar: Small Molecule Mass Spectrometry Data Post-Processing, Quality Control, Exploration and Reporting — midar-package","text":"R functions facilitate managing, processing evaluating lipidomics data.","code":""},{"path":[]},{"path":"https://slinghub.github.io/midar/reference/midar-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"midar: Small Molecule Mass Spectrometry Data Post-Processing, Quality Control, Exploration and Reporting — midar-package","text":"Maintainer: Bo Burla bo.burla@nus.edu.sg (ORCID)","code":""},{"path":"https://slinghub.github.io/midar/reference/normalizeByISTD.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize Intensities with corresponding ISTD Intensities — normalizeByISTD","title":"Normalize Intensities with corresponding ISTD Intensities — normalizeByISTD","text":"Normalize Intensities corresponding ISTD Intensities","code":""},{"path":"https://slinghub.github.io/midar/reference/normalizeByISTD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize Intensities with corresponding ISTD Intensities — normalizeByISTD","text":"","code":"calc_normalize_by_istd(data)"},{"path":"https://slinghub.github.io/midar/reference/normalizeByISTD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize Intensities with corresponding ISTD Intensities — normalizeByISTD","text":"data MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/normalizeByISTD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize Intensities with corresponding ISTD Intensities — normalizeByISTD","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/normalize_by_istd.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize Intensities with corresponding ISTD Intensities — normalize_by_istd","title":"Normalize Intensities with corresponding ISTD Intensities — normalize_by_istd","text":"Normalize Intensities corresponding ISTD Intensities","code":""},{"path":"https://slinghub.github.io/midar/reference/normalize_by_istd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize Intensities with corresponding ISTD Intensities — normalize_by_istd","text":"","code":"calc_normalize_by_istd(data)"},{"path":"https://slinghub.github.io/midar/reference/normalize_by_istd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize Intensities with corresponding ISTD Intensities — normalize_by_istd","text":"data MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/normalize_by_istd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize Intensities with corresponding ISTD Intensities — normalize_by_istd","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/parse_masshunter_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads and parses one Agilent MassHunter Quant CSV result file — parse_masshunter_csv","title":"Reads and parses one Agilent MassHunter Quant CSV result file — parse_masshunter_csv","text":"Reads parses one Agilent MassHunter Quant CSV result file","code":""},{"path":"https://slinghub.github.io/midar/reference/parse_masshunter_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads and parses one Agilent MassHunter Quant CSV result file — parse_masshunter_csv","text":"","code":"parse_masshunter_csv(path, expand_qualifier_names = TRUE, silent = FALSE)"},{"path":"https://slinghub.github.io/midar/reference/parse_masshunter_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads and parses one Agilent MassHunter Quant CSV result file — parse_masshunter_csv","text":"path File path MassHunter Quant CSV file expand_qualifier_names TRUE, original qualifier names renamed adding quantifier name front placing qualifier name square brackets(e.g. Qualifier (422.3 -> 113.0) transition names quantifier added qualifier names silent Suppress messages","code":""},{"path":"https://slinghub.github.io/midar/reference/parse_masshunter_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads and parses one Agilent MassHunter Quant CSV result file — parse_masshunter_csv","text":"tibble parse results long format","code":""},{"path":"https://slinghub.github.io/midar/reference/parse_mrmkit_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Parses MRMkit peak integration results into a tibble — parse_mrmkit_result","title":"Parses MRMkit peak integration results into a tibble — parse_mrmkit_result","text":"Parses MRMkit peak integration results tibble","code":""},{"path":"https://slinghub.github.io/midar/reference/parse_mrmkit_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parses MRMkit peak integration results into a tibble — parse_mrmkit_result","text":"","code":"parse_mrmkit_result(path, silent = FALSE)"},{"path":"https://slinghub.github.io/midar/reference/parse_mrmkit_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parses MRMkit peak integration results into a tibble — parse_mrmkit_result","text":"path File name MRMkit result file (*.tsv *.csv) silent comments printed","code":""},{"path":"https://slinghub.github.io/midar/reference/parse_mrmkit_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parses MRMkit peak integration results into a tibble — parse_mrmkit_result","text":"tibble long format","code":""},{"path":"https://slinghub.github.io/midar/reference/parse_plain_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads a long CSV file with Feature Intensities — parse_plain_csv","title":"Reads a long CSV file with Feature Intensities — parse_plain_csv","text":"Reads long CSV file Feature Intensities","code":""},{"path":"https://slinghub.github.io/midar/reference/parse_plain_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads a long CSV file with Feature Intensities — parse_plain_csv","text":"","code":"parse_plain_csv(file, variable_name, analysis_id_col = NA, use_metadata)"},{"path":"https://slinghub.github.io/midar/reference/parse_plain_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads a long CSV file with Feature Intensities — parse_plain_csv","text":"file File name path plain long-format CSV file variable_name Name variable representing values table. Must one \"intensity\", \"norm_intensity\", \"conc\", \"area\", \"height\", \"response\") analysis_id_col Column used analysis_id use_metadata Import additional metadata columns (e.g. batch ID, sample type) add MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/parse_plain_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads a long CSV file with Feature Intensities — parse_plain_csv","text":"tibble long format","code":""},{"path":"https://slinghub.github.io/midar/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://slinghub.github.io/midar/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://slinghub.github.io/midar/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://slinghub.github.io/midar/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_pca_qc.html","id":null,"dir":"Reference","previous_headings":"","what":"PCA plot for QC — plot_pca_qc","title":"PCA plot for QC — plot_pca_qc","text":"PCA plot QC","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_pca_qc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PCA plot for QC — plot_pca_qc","text":"","code":"plot_pca_qc(   data,   variable,   log_transform,   dim_x,   dim_y,   grouping,   point_size = 2,   fill_alpha = 0.1 )"},{"path":"https://slinghub.github.io/midar/reference/plot_pca_qc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PCA plot for QC — plot_pca_qc","text":"data MidarExperiment object variable variable use plot log_transform log transform data plot dim_x PCA dimension x axis dim_y PCA dimension y axis grouping field used ellipses point_size size points fill_alpha transparency points","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_pca_qc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PCA plot for QC — plot_pca_qc","text":"ggplot2 object","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_responsecurves.html","id":null,"dir":"Reference","previous_headings":"","what":"Response curves plot — plot_responsecurves","title":"Response curves plot — plot_responsecurves","text":"Response curves plot","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_responsecurves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Response curves plot — plot_responsecurves","text":"","code":"qc_plot_responsecurves(   data,   output_pdf,   response_variable = \"Intensity\",   include_features_containing = \"\",   exclude_features_containing = \"\",   regr_max_percent = NA,   pdf_file_name = \"\",   rows_page = 4,   cols_page = 5,   point_size = 2,   line_width = 1,   text_scale_factor = 1,   return_plot_list = FALSE,   base_size = 7 )"},{"path":"https://slinghub.github.io/midar/reference/plot_responsecurves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Response curves plot — plot_responsecurves","text":"data MidarExperiment object output_pdf Save PDF response_variable Variable plot include_features_containing Filter features containing exclude_features_containing Exclude features containing regr_max_percent Max relative sample amount use regressionb pdf_file_name file name pdf file rows_page rows per page cols_page columns per page point_size point size line_width regression line width text_scale_factor text scale factor return_plot_list return plot list base_size base font size","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_responsecurves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Response curves plot — plot_responsecurves","text":"list ggplot2 objects","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_runscatter.html","id":null,"dir":"Reference","previous_headings":"","what":"RunScatter plot — plot_runscatter","title":"RunScatter plot — plot_runscatter","text":"RunScatter plot","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_runscatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RunScatter plot — plot_runscatter","text":"","code":"qc_plot_runscatter(   data,   y_var,   feature_filter,   filter_exclude = FALSE,   cap_values,   cap_SPL_SD = 4,   cap_QC_SD = 4,   cap_top_n = 10,   QC_TYPE_fit = \"TQC\",   show_trend = FALSE,   trend_samples_fun = \"loess\",   trend_samples_col = \"\",   after_correction = FALSE,   plot_other_qc = TRUE,   show_batches = FALSE,   batches_as_shades = FALSE,   batch_line_color = \"red1\",   batch_shading_color = \"grey85\",   outputPDF,   filename = \"\",   cols_page,   rows_page,   annot_scale = 1,   paper_orientation = \"LANDSCAPE\",   point_transparency = 1,   point_size = 2,   point_stroke_width = 0.8,   page_no = NA,   y_label_text = NA,   silent = FALSE,   return_plot_list = TRUE,   base_size = 7 )"},{"path":"https://slinghub.github.io/midar/reference/plot_runscatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RunScatter plot — plot_runscatter","text":"data MidarExperiment object y_var Variable plot feature_filter Filter features containing filter_exclude Exclude include feature_filter cap_values Cap y axis ignore outliers cap_SPL_SD Minimum s.d. samples cap_QC_SD Minimum s.d. QCs cap_top_n Cap top n values QC_TYPE_fit QC TYPE used loess fit show_trend Show drift correction trend_samples_fun Function used drift correction. Default 'loess' trend_samples_col Color drift line after_correction Show /correction plot_other_qc Plot QCS show_batches Show batches batches_as_shades Show batches shades batch_line_color batch separator color batch_shading_color batch shade color outputPDF save PDF filename file name PDF cols_page columns per page rows_page rows per page annot_scale scale factor text elements paper_orientation Landscape/Portrait point_transparency Alpha points point_size point size point_stroke_width point stroke width page_no Show page number y_label_text Overwrite y label text silent Verbose silent return_plot_list return list plots base_size base font size plot","code":""},{"path":"https://slinghub.github.io/midar/reference/plot_runscatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RunScatter plot — plot_runscatter","text":"list ggplot2 plots NULL","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_apply_feature_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter dataset according to QC and other criteria — qc_apply_feature_filter","title":"Filter dataset according to QC and other criteria — qc_apply_feature_filter","text":"Filter dataset according QC parameter criteria, remove features internal standards (ISTDs) annotated quantifier (optional). Exclude features analyses annotated valid metadata (valid_feature, valid_analysis). Missing qc parameter values, e.g. mean BQC intensity, BQC values present data, handled following: filter applied (e.g. intensity.min.bqc.min) qc value NA feature excluded. filter applied matter qc value defined NA, filtering applied Note: istd.include TRUE, signalblank.median.sblk.min signalblank.median.sblk.min ignored ISTDs, blanks defined containing ISTDs.","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_apply_feature_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter dataset according to QC and other criteria — qc_apply_feature_filter","text":"","code":"qc_apply_feature_filter(   data = NULL,   overwrite = TRUE,   batch_medians = FALSE,   qualifier.include = FALSE,   istd.include = FALSE,   missing.intensity.spl.prop.max = NA,   missing.norm_intensity.spl.prop.max = NA,   missing.conc.spl.prop.max = NA,   intensity.min.bqc.min = NA,   intensity.min.tqc.min = NA,   intensity.min.spl.min = NA,   intensity.median.bqc.min = NA,   intensity.median.tqc.min = NA,   intensity.median.spl.min = NA,   intensity.max.spl.min = NA,   signalblank.median.pblk.min = NA,   signalblank.median.ublk.min = NA,   signalblank.median.sblk.min = NA,   cv.conc.bqc.max = NA,   cv.conc.tqc.max = NA,   cv.intensity.bqc.min = NA,   cv.intensity.tqc.min = NA,   dratio.conc.bqc.sd.max = NA,   dratio.conc.tqc.sd.max = NA,   dratio.conc.bqc.mad.max = NA,   dratio.conc.tqc.mad.max = NA,   response.rsquare.min = NA,   response.yintersect.rel.max = NA,   response.curve.id = NA,   outlier.technical.exlude = FALSE,   features_to_keep = NULL )"},{"path":"https://slinghub.github.io/midar/reference/qc_apply_feature_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter dataset according to QC and other criteria — qc_apply_feature_filter","text":"data MidarExperiment object overwrite Add/change previously defined qc filters define new set filters. Default FALSE. batch_medians Use median batch-wise derived QC values. Default FALSE. qualifier.include Include qualifier features istd.include Include Internal Standards (ISTD). set FALSE, meaning ISTDs included, min_signal_blank_ratio ignored, S/B based Processed Blanks (PBLK) contain ISTDs. missing.intensity.spl.prop.max NA Proportion missing raw intensities missing.norm_intensity.spl.prop.max NA Proportion missing normalized intensities missing.conc.spl.prop.max NA Proportion missing final concentrations intensity.min.bqc.min Minimum median feature intensity BQC intensity.min.tqc.min Minimum median feature intensity TQC intensity.min.spl.min Minimum median feature intensity study samples (SPL) intensity.median.bqc.min Minimum median feature intensity BQC intensity.median.tqc.min Minimum median feature intensity TQC intensity.median.spl.min Minimum median feature intensity study samples (SPL) intensity.max.spl.min Minimum maximun feature intensity oof study samples (SPL) signalblank.median.pblk.min = Signal--Blank ratio. Calculated median study samples median Process Blank (PBLK) signalblank.median.ublk.min = Signal--Blank ratio. Calculated median study samples median Unprocessed Blank (UBLK) signalblank.median.sblk.min = Signal--Blank ratio. Calculated median study samples median Solvent Blank (SBLK) cv.conc.bqc.max = Maximum %CV BQC cv.conc.tqc.max Maximum %CV TQC cv.intensity.bqc.min Maximum %CV BQC cv.intensity.tqc.min Maximum %CV TQC dratio.conc.bqc.sd.max D-ratio defined CV_BQC/CV_SPL, based sd dratio.conc.tqc.sd.max D-ratio defined CV_TQC/CV_SPL, based sd dratio.conc.bqc.mad.max D-ratio defined CV_BQC/CV_SPL, based mad dratio.conc.tqc.mad.max D-ratio defined CV_TQC/CV_SPL, based mad response.rsquare.min = Minimum r squared RQC curve defined response.curve.id response.yintersect.rel.max = Minimum relative y0 intersect, whereby 1 refers relative_sample_amount 100%. Used filter curves good r2 flat even negative slope. response.curve.id Name RQC curve string, index number curve use filtering (first curve 1) outlier.technical.exlude Remove samples classified outliers features_to_keep Features must kept, even meet given QC criteria","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_apply_feature_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter dataset according to QC and other criteria — qc_apply_feature_filter","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_calc_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate feature quality control (QC) metrics — qc_calc_metrics","title":"Calculate feature quality control (QC) metrics — qc_calc_metrics","text":"feature, different QC metrics calculated, either across full analysis medians batch-wise calculations","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_calc_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate feature quality control (QC) metrics — qc_calc_metrics","text":"","code":"qc_calc_metrics(   data = NULL,   batch_medians,   with_norm_intensity = TRUE,   with_conc = TRUE,   with_linearity = TRUE )"},{"path":"https://slinghub.github.io/midar/reference/qc_calc_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate feature quality control (QC) metrics — qc_calc_metrics","text":"data MidarExperiment object batch_medians Use median batch-wise derived QC values. Default FALSE. with_norm_intensity Include normalized intensity statistics features. Default TRUE. with_conc Include concentration statistics features. Default TRUE. with_linearity Include linearity statistics response curves. increase calculation time. Default TRUE.","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_calc_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate feature quality control (QC) metrics — qc_calc_metrics","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_normalization_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Comparison of CV values before and after normalization — qc_plot_normalization_cv","title":"Comparison of CV values before and after normalization — qc_plot_normalization_cv","text":"Comparison CV values normalization","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_normalization_cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comparison of CV values before and after normalization — qc_plot_normalization_cv","text":"","code":"qc_plot_normalization_cv(   data = NULL,   filter_data,   qc_type,   var_before = c(\"intensity\"),   var_after = c(\"norm_intensity\"),   cv_treshhold = 25,   only_quantifier = TRUE,   xlim = c(0, NA),   ylim = c(0, NA),   ncol = 5,   point_size = 1,   point_alpha = 0.5,   scale_factor = 1,   font_base_size = 8 )"},{"path":"https://slinghub.github.io/midar/reference/qc_plot_normalization_cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comparison of CV values before and after normalization — qc_plot_normalization_cv","text":"data MidarExperiment object filter_data Use (default) qc-filtered data qc_type QC type use plot. var_before Variable QC metrics table used x axis var_after Variable QC metrics table used y axis cv_treshhold Threshold values shown plot dashed lines only_quantifier Show quantifier xlim Lower upper limits x axis vector ylim Lower upper limits y axis vector ncol Number facet columns point_size size points. Default 2 point_alpha transparency points scale_factor Scale factor text labels font_base_size Base font size plot text elements","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_normalization_cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comparison of CV values before and after normalization — qc_plot_normalization_cv","text":"ggplot2 object","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"PCA plot for QC — qc_plot_pca","title":"PCA plot for QC — qc_plot_pca","text":"PCA plot QC","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PCA plot for QC — qc_plot_pca","text":"","code":"qc_plot_pca(   data = NULL,   variable,   filter_data,   pca_dim = c(1, 2),   qc_types = c(\"SPL\", \"BQC\", \"TQC\", \"NIST\", \"LTR\"),   label_k_mad = 3,   log_transform = TRUE,   remove_istds = TRUE,   min_median_signal = NA,   point_size = 2,   point_alpha = 0.7,   ellipse_alpha = 0.8,   font_base_size = 8,   hide_label_text = NA )"},{"path":"https://slinghub.github.io/midar/reference/qc_plot_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PCA plot for QC — qc_plot_pca","text":"data MidarExperiment object variable variable use PCA. Must \"area\", \"height\", \"intensity\", \"response\", \"conc\", \"conc_raw\", \"rt\", \"fwhm\". filter_data Use (default) qc-filtered data pca_dim PCA dimensions plot vector length 2. Default c(1,2) qc_types qc types plot. Default c(\"SPL\", \"BQC\", \"TQC\", \"NIST\", \"LTR\") label_k_mad Show analysis_id label points outside k * mad two defined PCA dimensions. Default 3. Set NULL supress labels. log_transform log-transform data calculating PCA. Default TRUE remove_istds Exlude ISTD features. Default TRUE min_median_signal Minimum median signal across samples selected qc types. NA (default) filter features based signal. point_size size points. Default 2 point_alpha transparency points ellipse_alpha transparency ellipse fill font_base_size Base font size plot text elements hide_label_text Hide shared text (case-senstive) labels. results non-unique analysis_id's error raised.","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PCA plot for QC — qc_plot_pca","text":"ggplot2 object","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_responsecurves.html","id":null,"dir":"Reference","previous_headings":"","what":"Response curves plot — qc_plot_responsecurves","title":"Response curves plot — qc_plot_responsecurves","text":"Response curves plot","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_responsecurves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Response curves plot — qc_plot_responsecurves","text":"","code":"qc_plot_responsecurves(   data = NULL,   variable = \"intensity\",   filter_data,   feature_incl_filt = \"\",   feature_excl_filt = \"\",   save_pdf = FALSE,   path = \"\",   regr_max_percent = NA,   rows_page = 4,   cols_page = 5,   page_no = NA,   point_size = 1.5,   line_width = 0.7,   scale_factor = 1,   paper_orientation = \"LANDSCAPE\",   font_base_size = 7,   show_progress = TRUE,   return_plot_list = FALSE )"},{"path":"https://slinghub.github.io/midar/reference/qc_plot_responsecurves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Response curves plot — qc_plot_responsecurves","text":"data MidarExperiment object variable Variable plot filter_data Use QC-filtered data feature_incl_filt Filter features names matching criteria (regex). empty, NA NULL available features included. feature_excl_filt Exclude features names matching criteria (regex).  empty, NA NULL available features included. save_pdf Save PDF path file name pdf file regr_max_percent Max relative sample amount use regressionb rows_page rows per page cols_page columns per page page_no Specific page plot. Default NA, meaning pages plotted point_size point size line_width regression line width scale_factor scale factor fonts, symbols lines paper_orientation Landscape/Portrait font_base_size base font size show_progress show progress bar return_plot_list return plot list","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_responsecurves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Response curves plot — qc_plot_responsecurves","text":"list ggplot2 objects","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_rla_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"RLA (Relative Log Abundance) plot — qc_plot_rla_boxplot","title":"RLA (Relative Log Abundance) plot — qc_plot_rla_boxplot","text":"Relative log abundance (RLA) plots show standardized analyte abundances sample. Standardization done removing within- across-batch median analyte.","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_rla_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RLA (Relative Log Abundance) plot — qc_plot_rla_boxplot","text":"","code":"qc_plot_rla_boxplot(   data = NULL,   rla_type_batch = c(\"within\", \"across\"),   variable = c(\"intensity\", \"norm_intensity\", \"conc\", \"conc_raw\", \"area\", \"height\",     \"fwhm\"),   filter_data = FALSE,   qc_types = NA,   x_axis_variable = c(\"run_seq_num\"),   feature_incl_filt = \"\",   feature_excl_filt = \"\",   analysis_no_range = NA,   min_feature_intensity = 0,   y_lim = NA,   ignore_outliers = FALSE,   show_batches = TRUE,   batches_as_shades = FALSE,   batch_line_color = \"#b6f0c5\",   batch_shading_color = \"grey93\",   x_gridlines = FALSE,   linewidth = 0.2,   base_font_size = 8,   relative_log_abundances = TRUE )"},{"path":"https://slinghub.github.io/midar/reference/qc_plot_rla_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RLA (Relative Log Abundance) plot — qc_plot_rla_boxplot","text":"data MidarExperiment object rla_type_batch Must either within across, defining whether use -across-group RLA variable Variable plot filter_data Use QC-filtered data qc_types QC type plot. qc_types NA NULL, available QC types plotted. x_axis_variable Variable used x axis, muste one : run_seq_num, run_no, analysis_id, timestamp feature_incl_filt Filter text select specific features (regex string) feature_excl_filt Filter text exclude specific features (regex string) analysis_no_range Analysis range plot. Format: c(start, end). Setting one NA ignoresthe corresponding boundary. Default NA, plots available analyses. min_feature_intensity Exclude features overall median signal value y_lim Y-axis lower upper limits vector (default NA). also overwrites limits calculated ignore_outliers ignore_outliers Exclude outlier values based 4x MAD (median absolute deviation) fences show_batches Show batches batches_as_shades Show batches shades batch_line_color batch separator color batch_shading_color batch shade color x_gridlines Show major x gridlines linewidth Line width used whiskers boxplot base_font_size base font size plots (default 8) relative_log_abundances Use relative log abundances (RLA). FALSE just use log-transformed values (result RLA plot)","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_rla_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RLA (Relative Log Abundance) plot — qc_plot_rla_boxplot","text":"ggplot object","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_rla_boxplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"RLA (Relative Log Abundance) plot — qc_plot_rla_boxplot","text":"plot first introduced De Livera et al. (2012) context metabolomics used visualize relative log abundance (RLA) feature sample. RLA calculated subtracting within- across-batch median feature. normalization useful examine dataset technical effect involve feature similar manner, batch effects due changes instrument response, pipeting errors, sample spillage. features normmalized, plot robust detect effects, unlike e.g. sum abundance plots biased toward abundant lipid species analysed matrix","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_rla_boxplot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"RLA (Relative Log Abundance) plot — qc_plot_rla_boxplot","text":"De Livera et al. (2012) Normalizing integrating metabolomics data. Analytical Chemistry 10768-10776 DOI: 10.1021/ac302748b De Livera et al. (2015) Statistical Methods Handling Unwanted Variation Metabolomics Data. Analytical Chemistry 87(7):3606-3615 DOI: 10.1021/ac502439y","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_runscatter.html","id":null,"dir":"Reference","previous_headings":"","what":"RunScatter plot — qc_plot_runscatter","title":"RunScatter plot — qc_plot_runscatter","text":"RunScatter plot","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_runscatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RunScatter plot — qc_plot_runscatter","text":"","code":"qc_plot_runscatter(   data = NULL,   variable = c(\"intensity\", \"norm_intensity\", \"conc\", \"conc_raw\", \"area\", \"height\",     \"fwhm\"),   filter_data = FALSE,   qc_types = NA,   include_qualifier = TRUE,   filt_include_features = NA,   filt_exclude_features = NA,   analysis_no_range = NA,   save_pdf = FALSE,   path = \"\",   log_scale = FALSE,   cap_outliers = FALSE,   cap_qc_k_mad = 4,   cap_spl_k_mad = 4,   cap_top_n_values = NA,   show_batches = TRUE,   show_control_limits = NA,   set_limits_n_sd = NA,   limits_batchwise = FALSE,   limits_linecolor = \"#38dff5\",   limits_linewidth = 0.75,   batches_as_shades = FALSE,   batch_line_color = \"#b6f0c5\",   batch_shading_color = \"grey93\",   cols_page = 3,   rows_page = 3,   base_font_size = 11,   annot_scale = 1,   show_trend = FALSE,   trend_linecolor = \"#22e06b\",   fit_qc_type = \"BQC\",   paper_orientation = \"LANDSCAPE\",   point_transparency = 1,   point_size = 2,   point_stroke_width = 1,   page_no = NA,   y_label_text = NA,   return_plot_list = FALSE,   show_gridlines = FALSE,   show_progress = FALSE )"},{"path":"https://slinghub.github.io/midar/reference/qc_plot_runscatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RunScatter plot — qc_plot_runscatter","text":"data MidarExperiment object variable Variable plot filter_data Use QC-filtered data, based criteria set via qc_apply_feature_filter() qc_types QC type plot. qc_types us NA NULL, available QC types plotted. include_qualifier Include qualifier features. Default TRUE. filt_include_features Select features feature_id matching given string. default regex string. NA, \"\" ignores filter. filt_exclude_features Exclude features feature_id matching given string. default regex string. NA, \"\" ignores filter. analysis_no_range Analysis range plot. Format: c(start, end). Setting one NA ignoresthe corresponding boundary. Default NA, plots available analyses. save_pdf save PDF path file name PDF log_scale Use log10 scale y axis cap_outliers Cap upper outliers, based MAD fences SPL QC samples, see cap_spl_k_mad cap_qc_k_mad. Useful cap extreme values distorting plot. cap_qc_k_mad k * MAD (median absolute deviation) outlier capping BQC /TQC samples. Default 4. cap_spl_k_mad k * MAD (median absolute deviation) outlier capping SPL samples. Default 4. cap_top_n_values Cap top n values, irrespective IQR fence. useful remove single extreme values. Default (NA) 0 ignores filter. show_batches Show batches show_control_limits Show mean line given QC types. NA (default) ignores median line. set_limits_n_sd Show  /- n x SD lines QC types defined via show_median. NA (default) ignores SD lines. limits_batchwise Calculate mean SD line per batch. Default FALSE. limits_linecolor Color mean SD lines limits_linewidth Width mean SD lines batches_as_shades Show batches shades batch_line_color batch separator color batch_shading_color batch shade color cols_page columns per page rows_page rows per page base_font_size base font size plot annot_scale scale factor text elements show_trend Show drift correction. TODO: Add details trend_linecolor Color tend line fit_qc_type QC type used smoothing  TODO: Add detail paper_orientation Landscape/Portrait point_transparency Alpha points point_size point size point_stroke_width point stroke width page_no Show/save specific page number. Default NA, plots pages. y_label_text Overwrite y label text return_plot_list return list plots show_gridlines show x y major gridlines show_progress show progress bar","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_runscatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RunScatter plot — qc_plot_runscatter","text":"list ggplot2 plots NULL","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_runsequence.html","id":null,"dir":"Reference","previous_headings":"","what":"RunSequence plot — qc_plot_runsequence","title":"RunSequence plot — qc_plot_runsequence","text":"RunSequence plot","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_runsequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RunSequence plot — qc_plot_runsequence","text":"","code":"qc_plot_runsequence(   data = NULL,   qc_types = NA,   show_batches = TRUE,   show_timestamp = FALSE,   add_info_title = TRUE,   single_row = FALSE,   segment_thickness = 0.5,   batches_as_shades = FALSE,   batch_line_color = \"#b6f0c5\",   batch_shading_color = \"grey85\",   scale_factor = 1,   show_outlier = TRUE,   base_font_size = 8 )"},{"path":"https://slinghub.github.io/midar/reference/qc_plot_runsequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RunSequence plot — qc_plot_runsequence","text":"data MidarExperiment object qc_types QC types shown, NA displays available QC/Sample types. Can vector QC types string regex pattern. show_batches Show batches show_timestamp Use acquisition time stamp x-axis add_info_title Add title experiment title analysis date times single_row Show qc types single row segment_thickness Linewidth segments batches_as_shades Show batches shades batch_line_color batch separator color batch_shading_color batch shade color scale_factor Overall plot scale factor show_outlier samples defined outlier separate row base_font_size base font size","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_runsequence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RunSequence plot — qc_plot_runsequence","text":"ggplot object","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot summary of feature QC filtering — qc_plot_summary","title":"Plot summary of feature QC filtering — qc_plot_summary","text":"Plot summary feature QC filtering","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot summary of feature QC filtering — qc_plot_summary","text":"","code":"qc_plot_summary(   data = NULL,   include_qualifier = FALSE,   include_istd = FALSE,   with_venn_diag = TRUE,   user_defined_keeper = FALSE,   font_base_size = 8 )"},{"path":"https://slinghub.github.io/midar/reference/qc_plot_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot summary of feature QC filtering — qc_plot_summary","text":"data MidarExperiment object include_qualifier Include qualifier features. used filter_data = TRUE applied. include_istd Include internal standard features. Default TRUE. used filter_data = TRUE applied. with_venn_diag Include Venn diagram features failing S/B, CVa, linearity user_defined_keeper Include user-defined feature inclusion list, even pass QC filtering font_base_size font size plots","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot summary of feature QC filtering — qc_plot_summary","text":"ggplot2 object","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_summary_classes.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot summary of feature QC filtering per class — qc_plot_summary_classes","title":"Plot summary of feature QC filtering per class — qc_plot_summary_classes","text":"Plot summary feature QC filtering per class","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_summary_classes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot summary of feature QC filtering per class — qc_plot_summary_classes","text":"","code":"qc_plot_summary_classes(   data = NULL,   include_qualifier = FALSE,   include_istd = FALSE,   user_defined_keeper = FALSE,   font_base_size = 8 )"},{"path":"https://slinghub.github.io/midar/reference/qc_plot_summary_classes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot summary of feature QC filtering per class — qc_plot_summary_classes","text":"data MidarExperiment object include_qualifier Include qualifier features. used filter_data = TRUE applied. include_istd Include internal standard features. Default TRUE. used filter_data = TRUE applied. user_defined_keeper Include user-defined feature inclusion list, even pass QC filtering font_base_size font size plots","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_summary_classes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot summary of feature QC filtering per class — qc_plot_summary_classes","text":"ggplot2 object","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_x_vs_y.html","id":null,"dir":"Reference","previous_headings":"","what":"Contrast two variables from QC metrics table for all features per feature class — qc_plot_x_vs_y","title":"Contrast two variables from QC metrics table for all features per feature class — qc_plot_x_vs_y","text":"Contrast two variables QC metrics table features per feature class","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_x_vs_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contrast two variables from QC metrics table for all features per feature class — qc_plot_x_vs_y","text":"","code":"qc_plot_x_vs_y(   data = NULL,   filter_data,   x_variable,   y_variable,   cv_treshhold = 25,   only_quantifier = TRUE,   xlim = c(0, NA),   ylim = c(0, NA),   ncol = 5,   point_size = 1,   point_alpha = 0.5,   scale_factor = 1,   font_base_size = 8 )"},{"path":"https://slinghub.github.io/midar/reference/qc_plot_x_vs_y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contrast two variables from QC metrics table for all features per feature class — qc_plot_x_vs_y","text":"data MidarExperiment object filter_data Use (default) qc-filtered data x_variable Variable QC metrics table used x axis y_variable Variable QC metrics table used y axis cv_treshhold Treshhold values shown plot dashed lines only_quantifier Show quantifier xlim Lower upper limits x axis vector ylim Lower upper limits y axis vector ncol Number facet columns point_size size points. Default 2 point_alpha transparency points scale_factor Scale factor text labels font_base_size Base font size plot text elements","code":""},{"path":"https://slinghub.github.io/midar/reference/qc_plot_x_vs_y.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contrast two variables from QC metrics table for all features per feature class — qc_plot_x_vs_y","text":"ggplot2 object","code":""},{"path":"https://slinghub.github.io/midar/reference/quantitateByISTD.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantitate using sample and spiked ISTD amounts — quantitateByISTD","title":"Quantitate using sample and spiked ISTD amounts — quantitateByISTD","text":"Quantitate using sample spiked ISTD amounts","code":""},{"path":"https://slinghub.github.io/midar/reference/quantitateByISTD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantitate using sample and spiked ISTD amounts — quantitateByISTD","text":"","code":"calc_quantify_by_istd(data)"},{"path":"https://slinghub.github.io/midar/reference/quantitateByISTD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantitate using sample and spiked ISTD amounts — quantitateByISTD","text":"data MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/quantitateByISTD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantitate using sample and spiked ISTD amounts — quantitateByISTD","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/quantitate_by_istd.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantitate using sample and spiked ISTD amounts — quantitate_by_istd","title":"Quantitate using sample and spiked ISTD amounts — quantitate_by_istd","text":"Quantitate using sample spiked ISTD amounts","code":""},{"path":"https://slinghub.github.io/midar/reference/quantitate_by_istd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantitate using sample and spiked ISTD amounts — quantitate_by_istd","text":"","code":"calc_quantify_by_istd(data)"},{"path":"https://slinghub.github.io/midar/reference/quantitate_by_istd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantitate using sample and spiked ISTD amounts — quantitate_by_istd","text":"data MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/quantitate_by_istd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantitate using sample and spiked ISTD amounts — quantitate_by_istd","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/read_MRMkit_raw_area_CSV.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and convert an Agilent MassHunter Quant CSV result file — read_MRMkit_raw_area_CSV","title":"Read and convert an Agilent MassHunter Quant CSV result file — read_MRMkit_raw_area_CSV","text":"Read convert Agilent MassHunter Quant CSV result file","code":""},{"path":"https://slinghub.github.io/midar/reference/read_MRMkit_raw_area_CSV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and convert an Agilent MassHunter Quant CSV result file — read_MRMkit_raw_area_CSV","text":"","code":"read_MRMkit_raw_area_CSV(filename, use_mrmkit_normdata = FALSE, silent = FALSE)"},{"path":"https://slinghub.github.io/midar/reference/read_MRMkit_raw_area_CSV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and convert an Agilent MassHunter Quant CSV result file — read_MRMkit_raw_area_CSV","text":"filename File path MassHunter Quant CSV file use_mrmkit_normdata use raw MRMkit-normalized data silent Suppress messages","code":""},{"path":"https://slinghub.github.io/midar/reference/read_MRMkit_raw_area_CSV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and convert an Agilent MassHunter Quant CSV result file — read_MRMkit_raw_area_CSV","text":"tibble long format","code":""},{"path":"https://slinghub.github.io/midar/reference/read_MRMkit_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads a long CSV file with Feature Intensities — read_MRMkit_results","title":"Reads a long CSV file with Feature Intensities — read_MRMkit_results","text":"Reads long CSV file Feature Intensities","code":""},{"path":"https://slinghub.github.io/midar/reference/read_MRMkit_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads a long CSV file with Feature Intensities — read_MRMkit_results","text":"","code":"read_MRMkit_results(data, raw_area_file, final_results_file, silent = FALSE)"},{"path":"https://slinghub.github.io/midar/reference/read_MRMkit_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads a long CSV file with Feature Intensities — read_MRMkit_results","text":"data MidarExperiment object raw_area_file file path MRMkit csv output raw peak areas final_results_file file path MRMkit csv output final processed normalized peak areas silent comments printed","code":""},{"path":"https://slinghub.github.io/midar/reference/read_MRMkit_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads a long CSV file with Feature Intensities — read_MRMkit_results","text":"tibble long format","code":""},{"path":"https://slinghub.github.io/midar/reference/read_MassHunterCSV.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and convert an Agilent MassHunter Quant CSV result file — read_MassHunterCSV","title":"Read and convert an Agilent MassHunter Quant CSV result file — read_MassHunterCSV","text":"Read convert Agilent MassHunter Quant CSV result file","code":""},{"path":"https://slinghub.github.io/midar/reference/read_MassHunterCSV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and convert an Agilent MassHunter Quant CSV result file — read_MassHunterCSV","text":"","code":"read_MassHunterCSV(filename, silent = FALSE)"},{"path":"https://slinghub.github.io/midar/reference/read_MassHunterCSV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and convert an Agilent MassHunter Quant CSV result file — read_MassHunterCSV","text":"filename File path MassHunter Quant CSV file silent Suppress messages","code":""},{"path":"https://slinghub.github.io/midar/reference/read_MassHunterCSV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and convert an Agilent MassHunter Quant CSV result file — read_MassHunterCSV","text":"tibble long format","code":""},{"path":"https://slinghub.github.io/midar/reference/read_MassHunterCSV_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads a wide CSV file with Feature Intensities — read_MassHunterCSV_wide","title":"Reads a wide CSV file with Feature Intensities — read_MassHunterCSV_wide","text":"Reads wide CSV file Feature Intensities","code":""},{"path":"https://slinghub.github.io/midar/reference/read_MassHunterCSV_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads a wide CSV file with Feature Intensities — read_MassHunterCSV_wide","text":"","code":"read_MassHunterCSV_wide(file, field, silent = FALSE)"},{"path":"https://slinghub.github.io/midar/reference/read_MassHunterCSV_wide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads a wide CSV file with Feature Intensities — read_MassHunterCSV_wide","text":"file File name path MassHunter Quant CSV file field Peak parameter (e.g. Area, RT) silent Suppress messages","code":""},{"path":"https://slinghub.github.io/midar/reference/read_MassHunterCSV_wide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads a wide CSV file with Feature Intensities — read_MassHunterCSV_wide","text":"tibble long format","code":""},{"path":"https://slinghub.github.io/midar/reference/read_data_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads a generic wide .csv or .xls sheet with analysis results data — read_data_table","title":"Reads a generic wide .csv or .xls sheet with analysis results data — read_data_table","text":"Imports tables column analysis identifier (e.g. sample name) following colums measured features. values table","code":""},{"path":"https://slinghub.github.io/midar/reference/read_data_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads a generic wide .csv or .xls sheet with analysis results data — read_data_table","text":"","code":"read_data_table(   file,   value_type = c(\"area\", \"height\", \"intensity\", \"norm_area\", \"norm_height\",     \"norm_intensity\", \"feature_conc\", \"rt\", \"fwhm\", \"width\"),   sheet = \"\",   silent = FALSE )"},{"path":"https://slinghub.github.io/midar/reference/read_data_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads a generic wide .csv or .xls sheet with analysis results data — read_data_table","text":"file File name path plain wide-format CSV XLS file value_type Parameter type feature, .e. \"area\", \"height\", \"intensity\", \"norm_area\", \"norm_height\", \"norm_intensity\", \"feature_conc\", \"rt\", \"fwhm\" \"width\" sheet Sheet name case Excel file (.xls, .xlsx, .xlsm) imported silent Suppress messages","code":""},{"path":"https://slinghub.github.io/midar/reference/read_data_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads a generic wide .csv or .xls sheet with analysis results data — read_data_table","text":"tibble long format","code":""},{"path":"https://slinghub.github.io/midar/reference/read_long_table_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads a long CSV file with Feature Intensities — read_long_table_csv","title":"Reads a long CSV file with Feature Intensities — read_long_table_csv","text":"Reads long CSV file Feature Intensities","code":""},{"path":"https://slinghub.github.io/midar/reference/read_long_table_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads a long CSV file with Feature Intensities — read_long_table_csv","text":"","code":"read_long_table_csv(file, field, silent = FALSE)"},{"path":"https://slinghub.github.io/midar/reference/read_long_table_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads a long CSV file with Feature Intensities — read_long_table_csv","text":"file File name path plain long-format CSV file field Peak parameter (e.g. Area, RT) silent Suppress messages","code":""},{"path":"https://slinghub.github.io/midar/reference/read_long_table_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads a long CSV file with Feature Intensities — read_long_table_csv","text":"tibble long format","code":""},{"path":"https://slinghub.github.io/midar/reference/read_masshunter_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads an Agilent MassHunter Quant CSV file — read_masshunter_csv","title":"Reads an Agilent MassHunter Quant CSV file — read_masshunter_csv","text":"Imports .csv file Agilent MassHunter Quantitative Analysis results. Samples rows, features/compounds columns must contain either peak areas, peak heights intensities. Additional columns, RT (rentention time), FWHM, PrecursorMZ, CE imported available MidarExperiment object downstream analyses","code":""},{"path":"https://slinghub.github.io/midar/reference/read_masshunter_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads an Agilent MassHunter Quant CSV file — read_masshunter_csv","text":"","code":"read_masshunter_csv(data, filename)"},{"path":"https://slinghub.github.io/midar/reference/read_masshunter_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads an Agilent MassHunter Quant CSV file — read_masshunter_csv","text":"data MidarExperiment object filename filename","code":""},{"path":"https://slinghub.github.io/midar/reference/read_masshunter_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads an Agilent MassHunter Quant CSV file — read_masshunter_csv","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/read_masshunter_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads an Agilent MassHunter Quant CSV file — read_masshunter_csv","text":"","code":"csvfile <- system.file(\"extdata\", \"Example_MHQuant_1.csv\", package = \"midar\") mexp <- MidarExperiment() mexp <- read_masshunter_csv(mexp, csvfile) #> Reading [Example_MHQuant_1.csv] ... #> Imported 215 samples with 428 transitions.  mexp #>  #>  MidarExperiment  #>   #>    Data:   #>    • Samples:  215  #>    • Features:   428  #>   #>    Metadata:   #>    • Sample annotation:  ✗  #>    • Feature annotation:  ✗  #>    • Internal standard annotation:  ✗  #>    • Response curves annotation:  ✗  #>    • Study samples annotation:  ✗  #>   #>    Processing status: Unknown  #>   #>    Processing:   #>    • ISTD-normalized:   #>    • ISTD-quantitated:   #>    • Drift corrected:   #>    • Batch corrected:"},{"path":"https://slinghub.github.io/midar/reference/read_metadata_midarxlm.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads and parses metadata provided by the MSOrganizer EXCEL template. — read_metadata_midarxlm","title":"Reads and parses metadata provided by the MSOrganizer EXCEL template. — read_metadata_midarxlm","text":"Requires version 1.9.1 template NOTES sample_type defined SPL assigned valid_analysis left blank analyses samples replace TRUE valid_analysis undefined one , samples, error returned","code":""},{"path":"https://slinghub.github.io/midar/reference/read_metadata_midarxlm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads and parses metadata provided by the MSOrganizer EXCEL template. — read_metadata_midarxlm","text":"","code":"read_metadata_midarxlm(path, trim_ws = TRUE)"},{"path":"https://slinghub.github.io/midar/reference/read_metadata_midarxlm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads and parses metadata provided by the MSOrganizer EXCEL template. — read_metadata_midarxlm","text":"path File path MSOrganizer EXCEL template (*.xlm) trim_ws Trim white spaces double spaces","code":""},{"path":"https://slinghub.github.io/midar/reference/read_metadata_midarxlm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads and parses metadata provided by the MSOrganizer EXCEL template. — read_metadata_midarxlm","text":"list tibbles containing different metadata","code":""},{"path":"https://slinghub.github.io/midar/reference/read_msorganizer_xlm.html","id":null,"dir":"Reference","previous_headings":"","what":"Import metadata from the MSOrganizer template (.XLM) — read_msorganizer_xlm","title":"Import metadata from the MSOrganizer template (.XLM) — read_msorganizer_xlm","text":"Import metadata MSOrganizer template (.XLM)","code":""},{"path":"https://slinghub.github.io/midar/reference/read_msorganizer_xlm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import metadata from the MSOrganizer template (.XLM) — read_msorganizer_xlm","text":"","code":"read_msorganizer_xlm(data, filename)"},{"path":"https://slinghub.github.io/midar/reference/read_msorganizer_xlm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import metadata from the MSOrganizer template (.XLM) — read_msorganizer_xlm","text":"data MidarExperiment object filename file name path","code":""},{"path":"https://slinghub.github.io/midar/reference/read_msorganizer_xlm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import metadata from the MSOrganizer template (.XLM) — read_msorganizer_xlm","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/read_table_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads a wide CSV or XLSX sheet with Feature Values — read_table_wide","title":"Reads a wide CSV or XLSX sheet with Feature Values — read_table_wide","text":"Reads wide CSV XLSX sheet Feature Values","code":""},{"path":"https://slinghub.github.io/midar/reference/read_table_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads a wide CSV or XLSX sheet with Feature Values — read_table_wide","text":"","code":"read_table_wide(data, file, field, sheet = \"\", silent = FALSE)"},{"path":"https://slinghub.github.io/midar/reference/read_table_wide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads a wide CSV or XLSX sheet with Feature Values — read_table_wide","text":"data MidarExperiment() file File name path plain wide-format CSV XLS file field Peak parameter (e.g. Area, RT) sheet Sheet name silent Suppress messages","code":""},{"path":"https://slinghub.github.io/midar/reference/read_table_wide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads a wide CSV or XLSX sheet with Feature Values — read_table_wide","text":"tibble long format","code":""},{"path":"https://slinghub.github.io/midar/reference/report_write_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Export any parameter to a wide-format table — report_write_csv","title":"Export any parameter to a wide-format table — report_write_csv","text":"Export parameter wide-format table","code":""},{"path":"https://slinghub.github.io/midar/reference/report_write_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export any parameter to a wide-format table — report_write_csv","text":"","code":"report_write_csv(   data = NULL,   path,   variable = c(\"area\", \"height\", \"intensity\", \"norm_intensity\", \"response\", \"conc\",     \"conc_raw\", \"rt\", \"fwhm\"),   filter_data,   qc_types = c(\"SPL\", \"BQC\", \"TQC\", \"NIST\", \"LTR\", \"PBLK\", \"SBLK\", \"UBLK\", \"MBLK\"),   include_qualifier = NA,   include_istd = NA,   add_qctype = NA )"},{"path":"https://slinghub.github.io/midar/reference/report_write_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export any parameter to a wide-format table — report_write_csv","text":"data MidarExperiment object path File name path exported CSV fil variable Variable exported filter_data Use QC-filtered data, based criteria set via qc_apply_feature_filter(). Overwrites include_qualifier include_istd. qc_types QC type plot. qc_types us NA NULL, available QC types plotted. include_qualifier Include qualifier features. used filter_data = TRUE applied. include_istd Include internal standard features. Default TRUE. used filter_data = TRUE applied. add_qctype Add QC type column","code":""},{"path":"https://slinghub.github.io/midar/reference/report_write_qc_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Save the QC table to a CSV file — report_write_qc_metrics","title":"Save the QC table to a CSV file — report_write_qc_metrics","text":"Save QC table CSV file","code":""},{"path":"https://slinghub.github.io/midar/reference/report_write_qc_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save the QC table to a CSV file — report_write_qc_metrics","text":"","code":"report_write_qc_metrics(data = NULL, path)"},{"path":"https://slinghub.github.io/midar/reference/report_write_qc_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save the QC table to a CSV file — report_write_qc_metrics","text":"data MidarExperiment object path File name path exported CSV file","code":""},{"path":"https://slinghub.github.io/midar/reference/report_write_qc_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save the QC table to a CSV file — report_write_qc_metrics","text":"tibble exported dataset","code":""},{"path":"https://slinghub.github.io/midar/reference/report_write_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes all a data processing report to an EXCEL file — report_write_xlsx","title":"Writes all a data processing report to an EXCEL file — report_write_xlsx","text":"Writes data processing report EXCEL file","code":""},{"path":"https://slinghub.github.io/midar/reference/report_write_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes all a data processing report to an EXCEL file — report_write_xlsx","text":"","code":"report_write_xlsx(data = NULL, path)"},{"path":"https://slinghub.github.io/midar/reference/report_write_xlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes all a data processing report to an EXCEL file — report_write_xlsx","text":"data MidarExperiment object path File name path Excel file","code":""},{"path":"https://slinghub.github.io/midar/reference/saveQCinfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Save the QC table to a CSV file — saveQCinfo","title":"Save the QC table to a CSV file — saveQCinfo","text":"Save QC table CSV file","code":""},{"path":"https://slinghub.github.io/midar/reference/saveQCinfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save the QC table to a CSV file — saveQCinfo","text":"","code":"saveQCinfo(data, filename)"},{"path":"https://slinghub.github.io/midar/reference/saveQCinfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save the QC table to a CSV file — saveQCinfo","text":"data MidarExperiment object filename File name path exported CSV file","code":""},{"path":"https://slinghub.github.io/midar/reference/set_analysis_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the analysis order — set_analysis_order","title":"Set the analysis order — set_analysis_order","text":"Sets analysis order (sequence), based either () analysis timestamp, available, (ii) order analysis appeared imported raw data file, (iii) order analyses defined Analysis metadata","code":""},{"path":"https://slinghub.github.io/midar/reference/set_analysis_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the analysis order — set_analysis_order","text":"","code":"set_analysis_order(data = NULL, analysis_sequence = \"default\")"},{"path":"https://slinghub.github.io/midar/reference/set_analysis_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the analysis order — set_analysis_order","text":"data MidarExperiment object analysis_sequence Must : \"timestamp\", \"resultfile\" \"metadata\". Defines analysis order determined. Default \"timestamp\", available sequence analysis results used.","code":""},{"path":"https://slinghub.github.io/midar/reference/set_analysis_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the analysis order — set_analysis_order","text":"MidarExperiment object","code":""},{"path":"https://slinghub.github.io/midar/reference/set_analysis_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the analysis order — set_analysis_order","text":"","code":"file_path <- system.file(\"extdata\", \"sPerfect_MRMkit.tsv\", package = \"midar\") mexp <- MidarExperiment() mexp <- data_import_mrmkit(mexp, path = file_path, use_metadata = TRUE) #> ✔ Imported 499 analyses with 503 features #> ℹ `feature_area` selected as default feature intensity. Modify with `data_set_intensity_var()`. #> ✔ Analysis metadata associated with 499 analyses. #> ✔ Feature metadata associated with 503 features. mexp <- set_analysis_order(mexp, \"timestamp\")"},{"path":"https://slinghub.github.io/midar/reference/volcano_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Get FC and p values from a t test contrast — volcano_plot","title":"Get FC and p values from a t test contrast — volcano_plot","text":"Get FC p values t test contrast","code":""},{"path":"https://slinghub.github.io/midar/reference/volcano_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get FC and p values from a t test contrast — volcano_plot","text":"","code":"volcano_plot(   d_FC,   p_adjust,   sig_FC_min,   sig_p_value_min,   symmetric_x,   x_min,   x_max,   point_size,   point_transparency,   scale_factor,   scale_factor_species_label,   squared = TRUE,   axistick = 1 )"},{"path":"https://slinghub.github.io/midar/reference/volcano_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get FC and p values from a t test contrast — volcano_plot","text":"d_FC data.frame feature_id, p log2FC p_adjust calculate use FDR sig_FC_min |FC| treshold sig_p_value_min P value treshold symmetric_x make x axis symetric around 0 x_min x min x_max x max point_size point size point_transparency point alpha scale_factor scale factor fonts scale_factor_species_label scale factor point labels squared make plot square axistick axis ticks","code":""},{"path":"https://slinghub.github.io/midar/reference/volcano_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get FC and p values from a t test contrast — volcano_plot","text":"tibble p values, fdr log2FC","code":""},{"path":"https://slinghub.github.io/midar/reference/writeReportXLS.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes all a data processing report to an EXCEL file — writeReportXLS","title":"Writes all a data processing report to an EXCEL file — writeReportXLS","text":"Writes data processing report EXCEL file","code":""},{"path":"https://slinghub.github.io/midar/reference/writeReportXLS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes all a data processing report to an EXCEL file — writeReportXLS","text":"","code":"report_write_xlsx(data, filename)"},{"path":"https://slinghub.github.io/midar/reference/writeReportXLS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes all a data processing report to an EXCEL file — writeReportXLS","text":"data MidarExperiment object filename File name path Excel file","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://slinghub.github.io/midar/news/index.html","id":"midar-0100000","dir":"Changelog","previous_headings":"","what":"midar 0.1.0.0000","title":"midar 0.1.0.0000","text":"Initial version","code":""}]
